var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutCandidateComponent.html",[0,0.908,1,1.193]],["body/components/AboutCandidateComponent.html",[0,0.966,1,1.126,2,0.892,3,0.098,4,0.086,5,2.251,6,0.605,7,0.605,8,0.605,9,0.086,10,3.023,11,2.382,12,1.002,13,0.135,14,3.023,15,2.038,16,1.721,17,2.038,18,0.961,19,1.483,20,0.605,21,2.353,22,2.012,23,2.038,24,1.039,25,2.679,26,1.039,27,2.038,28,0.135,29,0.415,30,0.449,31,0.513,32,1.619,33,0.83,34,0.857,35,1.187,36,1.187,37,0.32,38,0.027,39,0.519,40,0.233,41,0.722,42,0.63,43,1.232,44,3.179,45,2.038,46,1.356,47,2.038,48,2.038,49,2.038,50,2.038,51,2.038,52,2.038,53,2.038,54,2.038,55,3.179,56,4.415,57,2.038,58,2.038,59,2.038,60,1.721,61,2.038,62,2.038,63,2.038,64,2.038,65,0.83,66,2.038,67,2.038,68,4.11,69,2.038,70,2.038,71,2.038,72,1.592,73,3.909,74,3.301,75,3.909,76,1.187,77,1.356,78,2.038,79,2.038,80,2.038,81,2.038,82,2.038,83,2.038,84,2.038,85,2.038,86,2.038,87,1.721,88,1.512,89,1.721,90,1.721,91,2.038,92,2.038,93,2.038,94,3.179,95,2.038,96,2.038,97,2.038,98,2.038,99,2.038,100,2.038,101,4.415,102,3.179,103,3.909,104,4.415,105,2.038,106,2.038,107,2.038,108,2.038,109,2.359,110,2.359,111,5.073,112,3.186,113,4.415,114,3.647,115,2.038,116,2.038,117,2.038,118,2.038,119,2.038,120,2.038,121,2.038,122,4.415,123,2.038,124,2.038,125,3.375,126,2.038,127,2.038,128,2.038,129,2.038,130,2.038,131,3.179,132,3.179,133,2.038,134,2.038,135,3.179,136,2.038,137,2.038,138,2.038,139,2.038,140,2.038,141,3.179,142,2.038,143,3.179,144,3.909,145,2.038,146,2.038,147,3.179,148,2.038,149,2.038,150,2.038,151,2.038,152,2.038,153,3.909,154,2.038,155,2.038,156,2.359,157,2.038,158,0.589,159,2.038,160,1.512,161,2.038,162,1.721,163,1.721,164,2.038,165,2.038,166,4.415,167,2.038,168,2.038,169,2.038,170,2.038,171,2.038,172,2.038,173,1.512,174,3.179,175,2.038,176,2.038,177,3.179,178,3.179,179,1.512,180,2.038,181,2.038,182,2.038,183,2.038,184,2.038,185,2.038,186,2.038,187,2.038,188,2.038,189,2.038,190,2.038,191,3.179,192,2.038,193,2.038,194,2.038,195,2.038,196,2.038,197,2.038,198,2.038,199,2.038,200,2.038,201,2.038,202,2.038,203,2.038,204,2.038,205,2.038,206,2.038,207,2.038,208,2.038,209,2.038,210,2.038,211,2.038,212,2.038,213,2.038,214,2.038,215,2.038,216,2.038,217,2.038,218,2.038,219,2.038,220,2.038,221,2.038,222,2.038,223,2.038,224,2.038,225,0.961,226,2.038,227,2.038,228,1.187,229,0.263,230,0.242,231,0.63,232,0.519,233,0.717,234,1.187,235,0.098,236,0.26,237,0.88,238,2.038,239,2.038,240,2.038,241,2.038,242,2.038,243,2.038,244,2.038,245,2.038,246,2.038,247,2.038,248,2.038,249,2.038,250,2.038,251,2.038,252,2.038,253,2.038,254,2.038,255,2.038,256,2.038,257,2.038,258,2.038,259,2.038,260,2.038,261,2.038,262,2.038,263,1.187,264,3.589,265,2.4,266,2.9,267,4.474,268,1.187,269,2.262,270,4.066,271,1.187,272,1.187,273,1.187,274,1.187,275,2.701,276,3.286,277,2.685,278,2.262,279,4.353,280,3.186,281,1.173,282,2.679,283,0.83,284,3.071,285,2.783,286,2.964,287,4.183,288,2.038,289,2.528,290,4.788,291,2.359,292,2.262,293,1.187,294,4.183,295,4.183,296,1.187,297,1.002,298,1.187,299,1.187,300,1.002,301,1.187,302,1.187,303,2.038,304,1.721,305,3.58,306,2.382,307,2.262,308,2.038,309,1.483,310,1.356,311,1.921,312,3.276,313,3.023,314,2.262,315,1.002,316,1.187,317,2.038,318,1.187,319,2.038,320,1.002,321,1.512,322,1.187,323,1.187,324,0.88,325,1.993,326,1.187,327,1.187,328,1.187,329,1.002,330,2.038,331,3.58,332,1.187,333,2.443,334,3.301,335,3.909,336,3.552,337,1.721,338,0.79,339,1.187,340,1.721,341,1.187,342,3.179,343,3.58,344,0.45,345,2.038,346,2.038,347,4.615,348,3.909,349,1.721,350,2.038,351,1.512,352,4.183,353,1.002,354,1.002,355,1.187,356,1.187,357,2.038,358,1.002,359,2.038,360,3.58,361,3.179,362,1.002,363,2.038,364,1.187,365,1.187,366,1.187,367,2.679,368,1.187,369,2.038,370,3.179,371,1.002,372,2.038,373,2.038,374,2.038,375,1.187,376,1.187,377,1.002,378,1.187,379,1.187,380,1.002,381,2.679,382,1.187,383,0.79,384,2.038,385,1.187,386,0.88,387,3.58,388,1.187,389,1.002,390,1.002,391,1.187,392,1.187,393,3.58,394,1.187,395,1.187,396,1.002,397,1.187,398,1.721,399,2.679,400,1.187,401,1.187,402,1.187,403,1.187,404,1.187,405,1.187,406,1.187,407,1.187,408,1.187,409,1.187,410,1.187,411,2.038,412,1.187,413,1.002,414,1.187,415,1.187,416,1.187,417,0.45,418,1.039,419,1.039,420,0.605,421,1.5,422,0.605,423,0.479,424,0.605,425,0.45,426,0.605,427,0.45,428,0.605,429,0.42,430,0.299,431,0.605,432,0.45,433,0.605,434,0.45,435,0.605,436,0.42,437,0.279,438,0.242,439,0.605,440,0.605,441,0.008,442,0.008]],["title/interfaces/ApiInterface.html",[443,0.422,444,1.278]],["body/interfaces/ApiInterface.html",[3,0.283,4,0.249,9,0.249,13,0.53,28,0.391,30,0.661,31,1.17,34,1.594,37,1.594,38,0.027,40,0.734,158,1.832,229,0.283,235,0.488,423,1.388,441,0.018,442,0.018,443,0.806,444,1.763,445,1.058,446,1.894,447,1.747,448,2.807,449,1.646,450,1.744,451,2.191,452,3.922,453,3.922,454,3.922,455,3.922,456,3.922,457,2.891,458,1.508,459,3.423,460,1.827,461,1.827,462,2.54,463,3.108,464,2.891,465,2.883,466,3.129,467,3.423,468,1.87,469,2.891,470,1.827,471,3.423,472,2.891,473,2.891,474,3.423,475,2.891,476,3.423,477,2.069,478,1.499,479,1.341,480,1.744,481,2.034,482,1.894,483,2.069,484,1.763,485,2.368,486,0.862,487,2.807,488,1.894,489,2.069,490,2.069,491,2.034,492,1.894,493,1.213,494,2.069,495,2.069,496,1.213,497,2.069,498,2.069,499,0.862,500,2.069,501,1.615,502,2.069,503,2.069,504,2.069,505,1.745,506,1.615,507,2.069,508,1.615,509,1.615,510,1.745,511,2.069,512,2.069,513,2.069,514,2.069,515,2.069,516,2.069,517,2.069,518,2.069]],["title/modules/ApiProxyModule.html",[519,1.114,520,2.034]],["body/modules/ApiProxyModule.html",[3,0.373,4,0.329,9,0.329,13,0.516,38,0.027,158,1.814,229,0.533,230,0.92,235,0.373,236,0.989,441,0.021,442,0.021,447,1.718,449,1.969,451,2.622,519,1.839,520,3.359,521,1.84,522,4.518,523,4.518,524,4.518,525,5.559,526,2.434,527,5.559,528,3.076,529,4.125,530,3.006,531,3.006,532,4.518,533,2.73,534,2.5,535,4.518,536,2.73,537,2.5,538,2.73,539,4.518,540,4.518,541,4.518,542,4.518,543,4.518,544,4.518,545,2.303]],["title/injectables/ApiResourceService.html",[531,2.24,546,1.278]],["body/injectables/ApiResourceService.html",[3,0.264,4,0.233,9,0.233,13,0.365,18,1.51,28,0.365,29,0.903,31,1.117,33,1.304,34,1.652,37,1.731,38,0.027,40,0.699,41,1.134,42,0.989,158,1.587,229,0.477,230,0.652,235,0.264,236,0.701,423,1.403,441,0.017,442,0.017,444,1.684,452,3.746,453,3.746,454,3.746,455,3.746,456,3.746,457,3.746,458,1.483,460,1.846,461,1.846,462,3.292,463,3.305,464,2.703,465,3.045,466,3.305,468,1.818,469,3.746,470,1.573,472,3.746,473,2.703,475,3.746,477,2.681,478,1.402,480,1.91,486,0.806,493,1.134,501,1.51,509,1.51,531,2.952,546,1.684,547,1.935,548,2.703,549,4.437,550,3.746,551,4.437,552,3.202,553,5.091,554,4.437,555,2.703,556,3.202,557,3.202,558,3.202,559,3.202,560,3.202,561,3.202,562,2.952,563,4.437,564,3.746,565,1.772,566,2.375,567,2.13,568,2.703,569,2.703,570,2.375,571,3.202,572,2.703,573,1.632,574,3.202,575,2.775,576,3.202,577,3.202,578,3.202,579,3.202,580,3.202,581,3.202,582,3.202]],["title/components/AppComponent.html",[0,0.908,425,1.278]],["body/components/AppComponent.html",[0,1.693,1,1.246,2,2.503,3,0.29,4,0.256,5,1.793,6,1.793,7,1.793,8,1.793,9,0.256,13,0.401,18,2.232,19,2.958,20,1.793,21,3.297,22,2.634,24,2.412,26,2.412,28,0.401,29,0.963,30,0.441,31,1.191,32,3.455,33,1.927,34,1.542,37,0.949,38,0.027,39,2.071,40,0.54,41,1.246,42,1.087,173,2.61,229,0.391,230,0.716,231,1.087,235,0.29,236,0.77,265,2.341,275,2.412,276,2.34,309,1.946,311,2.125,312,2.61,321,2.61,324,2.61,325,2.412,333,1.946,383,2.34,417,1.335,418,2.412,419,2.412,420,1.793,421,2.697,422,1.793,423,1.255,424,1.793,425,2.171,426,1.793,427,1.335,428,1.793,429,1.246,430,0.886,431,1.793,432,1.335,433,1.793,434,1.335,435,1.793,436,1.246,437,0.826,438,0.716,439,1.793,440,1.793,441,0.018,442,0.018,449,1.676,460,1.087,461,1.087,521,1.927,570,3.51,583,2.97,584,2.859,585,3.148,586,3.995,587,3.995,588,5.346,589,4.731,590,3.966,591,5.346,592,4.731,593,3.517,594,3.455,595,4.731,596,3.517,597,3.995,598,2.618,599,4.731,600,3.517,601,2.61,602,2.61,603,3.517,604,3.517,605,3.517,606,3.517,607,3.517,608,3.517,609,2.61,610,3.517,611,3.517,612,2.34,613,3.517,614,2.97,615,3.517,616,3.517,617,3.517]],["title/modules/AppModule.html",[519,1.114,618,2.24]],["body/modules/AppModule.html",[1,2.219,3,0.311,4,0.274,9,0.274,11,2.507,13,0.43,22,1.534,38,0.027,229,0.551,230,0.767,235,0.311,236,0.824,417,1.43,425,2.548,441,0.019,442,0.019,519,1.83,520,3.786,521,1.534,528,2.74,536,3.343,537,2.74,538,3.343,545,1.921,566,2.795,584,2.992,602,2.795,618,4.56,619,2.085,620,3.343,621,3.181,622,3.181,623,3.181,624,3.181,625,3.181,626,3.786,627,3.467,628,3.688,629,3.295,630,2.507,631,2.085,632,3.767,633,3.181,634,4.181,635,4.952,636,4.181,637,2.795,638,3.181,639,3.767,640,4.952,641,3.767,642,4.181,643,2.795,644,3.767,645,4.952,646,3.295,647,1.921,648,2.795,649,3.181,650,3.181,651,3.767,652,3.767,653,3.767]],["title/modules/AppRoutingModule.html",[519,1.114,626,2.034]],["body/modules/AppRoutingModule.html",[1,1.607,3,0.375,4,0.33,9,0.33,11,3.019,22,1.848,38,0.027,72,1.848,229,0.498,230,0.924,235,0.375,236,0.993,438,1.135,441,0.021,442,0.021,449,1.607,519,1.844,521,1.848,528,3.084,537,2.511,545,2.313,626,3.368,646,3.708,647,2.313,649,3.831,654,4.537,655,3.831,656,4.537,657,3.645,658,4.135,659,3.831,660,3.831,661,4.537,662,5.573,663,3.366,664,4.537,665,4.706,666,5.573,667,5.573,668,4.537,669,4.537,670,4.537,671,4.537,672,4.537,673,4.537,674,4.537]],["title/interceptors/Aq54HttpInterceptor.html",[628,2.034,675,2.843]],["body/interceptors/Aq54HttpInterceptor.html",[3,0.315,4,0.278,9,0.278,13,0.436,18,1.802,28,0.436,29,1.017,31,1.258,33,1.556,34,1.502,37,1.348,38,0.027,40,0.636,46,3.325,158,1.443,229,0.506,230,0.778,235,0.315,236,0.836,423,1.174,441,0.019,442,0.019,450,1.653,460,1.544,461,1.544,463,2.548,478,1.672,480,1.842,526,2.188,546,1.897,555,4.22,566,2.834,575,2.188,590,3.708,594,3.57,628,3.02,663,4.383,676,3.82,677,4.988,678,3.226,679,6.5,680,4.988,681,5.569,682,3.82,683,3.82,684,4.997,685,5.908,686,5.908,687,5.908,688,3.82,689,4.997,690,5.908,691,4.997,692,4.997,693,4.997,694,4.997,695,3.708,696,3.82,697,3.82,698,3.82,699,3.82,700,3.82,701,3.82,702,3.82,703,3.82,704,3.82,705,3.82,706,3.82,707,3.82,708,3.82,709,4.997,710,3.82,711,3.82,712,3.82,713,3.82]],["title/interfaces/ChartAnimation.html",[443,0.422,714,1.474]],["body/interfaces/ChartAnimation.html",[3,0.319,4,0.281,9,0.281,13,0.441,28,0.441,29,1.024,30,0.806,31,0.972,38,0.027,40,0.733,65,1.573,225,2.374,229,0.416,231,1.833,232,1.69,235,0.521,281,1.69,283,1.573,344,1.466,430,1.267,437,1.182,438,1.024,441,0.019,442,0.019,443,0.806,445,1.193,458,0.845,470,1.833,479,1.713,486,0.972,496,1.368,499,1.409,526,2.203,714,2.203,715,1.968,716,2.565,717,3.283,718,4.249,719,2.136,720,1.69,721,2.136,722,2.136,723,2.136,724,2.136,725,1.968,726,1.968,727,2.785,728,1.821,729,2.854,730,1.573,731,2.136,732,1.821,733,1.821,734,1.821,735,1.821,736,1.69,737,2.101,738,2.136,739,2.854,740,1.573,741,2.136,742,2.136,743,1.69,744,2.136,745,2.136,746,2.136,747,1.821,748,2.136,749,2.136,750,2.136,751,2.136,752,2.136,753,2.136,754,2.136]],["title/interfaces/ChartBarDataInterface.html",[443,0.422,730,1.371]],["body/interfaces/ChartBarDataInterface.html",[3,0.312,4,0.275,9,0.275,13,0.431,28,0.431,29,1.009,30,0.813,31,0.95,38,0.027,40,0.748,43,3.346,65,2.395,225,1.78,229,0.409,231,1.711,232,1.652,235,0.518,281,1.652,283,1.537,344,1.433,430,1.248,437,1.164,438,1.009,441,0.019,442,0.019,443,0.801,445,1.166,458,1.211,470,1.817,479,1.599,486,0.95,496,1.961,499,1.394,526,2.17,714,1.652,715,1.924,716,1.924,717,2.088,718,4.186,719,2.088,720,1.652,721,2.088,722,2.088,723,2.088,724,2.088,725,1.924,726,1.924,727,2.743,728,2.338,729,2.998,730,2.019,731,2.088,732,2.773,733,1.78,734,1.78,735,1.78,736,1.652,737,2.083,738,2.088,739,2.823,740,1.537,741,2.088,742,2.088,743,1.652,744,2.088,745,2.088,746,2.088,747,1.78,748,2.088,749,2.088,750,2.088,751,2.088,752,2.088,753,2.088,754,2.088]],["title/components/ChartsComponent.html",[0,0.908,427,1.278]],["body/components/ChartsComponent.html",[0,1.554,1,0.633,2,1.254,3,0.148,4,0.13,5,0.911,6,0.911,7,0.911,8,0.911,9,0.13,13,0.327,18,1.351,19,1.985,20,0.911,21,2.752,22,2.199,24,1.461,26,1.461,28,0.204,29,0.835,30,0.359,31,0.721,32,2.479,33,0.728,34,1.554,37,0.967,38,0.027,39,1.796,40,0.658,41,1.912,42,1.668,46,2.988,68,2.73,72,1.829,112,1.906,114,1.189,125,1.189,229,0.339,230,0.364,231,1.617,235,0.148,236,0.391,264,3.482,265,2.204,266,2.126,267,1.509,269,3.792,270,1.326,275,0.911,276,1.189,277,4.047,279,3.883,280,1.189,281,1.254,283,0.728,284,2.988,285,2.73,286,2.824,289,1.731,291,2.126,292,1.509,297,1.509,300,1.509,304,1.509,306,2.73,307,1.509,309,1.586,310,1.906,311,2.479,314,2.419,315,1.509,320,3.028,325,0.911,329,3.028,333,0.989,334,1.509,336,1.326,337,1.509,338,1.189,340,2.419,351,3.044,353,1.509,354,1.509,377,2.419,380,1.509,383,1.906,386,3.332,389,2.419,390,3.028,398,1.509,417,0.678,418,1.461,419,1.461,420,0.911,421,2.261,422,0.911,423,1.055,424,0.911,425,0.678,426,0.911,427,1.558,428,0.911,429,0.633,430,0.721,431,0.911,432,0.678,433,0.911,434,0.678,435,0.911,436,0.633,437,0.842,438,0.835,439,0.911,440,0.911,441,0.011,442,0.011,447,0.885,450,0.591,458,1.261,460,1.108,461,1.108,465,2.092,466,2.27,468,1.486,484,1.558,499,0.721,572,1.509,573,0.911,575,1.796,586,1.509,597,3.464,598,1.586,631,0.989,647,0.911,658,2.126,665,2.419,736,0.782,737,0.633,755,1.326,756,2.126,757,3.586,758,2.865,759,2.865,760,2.865,761,2.865,762,2.419,763,2.126,764,2.419,765,2.126,766,1.787,767,4.047,768,2.865,769,1.985,770,2.419,771,1.787,772,1.787,773,1.509,774,1.787,775,1.787,776,1.787,777,3.028,778,2.865,779,1.787,780,3.586,781,1.787,782,4.793,783,4.103,784,1.787,785,1.787,786,2.865,787,2.865,788,1.787,789,2.865,790,2.126,791,2.865,792,2.865,793,2.865,794,5.218,795,4.419,796,1.787,797,1.787,798,1.787,799,2.865,800,2.865,801,1.731,802,2.126,803,1.787,804,3.464,805,2.126,806,1.787,807,3.044,808,1.787,809,1.787,810,1.787,811,1.787,812,1.787,813,1.787,814,1.787,815,1.509,816,1.787,817,1.787,818,1.787,819,1.787,820,1.787,821,1.787,822,1.787,823,1.509,824,1.787,825,1.787,826,1.787,827,1.787,828,1.787,829,1.787,830,1.787,831,1.509,832,2.865,833,2.865,834,2.865,835,2.865,836,1.787,837,2.865,838,2.865,839,1.787,840,1.326,841,1.326,842,1.787,843,1.326,844,1.787,845,1.787,846,1.787,847,1.351,848,1.787,849,1.787,850,1.787,851,1.787,852,1.787,853,1.787,854,1.787,855,1.787,856,1.326,857,1.787,858,1.787,859,1.787,860,2.865,861,1.787,862,1.787,863,1.787,864,1.787,865,2.865,866,1.787,867,1.787,868,1.787,869,1.787,870,2.865,871,2.865,872,2.865,873,2.865,874,1.787,875,1.787,876,1.787,877,3.586,878,3.586,879,2.865,880,1.787,881,3.028,882,5.934,883,2.865,884,1.787,885,2.865,886,2.661,887,1.787,888,2.865,889,1.787,890,1.787,891,1.787,892,1.787,893,1.787,894,1.787,895,1.787,896,1.787,897,1.787,898,1.787,899,1.787,900,4.103,901,2.865,902,1.787,903,1.787,904,1.787,905,1.787,906,1.787,907,1.787,908,2.865,909,2.865,910,2.865,911,1.787,912,1.509,913,1.787,914,2.865,915,1.509,916,1.787,917,2.865,918,1.787,919,2.865,920,1.787,921,1.787,922,1.787,923,1.787,924,1.787,925,1.787]],["title/interfaces/CurrentValuesSchema.html",[443,0.422,486,0.848]],["body/interfaces/CurrentValuesSchema.html",[3,0.321,4,0.282,9,0.282,13,0.576,28,0.443,29,1.028,30,0.704,38,0.027,40,0.744,158,1.857,229,0.321,235,0.509,441,0.019,442,0.019,443,0.818,444,1.473,445,1.199,446,2.148,447,1.56,448,2.345,449,1.375,450,1.67,451,1.831,458,1.466,463,1.979,468,1.67,470,1.735,478,1.699,479,1.621,480,1.966,481,2.457,482,2.794,483,3.051,484,2.131,485,3.221,486,1.271,487,3.724,488,3.289,489,2.345,490,2.345,491,2.211,492,2.148,493,1.375,494,2.345,495,2.345,496,1.988,497,2.345,498,2.345,499,0.977,500,2.345,501,1.831,502,2.345,503,2.345,504,2.345,505,1.979,506,1.831,507,2.345,508,1.831,509,1.831,510,1.979,511,2.345,512,2.345,513,2.345,514,2.345,515,2.345,516,2.345,517,2.345,518,2.345]],["title/interfaces/DiferedComponentInterface.html",[443,0.422,743,1.474]],["body/interfaces/DiferedComponentInterface.html",[3,0.3,4,0.264,9,0.264,13,0.415,28,0.415,30,0.816,31,1.368,34,1.466,37,1.466,38,0.027,39,2.117,40,0.708,65,1.481,225,1.715,229,0.399,231,1.68,232,1.591,235,0.512,281,1.591,283,1.481,344,1.38,423,1.276,430,1.368,437,1.136,438,0.985,441,0.019,442,0.019,443,0.794,445,1.123,458,0.795,460,1.68,461,1.68,470,1.79,479,1.569,486,0.915,496,1.288,499,1.459,526,2.38,714,1.591,715,1.853,716,1.853,717,2.012,719,2.012,720,1.591,721,2.012,722,2.012,723,2.012,724,2.012,725,1.853,726,1.853,727,2.676,728,1.715,729,2.954,730,1.481,731,2.012,732,1.715,733,1.715,734,1.715,735,1.715,736,1.591,737,2.137,738,2.012,739,2.954,740,1.481,741,2.012,742,2.012,743,2.117,744,2.012,745,2.012,746,2.012,747,1.715,748,2.012,749,2.012,750,2.012,751,2.012,752,2.012,753,2.012,754,2.012,926,4.084,927,4.084,928,4.084,929,3.635,930,3.635,931,4.032,932,3.635,933,3.635,934,3.635,935,3.635]],["title/components/DiferredDataChartComponent.html",[0,0.908,429,1.193]],["body/components/DiferredDataChartComponent.html",[0,1.078,1,0.508,2,1.048,3,0.118,4,0.104,5,0.731,6,0.731,7,0.731,8,0.731,9,0.104,16,2.021,18,1.129,19,1.325,20,0.731,21,2.543,22,2.032,24,1.22,26,1.22,28,0.164,29,0.487,30,0.857,31,0.603,32,2.173,33,0.975,34,1.634,37,1.236,38,0.027,39,1.891,40,0.686,41,1.986,42,1.783,43,1.861,65,0.975,68,3.049,72,2.547,77,0.955,109,2.285,110,2.966,112,0.955,114,2.393,125,2.66,156,2.285,158,0.691,179,1.776,229,0.357,230,0.292,231,1.733,232,0.628,233,2.61,235,0.118,236,0.314,237,1.776,265,1.048,275,1.57,283,0.975,286,1.833,309,1.325,325,1.57,344,1.518,417,1.365,418,1.22,419,1.22,420,0.731,421,1.886,422,0.731,423,0.939,424,0.731,425,0.545,426,0.731,427,0.545,428,0.731,429,1.274,430,1.209,431,0.731,432,0.545,433,0.731,434,0.545,435,0.731,436,0.508,437,0.337,438,0.292,439,0.731,440,0.731,441,0.009,442,0.009,447,0.74,449,1.274,450,0.792,451,0.677,458,0.945,460,1.235,461,0.952,465,0.731,466,0.794,468,0.475,479,0.691,480,0.792,481,1.048,484,0.909,488,1.99,491,1.048,493,0.848,506,1.696,508,1.696,533,1.861,562,1.593,565,0.794,573,1.22,575,1.048,587,2.021,598,1.325,602,1.064,609,1.064,612,0.955,647,0.731,730,0.975,732,1.886,733,1.886,734,1.696,735,2.037,740,0.975,743,1.048,763,1.776,764,2.021,765,1.776,767,2.601,769,0.794,770,2.021,773,1.211,790,1.776,794,3.036,795,3.036,801,1.446,815,1.211,823,1.211,831,1.211,840,1.776,841,1.776,843,2.285,847,2.037,856,1.776,926,3.036,927,2.021,928,3.036,936,5.154,937,4.062,938,1.064,939,2.021,940,2.601,941,2.021,942,3.08,943,2.021,944,2.61,945,2.394,946,2.021,947,2.394,948,2.61,949,1.776,950,3.036,951,2.668,952,1.211,953,1.435,954,1.435,955,4.319,956,1.593,957,2.601,958,3.596,959,3.204,960,2.394,961,1.593,962,2.021,963,2.668,964,1.435,965,1.435,966,2.394,967,2.394,968,3.596,969,2.394,970,1.435,971,1.435,972,2.394,973,2.394,974,2.394,975,1.435,976,1.435,977,1.776,978,1.435,979,4.054,980,2.394,981,3.036,982,2.394,983,2.021,984,4.319,985,2.394,986,1.446,987,2.394,988,2.394,989,2.394,990,2.021,991,1.435,992,2.394,993,2.021,994,2.021,995,1.435,996,1.211,997,2.394,998,2.394,999,1.435,1000,1.435,1001,1.435,1002,1.211,1003,1.435,1004,1.435,1005,1.435,1006,1.435,1007,1.435,1008,1.435,1009,1.593,1010,1.435,1011,1.064,1012,1.064,1013,0.955,1014,1.064,1015,1.064,1016,0.955,1017,1.435,1018,1.435,1019,1.446,1020,1.435,1021,1.211,1022,1.211,1023,1.435,1024,1.435,1025,1.435,1026,1.435,1027,1.211,1028,1.211,1029,1.211,1030,1.435,1031,1.435,1032,1.435,1033,1.435,1034,1.435,1035,1.435,1036,1.435,1037,1.435,1038,1.435,1039,1.446,1040,1.435,1041,1.435,1042,1.446,1043,1.435,1044,2.394,1045,2.394,1046,1.435,1047,1.435,1048,2.394,1049,2.394,1050,1.211,1051,1.435,1052,0.955,1053,1.435,1054,1.435,1055,1.435,1056,1.435,1057,1.435,1058,1.435,1059,1.435,1060,1.446,1061,1.446,1062,1.696,1063,1.446,1064,1.435,1065,1.435,1066,1.435,1067,1.211,1068,1.435,1069,1.435,1070,1.435,1071,1.435,1072,1.435,1073,1.435,1074,1.435,1075,1.435,1076,1.435,1077,1.435,1078,1.435,1079,1.435,1080,1.435,1081,1.435,1082,1.435,1083,1.435,1084,1.435,1085,1.435,1086,1.435,1087,1.435,1088,1.435,1089,1.435,1090,1.435,1091,1.435,1092,1.435,1093,1.435,1094,1.435,1095,1.435,1096,1.435,1097,1.435,1098,1.435,1099,1.435,1100,2.394,1101,2.394,1102,2.394,1103,1.593,1104,2.394,1105,2.394,1106,2.394,1107,2.394,1108,2.394,1109,2.601,1110,2.601,1111,2.601,1112,1.435,1113,2.021,1114,2.021,1115,2.021,1116,2.021,1117,2.021,1118,2.021,1119,3.08,1120,2.021,1121,2.601,1122,2.021,1123,2.021,1124,2.394,1125,3.036,1126,2.394,1127,1.435,1128,2.021,1129,3.036,1130,2.601,1131,2.021,1132,2.394,1133,1.435,1134,1.435,1135,1.435,1136,1.435,1137,1.435,1138,1.435,1139,1.435,1140,1.211,1141,1.435,1142,1.435,1143,1.211,1144,1.435,1145,1.211,1146,1.211,1147,1.211,1148,1.211,1149,1.435,1150,1.435,1151,1.211,1152,1.435,1153,1.435,1154,1.435,1155,1.435]],["title/injectables/DiferredModeUsecases.html",[533,2.034,546,1.278]],["body/injectables/DiferredModeUsecases.html",[3,0.266,4,0.234,9,0.234,13,0.583,28,0.368,30,0.725,31,1.122,33,1.312,34,1.377,37,1.377,38,0.027,40,0.583,41,1.141,42,0.995,72,2.08,158,1.771,229,0.368,230,0.656,235,0.266,236,1.118,423,1.199,430,1.122,441,0.017,442,0.017,444,1.939,447,1.578,450,1.69,458,1.452,460,1.578,461,1.578,462,3.305,465,2.95,466,3.312,468,1.98,477,3.616,480,1.474,481,1.95,491,2.236,492,3.312,499,1.507,533,2.692,546,1.223,547,1.946,565,1.782,573,1.642,575,2.737,585,2.964,663,3.789,737,1.578,769,1.782,948,3.616,981,4.313,986,3.086,1019,1.946,1039,2.692,1042,3.496,1050,3.762,1052,2.143,1060,2.692,1061,2.692,1062,2.101,1063,2.692,1156,4.654,1157,2.719,1158,3.762,1159,4.455,1160,2.719,1161,3.22,1162,3.22,1163,3.22,1164,3.789,1165,5.107,1166,3.789,1167,5.107,1168,3.982,1169,5.984,1170,3.762,1171,3.22,1172,3.22,1173,5.107,1174,5.107,1175,2.389,1176,2.389,1177,2.389,1178,3.22,1179,3.22,1180,3.22,1181,3.22,1182,3.305,1183,3.22,1184,3.22,1185,3.22,1186,3.22]],["title/modules/FeaturesModule.html",[519,1.114,1187,2.24]],["body/modules/FeaturesModule.html",[3,0.339,4,0.299,9,0.299,13,0.469,30,0.657,38,0.027,229,0.53,230,0.836,235,0.339,236,0.899,417,1.56,429,2.272,430,1.034,436,2.272,437,0.965,438,1.066,441,0.02,442,0.02,519,2.075,521,1.674,528,2.899,529,3.886,530,2.734,536,3.484,537,2.899,538,2.483,545,2.095,584,3.165,619,2.274,620,2.483,627,3.549,629,3.485,630,2.734,631,2.274,633,3.469,634,4.423,638,3.469,648,3.048,650,3.469,937,2.734,1187,4.521,1188,3.469,1189,3.469,1190,3.469,1191,3.875,1192,4.108,1193,4.869,1194,5.238,1195,5.238,1196,5.238,1197,2.734,1198,4.423]],["title/modules/FeaturesRoutingModule.html",[519,1.114,1191,2.034]],["body/modules/FeaturesRoutingModule.html",[2,2.037,3,0.384,4,0.339,9,0.339,30,0.71,38,0.027,72,1.896,229,0.524,230,0.947,235,0.384,236,1.018,429,1.648,430,1.172,436,1.648,437,1.093,438,1.242,441,0.022,442,0.022,447,1.438,521,1.896,528,3.132,537,2.575,545,2.372,646,3.766,647,2.372,655,3.929,657,3.686,658,3.452,937,3.096,1191,3.42,1193,3.929,1197,3.096,1198,4.78,1199,4.653,1200,3.929,1201,4.653,1202,4.653,1203,4.653,1204,4.653,1205,4.653]],["title/components/FooterComponent.html",[0,0.908,432,1.278]],["body/components/FooterComponent.html",[0,1.761,1,1.307,2,2.398,3,0.305,4,0.268,5,1.881,6,1.881,7,1.881,8,1.881,9,0.268,13,0.421,14,5.119,20,1.881,21,3.329,22,2.66,24,2.49,26,2.49,28,0.421,29,0.995,30,0.463,34,0.995,38,0.027,40,0.421,41,1.307,42,1.14,77,2.456,87,4.125,88,3.624,89,4.125,90,4.125,229,0.305,230,0.751,231,1.14,235,0.305,236,0.807,264,2.456,265,1.616,275,1.881,284,2.456,285,2.456,289,2.952,306,3.25,309,2.703,310,3.25,311,2.952,312,3.624,313,3.116,325,1.881,338,2.456,417,1.401,418,2.49,419,2.49,420,1.881,421,2.749,422,1.881,423,1.147,424,1.881,425,1.401,426,1.881,427,1.401,428,1.881,429,1.307,430,0.929,431,1.881,432,2.213,433,1.881,434,1.401,435,1.881,436,1.307,437,0.867,438,0.751,439,1.881,440,1.881,441,0.019,442,0.019,584,2.23,614,3.116,881,3.116,886,2.738,962,4.125,1206,3.116,1207,6.529,1208,5.476,1209,4.885,1210,4.885,1211,4.885,1212,3.69,1213,4.885,1214,3.624,1215,4.885,1216,2.738,1217,3.69,1218,4.885,1219,3.116]],["title/components/HeaderComponent.html",[0,0.908,434,1.278]],["body/components/HeaderComponent.html",[0,1.706,1,1.198,2,2.017,3,0.279,4,0.246,5,1.724,6,1.724,7,1.724,8,1.724,9,0.246,13,0.386,20,1.724,21,3.27,22,2.613,24,2.348,26,2.348,28,0.386,29,0.938,30,0.424,34,1.242,38,0.027,40,0.386,41,1.632,42,1.423,160,3.417,229,0.38,230,0.688,231,1.045,235,0.279,236,0.74,264,3.486,265,2.463,266,2.508,270,2.508,275,2.348,276,2.249,278,2.855,279,2.508,284,2.249,285,2.249,286,1.724,289,2.043,291,3.417,306,3.065,309,1.871,310,2.249,311,2.043,324,2.508,325,1.724,333,1.871,336,2.508,344,2.306,351,2.508,358,2.855,362,3.889,371,2.855,383,3.486,386,2.508,396,2.855,417,1.283,418,2.348,419,2.348,420,1.724,421,2.653,422,1.724,423,1.082,424,1.724,425,1.283,426,1.724,427,1.283,428,1.724,429,1.198,430,0.851,431,1.724,432,1.283,433,1.724,434,2.135,435,1.724,436,1.198,437,0.794,438,0.688,439,1.724,440,1.724,441,0.018,442,0.018,458,0.74,519,1.118,564,3.889,567,2.249,568,2.855,584,2.043,762,3.889,777,4.424,840,3.417,886,2.508,912,2.855,915,2.855,1009,2.249,1103,2.249,1214,3.417,1216,2.508,1219,2.855,1220,2.855,1221,5.885,1222,5.239,1223,4.606,1224,4.606,1225,3.381,1226,4.606,1227,5.625,1228,3.381,1229,3.381,1230,4.606,1231,3.381,1232,4.606,1233,2.855,1234,3.381,1235,3.381,1236,3.381,1237,4.606,1238,4.606,1239,4.606,1240,4.606,1241,4.606,1242,3.381,1243,3.381,1244,3.381,1245,4.606,1246,3.381]],["title/injectables/IsLoadingService.html",[546,1.278,594,2.034]],["body/injectables/IsLoadingService.html",[3,0.348,4,0.307,9,0.307,13,0.482,28,0.482,29,1.085,31,1.341,33,2.378,34,1.575,37,1.138,38,0.027,39,1.848,40,0.482,41,1.887,42,1.996,229,0.44,230,0.859,235,0.348,236,0.923,423,0.991,441,0.02,442,0.02,447,1.646,460,1.304,461,1.304,478,1.848,479,1.538,526,2.685,546,2.023,547,2.55,550,4.499,569,3.563,570,3.131,575,1.848,590,4.332,594,3.219,601,4.332,659,4.93,680,5.453,847,2.513,1062,2.513,1214,3.953,1247,5.178,1248,3.563,1249,5.328,1250,5.328,1251,5.328,1252,4.22,1253,4.22,1254,5.838,1255,5.328,1256,4.22,1257,4.22]],["title/interfaces/LatestTransmissionsResponseScema.html",[443,0.422,509,1.588]],["body/interfaces/LatestTransmissionsResponseScema.html",[3,0.311,4,0.274,9,0.274,13,0.565,28,0.43,29,1.008,30,0.737,38,0.027,40,0.755,158,1.844,229,0.311,235,0.504,441,0.019,442,0.019,443,0.822,444,1.43,445,1.164,446,2.085,447,1.53,448,2.276,449,1.334,450,1.638,451,1.777,458,1.476,463,1.921,468,1.83,470,1.974,478,1.649,479,1.43,480,1.83,481,2.422,482,2.085,483,2.276,484,1.88,485,2.525,486,0.948,487,3.688,488,2.085,489,2.276,490,2.276,491,2.422,492,2.085,493,1.334,494,2.276,495,2.276,496,1.334,497,2.276,498,2.276,499,0.948,500,2.276,501,1.777,502,2.276,503,2.276,504,2.992,505,2.525,506,2.336,507,2.992,508,2.336,509,2.336,510,2.996,511,3.551,512,3.551,513,3.551,514,2.276,515,2.276,516,2.276,517,2.276,518,2.276]],["title/interfaces/OninitResponseSchema.html",[443,0.422,1258,2.24]],["body/interfaces/OninitResponseSchema.html",[3,0.278,4,0.245,9,0.245,13,0.384,28,0.384,29,0.935,30,0.704,37,1.409,38,0.027,40,0.641,42,1.419,72,2.528,158,1.824,229,0.432,230,0.685,235,0.379,236,1.005,437,0.79,438,1.064,441,0.018,442,0.018,443,0.655,444,1.277,445,1.04,447,1.04,449,1.192,450,1.944,465,1.716,468,1.857,477,2.033,480,1.857,481,2.01,484,2.131,485,2.341,486,1.316,491,2.01,493,1.851,499,0.847,505,1.716,506,2.166,510,1.716,534,1.862,546,1.277,565,1.862,573,1.716,575,2.458,585,2.239,598,1.862,695,2.497,736,1.473,737,1.626,769,1.862,801,2.774,847,2.166,944,2.774,948,3.158,961,2.239,986,2.033,1019,2.033,1039,3.158,1042,3.158,1052,3.736,1060,3.158,1061,3.158,1062,2.648,1063,3.158,1164,3.406,1166,2.497,1168,2.239,1175,2.497,1176,2.497,1177,2.497,1182,2.497,1258,3.055,1259,2.497,1260,3.477,1261,2.497,1262,4.413,1263,2.841,1264,2.841,1265,2.841,1266,2.841,1267,2.841,1268,2.841,1269,2.841,1270,2.841,1271,2.841,1272,2.841,1273,2.497,1274,3.877,1275,2.841,1276,2.841,1277,2.841,1278,2.841,1279,2.841,1280,2.841,1281,2.841,1282,2.841,1283,2.841,1284,2.841,1285,2.841,1286,2.841,1287,4.413,1288,2.841,1289,2.841,1290,2.841,1291,2.841,1292,2.841,1293,2.841,1294,2.841,1295,2.841,1296,2.841,1297,2.841,1298,2.841,1299,2.841,1300,2.841,1301,2.841]],["title/interfaces/RangeDataSchema.html",[443,0.422,501,1.588]],["body/interfaces/RangeDataSchema.html",[3,0.323,4,0.285,9,0.285,13,0.58,28,0.447,29,1.034,30,0.775,38,0.027,40,0.736,158,1.861,229,0.323,235,0.51,441,0.019,442,0.019,443,0.828,444,1.487,445,1.21,446,2.167,447,1.57,448,2.366,449,1.387,450,1.865,451,1.847,458,1.445,463,1.997,468,2.044,470,1.742,478,1.715,479,1.466,480,1.973,481,2.224,482,2.167,483,2.366,484,1.928,485,2.589,486,0.986,487,3.069,488,2.167,489,2.366,490,2.366,491,2.224,492,2.167,493,1.387,494,2.366,495,2.366,496,1.997,497,3.069,498,3.069,499,1.279,500,3.069,501,2.396,502,2.366,503,2.366,504,2.366,505,1.997,506,1.847,507,2.366,508,1.847,509,1.847,510,1.997,511,2.366,512,2.366,513,2.366,514,2.366,515,2.366,516,2.366,517,2.366,518,2.366,1302,5.637]],["title/components/RealTimeChartComponent.html",[0,0.908,436,1.193]],["body/components/RealTimeChartComponent.html",[0,1.161,1,0.505,2,1.043,3,0.118,4,0.104,5,0.727,6,0.727,7,0.727,8,0.727,9,0.104,13,0.409,18,1.124,19,1.318,20,0.727,21,2.537,22,2.027,24,1.214,26,1.214,28,0.163,29,0.729,30,0.702,31,0.6,32,2.165,33,0.97,34,1.666,37,1.484,38,0.027,39,1.343,40,0.696,41,1.949,42,1.701,43,1.439,65,1.459,68,2.651,72,2.242,74,2.011,88,2.276,109,2.276,110,1.058,112,1.585,114,0.949,125,2.384,156,2.276,158,0.412,173,1.058,179,1.767,229,0.296,230,0.29,231,1.909,232,0.624,233,1.853,235,0.118,236,0.671,237,1.767,265,1.043,275,1.826,280,1.585,281,1.043,283,0.97,286,1.214,325,1.826,338,0.949,344,1.735,417,1.513,418,1.214,419,1.214,420,0.727,421,2.031,422,0.727,423,1.169,424,0.727,425,0.541,426,0.727,427,0.541,428,0.727,429,0.505,430,0.359,431,0.727,432,0.541,433,0.727,434,0.541,435,0.727,436,1.411,437,1.206,438,1.389,439,0.727,440,0.727,441,0.009,442,0.009,445,0.441,449,0.505,450,1.015,451,0.673,458,1,460,1.412,461,1.412,468,1.646,480,0.472,484,0.904,486,1.328,493,0.844,496,0.505,534,1.697,562,2.384,565,0.789,573,0.727,575,2.097,598,1.983,609,1.058,612,1.585,728,1.124,729,2.031,730,0.97,732,1.69,733,1.69,734,1.69,735,1.69,737,1.269,739,0.727,740,0.97,756,1.767,763,1.767,765,1.767,769,0.789,790,1.767,841,1.767,843,1.058,847,1.879,856,1.767,938,1.058,939,2.011,940,2.59,941,2.011,943,2.011,944,1.439,946,2.011,948,3.561,949,2.276,950,3.025,951,1.767,952,1.204,956,1.585,957,3.025,977,1.767,979,3.636,993,3.636,996,1.204,1002,1.204,1009,1.585,1013,0.949,1016,0.949,1019,0.862,1021,1.204,1022,1.204,1027,1.204,1028,1.204,1029,1.204,1039,1.439,1042,1.853,1060,1.853,1061,1.853,1062,1.879,1063,1.853,1067,4.202,1103,0.949,1109,2.59,1110,3.025,1111,3.025,1113,1.204,1114,1.204,1115,1.204,1116,1.204,1117,1.204,1118,1.204,1120,1.204,1121,3.025,1122,2.59,1123,2.59,1125,1.204,1128,1.204,1129,2.011,1130,2.011,1131,1.204,1140,2.011,1143,1.204,1145,1.204,1146,1.204,1147,2.011,1148,2.011,1151,1.204,1170,1.204,1197,4.134,1200,1.204,1233,2.011,1303,5.247,1304,2.382,1305,2.382,1306,3.025,1307,2.011,1308,2.59,1309,2.011,1310,2.011,1311,2.011,1312,2.011,1313,1.426,1314,1.426,1315,4.337,1316,1.426,1317,4.79,1318,2.382,1319,1.426,1320,1.426,1321,2.382,1322,2.382,1323,2.382,1324,1.426,1325,2.382,1326,2.382,1327,2.382,1328,1.426,1329,1.426,1330,1.426,1331,1.426,1332,1.426,1333,1.426,1334,1.426,1335,1.426,1336,1.204,1337,1.426,1338,1.426,1339,2.382,1340,1.426,1341,1.426,1342,1.426,1343,1.426,1344,1.426,1345,1.426,1346,2.382,1347,1.426,1348,1.426,1349,1.426,1350,1.426,1351,1.426,1352,1.426,1353,1.426,1354,1.058,1355,1.426,1356,1.058,1357,1.426,1358,1.426,1359,1.426,1360,1.426,1361,1.426,1362,1.426,1363,1.426,1364,1.426,1365,1.426,1366,1.426,1367,1.426,1368,1.426,1369,1.426,1370,1.426,1371,1.426,1372,1.426,1373,1.426,1374,1.426,1375,1.426,1376,1.426,1377,1.426,1378,1.426,1379,1.426,1380,1.426,1381,1.426,1382,1.426,1383,1.426,1384,1.426,1385,1.426,1386,1.426,1387,1.426,1388,1.426,1389,1.426,1390,1.426,1391,1.426,1392,1.426,1393,1.426,1394,1.426,1395,1.426,1396,1.426,1397,2.382,1398,1.426,1399,1.426,1400,1.426,1401,1.204,1402,1.426,1403,1.426,1404,1.426,1405,1.426,1406,1.426,1407,1.426,1408,1.426,1409,1.426,1410,1.426,1411,1.426,1412,1.426,1413,1.426,1414,1.426,1415,1.426,1416,1.426,1417,1.426,1418,1.426,1419,1.426,1420,1.426,1421,1.426,1422,1.426,1423,1.426,1424,1.426,1425,1.426,1426,1.426,1427,2.382,1428,1.426,1429,1.426,1430,1.426,1431,1.426,1432,1.426,1433,1.426,1434,2.382,1435,1.426,1436,1.426,1437,1.426,1438,1.426,1439,1.426,1440,1.426,1441,1.426,1442,1.426,1443,1.426,1444,1.426,1445,1.426,1446,1.426,1447,1.426,1448,1.426,1449,1.426,1450,1.426,1451,1.426,1452,1.426,1453,1.426,1454,1.426,1455,1.426,1456,1.426,1457,1.426,1458,1.426]],["title/interfaces/RealTimeChartComponentInterface.html",[443,0.422,747,1.588]],["body/interfaces/RealTimeChartComponentInterface.html",[3,0.275,4,0.242,9,0.242,13,0.38,28,0.38,30,0.802,31,1.308,34,1.669,37,1.669,38,0.027,39,2.275,40,0.738,65,1.356,225,1.57,229,0.376,231,1.727,232,1.457,235,0.499,281,1.457,283,1.356,344,1.264,423,1.454,430,1.147,437,1.22,438,1.058,441,0.017,442,0.017,443,0.776,445,1.029,458,0.728,460,1.913,461,1.913,470,1.727,479,1.501,486,0.838,496,1.179,499,1.407,526,2.275,714,1.457,715,1.697,716,1.697,717,1.842,719,1.842,720,1.457,721,1.842,722,1.842,723,1.842,724,1.842,725,1.697,726,1.697,727,2.522,728,1.57,729,2.849,730,1.356,731,1.842,732,1.57,733,1.57,734,1.57,735,1.57,736,1.457,737,2.074,738,1.842,739,2.849,740,1.356,741,1.842,742,1.842,743,1.457,744,1.842,745,1.842,746,1.842,747,2.15,748,1.842,749,1.842,750,1.842,751,1.842,752,1.842,753,1.842,754,1.842,931,4.592,1306,3.848,1307,3.848,1308,3.848,1309,3.848,1310,3.848,1311,3.848,1312,3.848,1459,3.329,1460,3.329,1461,3.329,1462,3.329,1463,3.329,1464,3.329,1465,3.329,1466,3.329,1467,3.329,1468,3.329,1469,3.329,1470,3.329,1471,3.329,1472,3.329]],["title/injectables/RealTimeUseCases.html",[534,1.863,546,1.278]],["body/injectables/RealTimeUseCases.html",[3,0.236,4,0.208,9,0.208,13,0.326,19,2.264,28,0.326,30,0.76,31,1.03,33,1.162,34,1.409,37,1.552,38,0.027,40,0.631,42,1.264,72,2.414,158,1.831,229,0.395,230,0.581,235,0.338,236,1.046,423,1.227,437,0.961,438,1.257,441,0.016,442,0.016,443,0.513,444,1.815,447,0.882,449,1.694,450,1.829,458,1.143,460,1.614,461,1.614,465,2.438,468,2.006,470,1.264,477,2.472,480,1.728,481,2.287,484,1.083,485,2.819,486,0.718,491,2.287,493,1.011,499,1.03,505,1.455,506,2.256,510,1.455,534,2.264,546,1.083,547,1.724,565,1.579,573,1.455,575,2.287,585,2.722,598,2.264,695,2.117,736,1.249,737,1.959,769,1.579,801,2.472,847,1.93,944,3.341,948,3.73,961,2.722,977,3.548,986,1.724,1019,1.724,1039,2.89,1042,2.89,1052,1.898,1060,2.89,1061,2.89,1062,2.464,1063,2.89,1160,2.409,1164,4.103,1166,3.035,1168,3.182,1175,2.117,1176,2.117,1177,2.117,1182,2.117,1258,1.898,1259,4.103,1260,3.829,1261,2.117,1262,3.454,1263,2.409,1264,2.409,1265,4.038,1266,4.038,1267,4.038,1268,2.409,1269,2.409,1270,2.409,1271,2.409,1272,3.454,1273,3.035,1274,4.411,1275,3.454,1276,3.454,1277,3.454,1278,2.409,1279,2.409,1280,3.454,1281,3.454,1282,3.454,1283,2.409,1284,2.409,1285,2.409,1286,2.409,1287,4.038,1288,2.409,1289,2.409,1290,2.409,1291,2.409,1292,2.409,1293,2.409,1294,2.409,1295,2.409,1296,2.409,1297,2.409,1298,2.409,1299,2.409,1300,2.409,1301,2.409,1473,4.09,1474,4.09,1475,2.853,1476,2.853,1477,2.853,1478,2.853,1479,2.853,1480,2.853,1481,2.853]],["title/interfaces/SessionInfoSchema.html",[443,0.422,493,1.193]],["body/interfaces/SessionInfoSchema.html",[3,0.317,4,0.279,9,0.279,13,0.7,28,0.437,29,1.02,30,0.7,38,0.027,40,0.751,158,1.852,229,0.317,235,0.507,441,0.019,442,0.019,443,0.816,444,1.455,445,1.185,446,2.121,447,1.548,448,2.316,449,1.358,450,1.657,451,1.808,458,1.463,463,1.954,468,2.03,470,1.897,478,1.678,479,1.611,480,1.957,481,2.193,482,2.121,483,2.316,484,2.118,485,2.844,486,0.965,487,3.027,488,2.121,489,2.316,490,3.027,491,2.443,492,2.772,493,1.774,494,3.575,495,3.575,496,1.976,497,2.316,498,2.316,499,0.965,500,2.316,501,1.808,502,2.316,503,2.316,504,2.316,505,1.954,506,1.808,507,2.316,508,1.808,509,1.808,510,1.954,511,2.316,512,2.316,513,2.316,514,2.316,515,2.316,516,2.316,517,2.316,518,2.316]],["title/modules/SharedModule.html",[519,1.114,627,1.863]],["body/modules/SharedModule.html",[3,0.334,4,0.294,9,0.294,13,0.462,38,0.027,229,0.536,230,0.824,235,0.334,236,0.886,417,1.537,427,2.574,432,2.574,434,2.574,441,0.02,442,0.02,450,1.716,519,2.065,521,1.649,528,2.871,529,3.849,530,2.693,536,3.46,537,2.24,538,2.446,545,2.919,619,2.24,620,2.446,627,3.77,629,3.452,630,2.693,631,2.24,642,4.381,643,3.003,646,3.452,647,2.063,648,3.849,1168,3.452,1482,3.418,1483,3.418,1484,3.418,1485,4.047,1486,4.047,1487,4.047,1488,4.047]],["title/interfaces/chartBuilder.html",[443,0.422,740,1.371]],["body/interfaces/chartBuilder.html",[3,0.306,4,0.27,9,0.27,13,0.423,28,0.423,30,0.82,31,1.47,34,1.322,37,1.322,38,0.027,39,1.624,40,0.666,65,1.511,225,1.75,229,0.405,231,1.697,232,1.624,235,0.515,281,1.624,283,1.511,344,1.408,423,0.871,430,1.382,437,1.289,438,1.118,441,0.019,442,0.019,443,0.81,445,1.146,458,0.812,460,1.146,461,1.146,470,1.805,479,1.686,486,0.934,496,1.314,499,1.47,526,2.146,714,1.624,715,1.891,716,1.891,717,2.053,719,2.053,720,1.624,721,2.053,722,2.053,723,2.053,724,2.053,725,1.891,726,1.891,727,2.713,728,1.75,729,2.799,730,1.511,731,2.053,732,1.75,733,1.75,734,1.75,735,1.75,736,2.146,737,2.21,738,2.713,739,2.977,740,1.997,741,2.053,742,2.053,743,1.624,744,2.053,745,2.053,746,2.053,747,1.75,748,2.053,749,2.053,750,2.053,751,2.053,752,2.053,753,2.053,754,2.053,931,2.752,949,4.073,951,3.637,1489,3.709,1490,3.709,1491,3.709]],["title/interfaces/chartTitle.html",[443,0.422,720,1.474]],["body/interfaces/chartTitle.html",[3,0.313,4,0.276,9,0.276,13,0.432,28,0.432,29,1.012,30,0.802,31,0.953,38,0.027,40,0.73,65,1.542,225,1.786,229,0.41,231,1.82,232,1.658,235,0.518,281,1.658,283,1.542,286,2.827,289,3.351,333,3.069,344,1.886,430,1.251,437,1.167,438,1.012,441,0.019,442,0.019,443,0.802,445,1.17,458,1.338,470,1.82,479,1.7,486,0.953,496,1.341,499,1.396,526,2.175,714,1.658,715,1.931,716,1.931,717,2.096,719,2.096,720,2.175,721,2.096,722,2.096,723,2.096,724,2.096,725,1.931,726,1.931,727,3.258,728,1.786,729,2.827,730,1.542,731,2.096,732,1.786,733,1.786,734,1.786,735,1.786,736,1.658,737,2.086,738,2.096,739,2.827,740,1.542,741,2.096,742,2.096,743,1.658,744,2.096,745,2.096,746,2.096,747,1.786,748,2.096,749,2.096,750,2.096,751,2.096,752,2.096,753,2.096,754,2.096]],["title/coverage.html",[1492,3.878]],["body/coverage.html",[0,1.664,1,1.167,9,0.24,10,2.781,11,2.192,12,2.781,30,0.567,38,0.027,40,0.376,160,2.444,233,1.99,265,1.442,280,4.473,321,3.357,413,2.781,425,1.25,427,1.25,429,1.167,432,1.25,434,1.25,436,1.167,438,1.133,441,0.017,442,0.017,443,0.824,444,1.25,446,3.227,486,0.829,493,1.167,499,0.829,501,1.554,509,1.554,531,2.192,533,1.99,534,1.823,546,2.112,548,2.781,567,3.011,583,2.781,594,1.99,628,1.99,675,2.781,677,2.781,678,2.781,714,1.442,715,3.072,720,1.442,730,1.342,740,1.342,743,1.442,747,1.554,755,3.834,805,2.444,807,2.444,936,2.781,937,2.192,938,3.357,983,4.925,1011,2.444,1012,2.444,1013,2.192,1014,2.444,1015,2.444,1016,2.192,1062,1.554,1156,2.781,1157,2.781,1197,2.192,1206,2.781,1220,2.781,1247,2.781,1248,2.781,1258,2.192,1259,3.357,1260,3.011,1261,3.357,1303,2.781,1354,2.444,1356,2.444,1492,2.781,1493,3.294,1494,3.294,1495,3.294,1496,4.524,1497,4.524,1498,5.832,1499,3.294,1500,3.294,1501,3.294,1502,5.168,1503,5.168,1504,4.524,1505,4.524,1506,3.294,1507,3.294,1508,3.294,1509,3.294,1510,3.294,1511,3.294,1512,3.294,1513,6.656,1514,3.294,1515,3.294,1516,4.524,1517,4.524,1518,5.564,1519,3.294,1520,2.781,1521,3.294,1522,2.781,1523,2.781,1524,3.294,1525,4.835,1526,4.788,1527,2.781,1528,2.781,1529,3.294,1530,3.294]],["title/dependencies.html",[619,2.24,1531,2.086]],["body/dependencies.html",[38,0.027,230,0.92,441,0.021,442,0.021,478,1.978,530,3.006,619,2.5,620,2.73,636,4.694,637,4.125,643,3.352,647,2.303,756,3.352,801,2.73,802,3.352,1532,4.518,1533,6.72,1534,4.518,1535,4.518,1536,4.518,1537,4.518,1538,4.518,1539,4.518,1540,4.518,1541,4.518,1542,4.518,1543,4.518,1544,4.518,1545,4.518,1546,4.518,1547,4.518,1548,4.518,1549,4.518,1550,4.518,1551,4.518,1552,4.518,1553,5.559,1554,5.559,1555,4.518,1556,5.559,1557,4.518,1558,4.518,1559,4.518,1560,4.518,1561,4.518,1562,4.518,1563,4.518,1564,4.518,1565,4.518,1566,4.518,1567,4.518]],["title/miscellaneous/functions.html",[1568,1.871,1569,3.418]],["body/miscellaneous/functions.html",[28,0.402,30,0.82,37,1.277,38,0.026,40,0.611,41,2.178,42,1.941,43,3.95,65,1.929,225,1.662,231,1.464,233,3.233,265,1.542,286,2.415,333,1.95,344,1.337,423,1.519,430,1.192,437,1.112,438,0.964,441,0.018,442,0.018,458,1.345,460,2.02,461,1.999,468,1.165,470,1.9,479,1.017,484,1.337,499,1.44,508,2.524,612,2.344,660,2.975,714,1.542,716,1.796,720,1.542,725,2.415,726,2.415,728,2.524,737,2.027,847,1.662,944,3.233,956,3.56,959,2.614,963,2.614,986,2.129,990,2.975,1011,3.514,1013,3.151,1014,3.514,1015,3.514,1016,3.151,1103,2.344,1315,4.518,1354,3.514,1356,3.514,1401,2.975,1525,2.614,1526,3.97,1527,4.518,1528,3.999,1568,2.344,1569,2.975,1570,5.52,1571,3.523,1572,5.721,1573,5.35,1574,3.523,1575,2.975,1576,3.523,1577,3.523,1578,3.523,1579,3.523,1580,3.523,1581,3.523,1582,3.523,1583,3.523,1584,3.523,1585,3.523,1586,3.523,1587,3.523,1588,3.523,1589,3.523,1590,3.523,1591,3.523,1592,3.523,1593,3.523,1594,3.523]],["title/index.html",[28,0.321,482,1.556,1595,2.812]],["body/index.html",[0,1.597,4,0.317,18,2.054,22,1.774,38,0.021,46,3.941,60,3.678,162,3.678,163,4.589,423,1.023,441,0.021,442,0.021,466,3.602,631,2.41,956,4.127,961,2.898,963,4.032,1009,2.898,1062,2.054,1158,4.589,1260,3.941,1273,4.736,1531,3.231,1575,5.002,1596,5.434,1597,4.355,1598,5.923,1599,3.678,1600,4.355,1601,5.434,1602,6.602,1603,4.355,1604,4.355,1605,4.355,1606,4.355,1607,4.355,1608,4.355,1609,4.355,1610,4.355,1611,4.355,1612,4.355,1613,4.355,1614,4.355,1615,4.355,1616,5.434,1617,6.202,1618,4.355,1619,4.355,1620,4.355,1621,4.355,1622,4.355,1623,5.434,1624,4.355,1625,4.355,1626,4.355,1627,4.355,1628,4.355,1629,4.355,1630,5.923,1631,4.355,1632,4.355,1633,4.355,1634,3.231,1635,4.355,1636,4.355]],["title/modules.html",[521,1.871]],["body/modules.html",[38,0.023,441,0.023,442,0.023,520,3.089,521,2.083,618,3.402,626,3.089,627,2.829,637,4.711,994,5.362,1187,3.402,1191,3.089,1637,6.35,1638,6.758,1639,6.35,1640,6.35]],["title/overview.html",[1634,3.407]],["body/overview.html",[1,2.034,2,1.782,38,0.027,417,1.545,425,2.469,427,2.469,429,2.034,432,2.469,434,2.469,436,2.034,441,0.02,442,0.02,445,1.258,519,1.346,520,3.469,521,1.658,536,2.459,538,2.459,545,2.075,547,2.459,618,4.57,619,2.252,620,2.459,621,3.437,622,3.437,623,3.437,624,3.437,625,3.437,626,3.469,627,3.773,628,3.469,629,3.464,630,2.708,631,2.252,657,2.459,1187,4.461,1188,3.437,1189,3.437,1190,3.437,1191,3.469,1482,3.437,1483,3.437,1484,3.437,1520,3.437,1634,3.02,1641,4.07,1642,4.07,1643,4.07,1644,4.07]],["title/properties.html",[29,0.824,1531,2.086]],["body/properties.html",[29,1.103,38,0.025,441,0.024,442,0.024,1599,4.575,1645,5.418]],["title/routes.html",[657,2.775]],["body/routes.html",[38,0.024,441,0.024,442,0.024,657,3.299]],["title/miscellaneous/variables.html",[1568,1.871,1646,3.418]],["body/miscellaneous/variables.html",[28,0.492,30,0.541,38,0.027,40,0.741,41,2.089,42,1.822,72,2.2,77,3.593,158,1.245,349,4.56,421,2.034,441,0.021,442,0.021,447,1.333,479,1.245,480,1.426,508,2.034,562,2.869,567,4.112,601,3.199,755,3.199,802,4.007,804,4.56,805,4.375,807,4.375,847,2.034,959,3.199,1012,4.007,1216,3.199,1336,3.641,1522,3.641,1523,3.641,1525,3.199,1526,3.199,1568,2.869,1570,3.641,1646,3.641,1647,4.312,1648,4.312,1649,5.4,1650,5.4,1651,4.312,1652,4.312,1653,4.312,1654,4.312,1655,4.312,1656,4.312,1657,5.4,1658,4.312,1659,4.312,1660,4.312,1661,4.312,1662,4.312,1663,5.4,1664,4.312,1665,5.4,1666,4.312,1667,4.312,1668,4.312,1669,4.312,1670,4.312,1671,4.312,1672,4.312]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":265,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.1",{"_index":301,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["0.11.4",{"_index":1567,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":318,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["0.2s",{"_index":894,"title":{},"body":{"components/ChartsComponent.html":{}}}],["0.35",{"_index":905,"title":{},"body":{"components/ChartsComponent.html":{}}}],["0.8em",{"_index":341,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["0/1",{"_index":1524,"title":{},"body":{"coverage.html":{}}}],["003147",{"_index":303,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["010f1d",{"_index":1246,"title":{},"body":{"components/HeaderComponent.html":{}}}],["02",{"_index":106,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["03a9f4",{"_index":360,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["080fe1",{"_index":384,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["081921",{"_index":372,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["0b043f",{"_index":919,"title":{},"body":{"components/ChartsComponent.html":{}}}],["1",{"_index":1103,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{}}}],["1))].station,start,end).topromise",{"_index":1186,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["1.0.0",{"_index":1645,"title":{},"body":{"properties.html":{}}}],["1.10.0",{"_index":1551,"title":{},"body":{"dependencies.html":{}}}],["1.3.1",{"_index":1559,"title":{},"body":{"dependencies.html":{}}}],["1.4em",{"_index":339,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["1.5em",{"_index":332,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["1/1",{"_index":1513,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1519,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1503,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1518,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1505,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1517,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1521,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":1555,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":280,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{}}}],["1000",{"_index":612,"title":{},"body":{"components/AppComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{}}}],["1000px",{"_index":282,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["103",{"_index":908,"title":{},"body":{"components/ChartsComponent.html":{}}}],["10px",{"_index":352,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["12",{"_index":1520,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["12.2.0",{"_index":1533,"title":{},"body":{"dependencies.html":{}}}],["12.2.18",{"_index":1600,"title":{},"body":{"index.html":{}}}],["125699",{"_index":916,"title":{},"body":{"components/ChartsComponent.html":{}}}],["150px",{"_index":388,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["15px",{"_index":362,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{}}}],["16",{"_index":1516,"title":{},"body":{"coverage.html":{}}}],["1615a5186",{"_index":90,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{}}}],["168px",{"_index":899,"title":{},"body":{"components/ChartsComponent.html":{}}}],["16px",{"_index":386,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["17px",{"_index":904,"title":{},"body":{"components/ChartsComponent.html":{}}}],["18px",{"_index":359,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["19.0.3",{"_index":1561,"title":{},"body":{"dependencies.html":{}}}],["1976d2",{"_index":910,"title":{},"body":{"components/ChartsComponent.html":{}}}],["1fr",{"_index":295,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["1ms",{"_index":606,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":314,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["2",{"_index":1588,"title":{},"body":{"miscellaneous/functions.html":{}}}],["2.1.2",{"_index":1563,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1565,"title":{},"body":{"dependencies.html":{}}}],["2.30.1",{"_index":1549,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1542,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1514,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1495,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":1506,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":1499,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1504,"title":{},"body":{"coverage.html":{}}}],["20.5.0",{"_index":1537,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":368,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["200px",{"_index":292,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["2017",{"_index":222,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["2020",{"_index":213,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["2022",{"_index":166,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["2023",{"_index":143,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["207",{"_index":893,"title":{},"body":{"components/ChartsComponent.html":{}}}],["20px",{"_index":313,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{}}}],["22",{"_index":1507,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":879,"title":{},"body":{"components/ChartsComponent.html":{}}}],["25",{"_index":1498,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":317,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["27999299",{"_index":92,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["280df5",{"_index":890,"title":{},"body":{"components/ChartsComponent.html":{}}}],["2fr",{"_index":296,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["3.1.9",{"_index":1544,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":1548,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1515,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1497,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":870,"title":{},"body":{"components/ChartsComponent.html":{}}}],["300",{"_index":342,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["30px",{"_index":358,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{}}}],["32px",{"_index":875,"title":{},"body":{"components/ChartsComponent.html":{}}}],["33",{"_index":1502,"title":{},"body":{"coverage.html":{}}}],["350",{"_index":385,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["350px",{"_index":382,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["35px",{"_index":298,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["36",{"_index":1509,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":903,"title":{},"body":{"components/ChartsComponent.html":{}}}],["4",{"_index":1643,"title":{},"body":{"overview.html":{}}}],["4.18.2",{"_index":1546,"title":{},"body":{"dependencies.html":{}}}],["4.4.1",{"_index":1540,"title":{},"body":{"dependencies.html":{}}}],["4.5,4.5,4.5,2.5,4,3,3,3,2.5,4,3,3,2.8,3,2.3,4.5",{"_index":70,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["4/5",{"_index":1501,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":413,"title":{},"body":{"components/AboutCandidateComponent.html":{},"coverage.html":{}}}],["400",{"_index":364,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["40px",{"_index":304,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["45",{"_index":409,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["4px",{"_index":888,"title":{},"body":{"components/ChartsComponent.html":{}}}],["5.3.2",{"_index":1538,"title":{},"body":{"dependencies.html":{}}}],["5/22",{"_index":1508,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":321,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"coverage.html":{}}}],["500",{"_index":396,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{}}}],["50000",{"_index":1059,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["50px",{"_index":288,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["55px",{"_index":299,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["5px",{"_index":373,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["6",{"_index":1641,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":1562,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":415,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["600",{"_index":337,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["600px",{"_index":401,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["60px",{"_index":912,"title":{},"body":{"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["69",{"_index":1511,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":371,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{}}}],["7",{"_index":1642,"title":{},"body":{"overview.html":{}}}],["70",{"_index":411,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["72px",{"_index":924,"title":{},"body":{"components/ChartsComponent.html":{}}}],["75",{"_index":1496,"title":{},"body":{"coverage.html":{}}}],["767px",{"_index":921,"title":{},"body":{"components/ChartsComponent.html":{}}}],["8",{"_index":1644,"title":{},"body":{"overview.html":{}}}],["80",{"_index":1500,"title":{},"body":{"coverage.html":{}}}],["800px",{"_index":1244,"title":{},"body":{"components/HeaderComponent.html":{}}}],["82px",{"_index":874,"title":{},"body":{"components/ChartsComponent.html":{}}}],["848c90",{"_index":391,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["85",{"_index":403,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["888",{"_index":884,"title":{},"body":{"components/ChartsComponent.html":{}}}],["8px",{"_index":881,"title":{},"body":{"components/ChartsComponent.html":{},"components/FooterComponent.html":{}}}],["9",{"_index":892,"title":{},"body":{"components/ChartsComponent.html":{}}}],["9/13",{"_index":1512,"title":{},"body":{"coverage.html":{}}}],["9/25",{"_index":1510,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":405,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["980px",{"_index":876,"title":{},"body":{"components/ChartsComponent.html":{}}}],["a:hover",{"_index":914,"title":{},"body":{"components/ChartsComponent.html":{}}}],["a:visited",{"_index":913,"title":{},"body":{"components/ChartsComponent.html":{}}}],["abidjan",{"_index":211,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["about:last",{"_index":376,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["aboutcandidatecomponent",{"_index":1,"title":{"components/AboutCandidateComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["absolute",{"_index":278,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{}}}],["according",{"_index":959,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["acording",{"_index":1586,"title":{},"body":{"miscellaneous/functions.html":{}}}],["activatedroute",{"_index":767,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["activeroute",{"_index":770,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["activeroute:activatedroute",{"_index":823,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["actual_component",{"_index":440,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["add",{"_index":1626,"title":{},"body":{"index.html":{}}}],["address:\"ariana",{"_index":93,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["adw70",{"_index":416,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["aivaibled",{"_index":1217,"title":{},"body":{"components/FooterComponent.html":{}}}],["aleatoire",{"_index":1118,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["align",{"_index":309,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["allez",{"_index":837,"title":{},"body":{"components/ChartsComponent.html":{}}}],["allways",{"_index":1298,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["always",{"_index":1301,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["analyse",{"_index":121,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["anglais",{"_index":251,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["angular",{"_index":46,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1532,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":530,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":566,"title":{},"body":{"injectables/ApiResourceService.html":{},"modules/AppModule.html":{},"interceptors/Aq54HttpInterceptor.html":{}}}],["angular/compiler",{"_index":1534,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":230,"title":{},"body":{"components/AboutCandidateComponent.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":643,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":636,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":647,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["animation",{"_index":716,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["animations:makeanimation",{"_index":1397,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["années",{"_index":107,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["any),config)}),100",{"_index":1386,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["api",{"_index":158,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"miscellaneous/variables.html":{}}}],["api.magentalab.it",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/api.interface",{"_index":719,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["api/api.resource.service",{"_index":532,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["api:apiinterface",{"_index":1177,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["apiinterface",{"_index":444,"title":{"interfaces/ApiInterface.html":{}},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/CurrentValuesSchema.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{}}}],["apiproxymodule",{"_index":520,"title":{"modules/ApiProxyModule.html":{}},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apiresourceservice",{"_index":531,"title":{"injectables/ApiResourceService.html":{}},"body":{"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"coverage.html":{}}}],["app",{"_index":22,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"index.html":{}}}],["app.component",{"_index":639,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":589,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":588,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":425,"title":{"components/AppComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":618,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approfondie",{"_index":129,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["approutingmodule",{"_index":626,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aq54",{"_index":1009,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"index.html":{}}}],["aq54httpinterceptor",{"_index":628,"title":{"interceptors/Aq54HttpInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["aquitaine",{"_index":151,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["architecture",{"_index":56,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["args",{"_index":931,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{}}}],["array",{"_index":496,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["artifacts",{"_index":1612,"title":{},"body":{"index.html":{}}}],["async",{"_index":948,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["auto",{"_index":329,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["automatically",{"_index":1607,"title":{},"body":{"index.html":{}}}],["aux",{"_index":137,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["available",{"_index":1637,"title":{},"body":{"modules.html":{}}}],["avec",{"_index":104,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["await",{"_index":1042,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["backend",{"_index":154,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["background",{"_index":285,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["backgroundcolor:getrandomrgb",{"_index":1109,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["bar",{"_index":957,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["barbasedchart",{"_index":926,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{}}}],["barbasedchart(...args",{"_index":929,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{}}}],["barbasedchart(...args:any):void",{"_index":744,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["bas",{"_index":177,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["base",{"_index":155,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["baseapi",{"_index":551,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["baseapi:\"https://airqino",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baseapi:string=environment.baseapi",{"_index":571,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["based",{"_index":562,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/variables.html":{}}}],["beginatzero",{"_index":735,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["behaviorsubject",{"_index":1254,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["behaviorsubject(false",{"_index":1255,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["being",{"_index":1359,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["besoins",{"_index":138,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["between",{"_index":587,"title":{},"body":{"components/AppComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["bg:any",{"_index":73,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["black",{"_index":395,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["block",{"_index":357,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["blue",{"_index":1581,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boolean",{"_index":727,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["bootstrap",{"_index":620,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":269,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["bordercolor",{"_index":71,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["bordercolor:getrandomrgb",{"_index":1143,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["both",{"_index":736,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["bottom",{"_index":312,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["box",{"_index":267,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["browse",{"_index":1638,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":637,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":641,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":640,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":635,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":917,"title":{},"body":{"components/ChartsComponent.html":{}}}],["build",{"_index":956,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["builder",{"_index":927,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{}}}],["builder(...args",{"_index":932,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{}}}],["builder(...args:any):any",{"_index":746,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["builder(st",{"_index":964,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["builder(st:string",{"_index":1038,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["builds",{"_index":985,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["buttons",{"_index":845,"title":{},"body":{"components/ChartsComponent.html":{}}}],["c",{"_index":227,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["call",{"_index":450,"title":{},"body":{"interfaces/ApiInterface.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{}}}],["called",{"_index":966,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["calling",{"_index":490,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["calls",{"_index":481,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["cancel",{"_index":846,"title":{},"body":{"components/ChartsComponent.html":{}}}],["candidate",{"_index":23,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate'},{'name",{"_index":424,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["candidate.component",{"_index":649,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["candidate.component.html",{"_index":27,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate.component.scss",{"_index":25,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate.component.ts",{"_index":12,"title":{},"body":{"components/AboutCandidateComponent.html":{},"coverage.html":{}}}],["candidate.component.ts:127",{"_index":35,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate.component.ts:130",{"_index":36,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate.component.ts:14",{"_index":228,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate.component.ts:88",{"_index":76,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate/about",{"_index":11,"title":{},"body":{"components/AboutCandidateComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["canupdate",{"_index":1473,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["canupdate(sessionid",{"_index":1476,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["canupdate(sessionid:number):promise",{"_index":1283,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["capabilities",{"_index":1628,"title":{},"body":{"index.html":{}}}],["capteur",{"_index":843,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["capteurs",{"_index":841,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["capteurs(${d.unit",{"_index":1127,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["capteurs(${d.unit})`,getrandomrgb",{"_index":1152,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["card",{"_index":882,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card):hover",{"_index":901,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card.card",{"_index":897,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card.card.highlight",{"_index":911,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card.highlight",{"_index":909,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card:not(.highlight",{"_index":900,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card:not(:last",{"_index":896,"title":{},"body":{"components/ChartsComponent.html":{}}}],["case",{"_index":1572,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cases.ts",{"_index":1261,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["cases.ts:20",{"_index":1475,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["cases.ts:33",{"_index":1479,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["cases.ts:51",{"_index":1481,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["cases.ts:65",{"_index":1477,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["catch(err:any",{"_index":1060,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["catcherror((error:any",{"_index":710,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["catcherror,finalize",{"_index":699,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["caurrent",{"_index":1292,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["center",{"_index":311,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["centres",{"_index":261,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["change",{"_index":961,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"index.html":{}}}],["changed",{"_index":783,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changer",{"_index":838,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changerange",{"_index":760,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changerange(station",{"_index":779,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changerange(station:string='',message",{"_index":851,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changestation",{"_index":761,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changestation(ev",{"_index":784,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changestation(ev:any",{"_index":829,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart",{"_index":231,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["chart',{data:this.data,options",{"_index":1376,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart'},{'name",{"_index":431,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart('chart',config",{"_index":1150,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart('real",{"_index":1375,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart('sc',scatterconfig",{"_index":1155,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart((document.getelementbyid(this.scatters[sc",{"_index":1385,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart(this.times[index],config",{"_index":1457,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component",{"_index":1198,"title":{},"body":{"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{}}}],["chart.component.html",{"_index":941,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.scss",{"_index":940,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts",{"_index":938,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{}}}],["chart.component.ts:110",{"_index":971,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:13",{"_index":953,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:147",{"_index":1338,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:162",{"_index":991,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:17",{"_index":1313,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:20",{"_index":1001,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:207",{"_index":1332,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:21",{"_index":1008,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:22",{"_index":1000,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:224",{"_index":954,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:23",{"_index":1005,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:236",{"_index":1328,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:24",{"_index":1004,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:249",{"_index":1314,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:25",{"_index":1002,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:26",{"_index":1003,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:27",{"_index":999,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:271",{"_index":1334,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:273",{"_index":978,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:292",{"_index":1341,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:31",{"_index":1010,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:32",{"_index":996,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:33",{"_index":1347,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:337",{"_index":1330,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:34",{"_index":1345,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:35",{"_index":1344,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:36",{"_index":1351,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:37",{"_index":1350,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:38",{"_index":1352,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:39",{"_index":1353,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:40",{"_index":1349,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:41",{"_index":1343,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:44",{"_index":995,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:45",{"_index":1006,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:46",{"_index":1007,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:48",{"_index":976,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:55",{"_index":1342,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:56",{"_index":1348,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:62",{"_index":1324,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:63",{"_index":975,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:73",{"_index":965,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:82",{"_index":1316,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:98",{"_index":1320,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.config.data.datasets.find((f:any)=>dd.label===f.label",{"_index":1440,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.config.data.datasets.foreach((dt:any",{"_index":1393,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.config.options",{"_index":1396,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.config.options.plugins=config.options.plugins",{"_index":1436,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.config.options.scales.x.max=dt[0].time",{"_index":1437,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.js",{"_index":1539,"title":{},"body":{"dependencies.html":{}}}],["chart.js/auto",{"_index":232,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["chart.update",{"_index":1404,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart/diferred",{"_index":937,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"coverage.html":{}}}],["chart/real",{"_index":1197,"title":{},"body":{"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{}}}],["chart:chart|any",{"_index":1028,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart='real",{"_index":817,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chartanimation",{"_index":714,"title":{"interfaces/ChartAnimation.html":{}},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["chartbar",{"_index":728,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["chartbardatainterface",{"_index":730,"title":{"interfaces/ChartBarDataInterface.html":{}},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{}}}],["chartbardatasets",{"_index":1354,"title":{},"body":{"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["chartbardatasets(stationdata",{"_index":1571,"title":{},"body":{"miscellaneous/functions.html":{}}}],["chartbarddatasets",{"_index":1011,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["chartbarddatasets(stationdata",{"_index":1574,"title":{},"body":{"miscellaneous/functions.html":{}}}],["chartbuilder",{"_index":740,"title":{"interfaces/chartBuilder.html":{}},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{}}}],["chartdata",{"_index":949,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/chartBuilder.html":{}}}],["chartdata():currentvaluesschema[]|any",{"_index":741,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["chartdata(data",{"_index":970,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chartdata(data:any",{"_index":1064,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["charts",{"_index":756,"title":{},"body":{"components/ChartsComponent.html":{},"components/RealTimeChartComponent.html":{},"dependencies.html":{}}}],["charts'},{'name",{"_index":428,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["charts.component.html",{"_index":758,"title":{},"body":{"components/ChartsComponent.html":{}}}],["charts.component.scss",{"_index":757,"title":{},"body":{"components/ChartsComponent.html":{}}}],["charts/charts.component",{"_index":1487,"title":{},"body":{"modules/SharedModule.html":{}}}],["chartscomponent",{"_index":427,"title":{"components/ChartsComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["charttitle",{"_index":720,"title":{"interfaces/chartTitle.html":{}},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["check",{"_index":1633,"title":{},"body":{"index.html":{}}}],["child",{"_index":377,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["child(2",{"_index":366,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["choice",{"_index":1622,"title":{},"body":{"index.html":{}}}],["cirrent",{"_index":483,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["class",{"_index":236,"title":{},"body":{"components/AboutCandidateComponent.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"modules/SharedModule.html":{}}}],["clean",{"_index":55,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["clear",{"_index":1321,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["clearinterval(this.time",{"_index":1363,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["clearinterval(this.timer",{"_index":1037,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["cli",{"_index":1598,"title":{},"body":{"index.html":{}}}],["clients",{"_index":140,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["cloud",{"_index":58,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["cluster_appmodule",{"_index":621,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":623,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":625,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":624,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":622,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_featuresmodule",{"_index":1188,"title":{},"body":{"modules/FeaturesModule.html":{},"overview.html":{}}}],["cluster_featuresmodule_declarations",{"_index":1190,"title":{},"body":{"modules/FeaturesModule.html":{},"overview.html":{}}}],["cluster_featuresmodule_imports",{"_index":1189,"title":{},"body":{"modules/FeaturesModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1482,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1484,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1483,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cnv",{"_index":1419,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["code",{"_index":162,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["collaboration",{"_index":124,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["color",{"_index":286,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["color:string",{"_index":723,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["column",{"_index":308,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["columns",{"_index":294,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["command",{"_index":1623,"title":{},"body":{"index.html":{}}}],["common",{"_index":692,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["commonmodule",{"_index":529,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{}}}],["company:\"aladin",{"_index":168,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["company:\"laboratoire",{"_index":184,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["company:\"seewatch",{"_index":148,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["compare",{"_index":1291,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["compenent",{"_index":1233,"title":{},"body":{"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["compenents",{"_index":738,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["competence",{"_index":69,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["competences",{"_index":260,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["complexes",{"_index":123,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["component",{"_index":0,"title":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"index.html":{}}}],["component:aboutcandidatecomponent",{"_index":668,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:diferreddatachartcomponent",{"_index":1201,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["component:realtimechartcomponent",{"_index":1203,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["component_template",{"_index":422,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["componentis",{"_index":1325,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"overview.html":{}}}],["compétences",{"_index":118,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["conception",{"_index":113,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["config",{"_index":1315,"title":{},"body":{"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{}}}],["config.data.datasets.foreach((dd:any",{"_index":1439,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["config:any",{"_index":1140,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["configuration",{"_index":527,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["confirm",{"_index":848,"title":{},"body":{"components/ChartsComponent.html":{}}}],["considered",{"_index":1195,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["console.log(chart.config.data,data",{"_index":1392,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["console.log(error",{"_index":711,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["const",{"_index":72,"title":{},"body":{"components/AboutCandidateComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesRoutingModule.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/AboutCandidateComponent.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["constructor(@inject('api",{"_index":1176,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["constructor(activeroute",{"_index":766,"title":{},"body":{"components/ChartsComponent.html":{}}}],["constructor(api",{"_index":1160,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"injectables/RealTimeUseCases.html":{}}}],["constructor(http",{"_index":552,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["constructor(isloading",{"_index":593,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(loader",{"_index":682,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["constructor(private",{"_index":572,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/ChartsComponent.html":{}}}],["constructor(public",{"_index":703,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["constructor(usecases",{"_index":952,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["contactinfo",{"_index":343,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["contactinfo.education",{"_index":361,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["contactinfo.language",{"_index":369,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["contacts",{"_index":240,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["container",{"_index":277,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["contains",{"_index":1230,"title":{},"body":{"components/HeaderComponent.html":{}}}],["content",{"_index":390,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["core",{"_index":1357,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["correlation",{"_index":987,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["corresponding",{"_index":664,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cors",{"_index":1541,"title":{},"body":{"dependencies.html":{}}}],["cover",{"_index":327,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["coverage",{"_index":1492,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cssws45",{"_index":408,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["csv",{"_index":1557,"title":{},"body":{"dependencies.html":{}}}],["current",{"_index":1266,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["currentitem",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentvaluesschema",{"_index":486,"title":{"interfaces/CurrentValuesSchema.html":{}},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{}}}],["cursor",{"_index":353,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["custom_elements_schema",{"_index":634,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{}}}],["cv",{"_index":1241,"title":{},"body":{"components/HeaderComponent.html":{}}}],["d",{"_index":1067,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["d'information",{"_index":208,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["d'un",{"_index":1115,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["d.foreach(item",{"_index":1408,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["d.station",{"_index":1454,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["d.unit",{"_index":1124,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["d.values.map((item:any",{"_index":1452,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["d=data[0].datasets.find((item:any)=>item.label===dt.label",{"_index":1394,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["d=dt[math.floor(math.random()*(dt.length",{"_index":1102,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["d?dt.data=dt.data.concat(d.data):null",{"_index":1395,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["dans",{"_index":109,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["data",{"_index":30,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"components/AppComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data,label:item[0",{"_index":1108,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["data.find((d:any)=>d.station==item.label)?item.data=data.find((d:any)=>d.station==item.label)?.data:this.chart.config.data.datasets.splice(index,1",{"_index":1421,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data.foreach((d:any,index:number",{"_index":1448,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data.length?data=this.scatterdata(d,4):null",{"_index":1383,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data.map((item:any)=>({...item,values:object.entries(item.values).map(e=>e[1",{"_index":1429,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data:any",{"_index":237,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["data:any=stationdata.map(item=>({time:item.timestamp,station:item.station_name,values:groupby(item.values,(v:any)=>v.unit",{"_index":1427,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data:chartbardatainterface|any",{"_index":1027,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["data:diffrange?data.monthdata:data.daydata",{"_index":1142,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["data=data.map((item:any)=>({...item,values:object.entries(item.values).map(e=>e[1",{"_index":1447,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data[0]?.station",{"_index":1398,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data[0]?.unit",{"_index":1399,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["dataset",{"_index":1593,"title":{},"body":{"miscellaneous/functions.html":{}}}],["datasets",{"_index":65,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["datasets:object.entries(d.dayval).map((item:any",{"_index":1106,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["datasets:this.timedata.filter((f:any)=>f.gunit).map((data:any",{"_index":1141,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["datasets:values.map(s=>({data:[{x:selected.value,y:s.value}],label:`${s.sensor}=f(${selected.sensor",{"_index":1414,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["date",{"_index":799,"title":{},"body":{"components/ChartsComponent.html":{}}}],["datetime",{"_index":1287,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["david",{"_index":87,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{}}}],["day",{"_index":800,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd",{"_index":795,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["dd')!=moment().subtract(1,'days').format('yyyy",{"_index":833,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd')!=this.today",{"_index":835,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd');this.start=moment(this.start).subtract(math.abs(diff),'days').format('yyyy",{"_index":855,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd')||moment(this.start).format('yyyy",{"_index":834,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd')}&&end=${moment(this.end).format('yyyy",{"_index":860,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd')}`:location.href=`${'/visualisation/diferred?station'}=${this.selected}&&start=${moment(this.start).format('yyyy",{"_index":861,"title":{},"body":{"components/ChartsComponent.html":{}}}],["de",{"_index":68,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["decide",{"_index":693,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["decided",{"_index":1300,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["declarations",{"_index":536,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["declare",{"_index":804,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["declared",{"_index":778,"title":{},"body":{"components/ChartsComponent.html":{}}}],["decoration",{"_index":915,"title":{},"body":{"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["default",{"_index":41,"title":{},"body":{"components/AboutCandidateComponent.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":34,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{}}}],["degree:\"baccalauréat",{"_index":223,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["degree:\"licence",{"_index":214,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["degree:\"master",{"_index":207,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["dependencies",{"_index":619,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":125,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["descriptioon",{"_index":153,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["destroyed",{"_index":1323,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["detected",{"_index":1272,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["deux",{"_index":105,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["dev",{"_index":1604,"title":{},"body":{"index.html":{}}}],["developer",{"_index":147,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["development",{"_index":60,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["difered",{"_index":498,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["diferedcomponentinterface",{"_index":743,"title":{"interfaces/DiferedComponentInterface.html":{}},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{}}}],["diferred",{"_index":430,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["diferreddatachartcomponent",{"_index":429,"title":{"components/DiferredDataChartComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["diferredmodeusecases",{"_index":533,"title":{"injectables/DiferredModeUsecases.html":{}},"body":{"modules/ApiProxyModule.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"coverage.html":{}}}],["diff",{"_index":852,"title":{},"body":{"components/ChartsComponent.html":{}}}],["different",{"_index":449,"title":{},"body":{"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["diffrange=moment(this.ranges.end).diff(moment(this.ranges.start),'days')>=30",{"_index":1136,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["diffrange?x0=`${starttime[2]}/${starttime[1]}`:null",{"_index":1139,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["diffrent",{"_index":1346,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["diff{this.end=moment(this.end).add(math.abs(diff),'days').format('yyyy",{"_index":854,"title":{},"body":{"components/ChartsComponent.html":{}}}],["différée",{"_index":1237,"title":{},"body":{"components/HeaderComponent.html":{}}}],["direction",{"_index":307,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["directive",{"_index":420,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["directives",{"_index":439,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1611,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1615,"title":{},"body":{"index.html":{}}}],["disbale",{"_index":1295,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["display",{"_index":289,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/chartTitle.html":{}}}],["display:boolean",{"_index":721,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["display:true",{"_index":1402,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["dist",{"_index":1614,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":958,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["div",{"_index":374,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["django",{"_index":49,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["docker",{"_index":61,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["docs",{"_index":1239,"title":{},"body":{"components/HeaderComponent.html":{}}}],["docsurl:\"http://localhost:8080/docs",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":160,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{},"coverage.html":{}}}],["docurl",{"_index":1224,"title":{},"body":{"components/HeaderComponent.html":{}}}],["docurl=environment.docsurl",{"_index":1236,"title":{},"body":{"components/HeaderComponent.html":{}}}],["doing",{"_index":1275,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["doit",{"_index":867,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["domaine",{"_index":67,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["données",{"_index":156,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["donnés",{"_index":1114,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["dri",{"_index":89,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{}}}],["dt",{"_index":1100,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["dt:any",{"_index":1428,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["dt=chartbarddatasets(d",{"_index":1069,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["dt[0].station",{"_index":1435,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["dt[0].values.map((item:any",{"_index":1432,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["dts.push({data:{y:yd.ydata[key][id].y,x:xd.y},label:`${yd.label}=f(${item.label",{"_index":1093,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["dts:any",{"_index":1089,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["du",{"_index":161,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["duration",{"_index":1579,"title":{},"body":{"miscellaneous/functions.html":{}}}],["duration:number",{"_index":724,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["dynamic",{"_index":1535,"title":{},"body":{"dependencies.html":{}}}],["début",{"_index":871,"title":{},"body":{"components/ChartsComponent.html":{}}}],["développement",{"_index":111,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["d’architectures",{"_index":176,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["d’intérêts",{"_index":262,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["d’un",{"_index":191,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["e2e",{"_index":1620,"title":{},"body":{"index.html":{}}}],["each",{"_index":661,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ease",{"_index":895,"title":{},"body":{"components/ChartsComponent.html":{}}}],["easing",{"_index":725,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["ed",{"_index":274,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["education",{"_index":246,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["educations",{"_index":203,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["eee",{"_index":889,"title":{},"body":{"components/ChartsComponent.html":{}}}],["efficaces",{"_index":134,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["ejs",{"_index":1543,"title":{},"body":{"dependencies.html":{}}}],["el",{"_index":259,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["element",{"_index":419,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["email1:\"kouame.ndri1998@gmail.com",{"_index":84,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["email2:\"kouame.ndri@supcom.tn",{"_index":85,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["email:\"kouame.ndri1998@gmail.com",{"_index":1210,"title":{},"body":{"components/FooterComponent.html":{}}}],["en",{"_index":101,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["enable",{"_index":695,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["enabled',preloadingstrategy:preloadallmodules",{"_index":674,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":466,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"index.html":{}}}],["end:moment().format('yyyy",{"_index":998,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["end:string=moment().format('yyyy",{"_index":821,"title":{},"body":{"components/ChartsComponent.html":{}}}],["end?this.end=end:null",{"_index":827,"title":{},"body":{"components/ChartsComponent.html":{}}}],["endpoint",{"_index":563,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["endpoints",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["engineer",{"_index":82,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["englishw85",{"_index":402,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["entre",{"_index":1113,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["entries",{"_index":1294,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["environment",{"_index":567,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.baseapi",{"_index":561,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["environment.docsurl",{"_index":1228,"title":{},"body":{"components/HeaderComponent.html":{}}}],["error(err.message",{"_index":1063,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["et",{"_index":114,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["etat",{"_index":187,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["ev",{"_index":787,"title":{},"body":{"components/ChartsComponent.html":{}}}],["ev?.target.value",{"_index":830,"title":{},"body":{"components/ChartsComponent.html":{}}}],["exceder",{"_index":869,"title":{},"body":{"components/ChartsComponent.html":{}}}],["exected",{"_index":789,"title":{},"body":{"components/ChartsComponent.html":{}}}],["execute",{"_index":1158,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"index.html":{}}}],["execute(start",{"_index":1162,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["execute(start:string,end:string,projectname:string",{"_index":1183,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["executed",{"_index":597,"title":{},"body":{"components/AppComponent.html":{},"components/ChartsComponent.html":{}}}],["experience",{"_index":141,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["export",{"_index":235,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["exports",{"_index":545,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["express",{"_index":1545,"title":{},"body":{"dependencies.html":{}}}],["expérience",{"_index":128,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["extended",{"_index":1560,"title":{},"body":{"dependencies.html":{}}}],["f0f0f0",{"_index":392,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["fa",{"_index":397,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["factorisation",{"_index":195,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["false",{"_index":601,"title":{},"body":{"components/AppComponent.html":{},"injectables/IsLoadingService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":271,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["façon",{"_index":1117,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["features",{"_index":1193,"title":{},"body":{"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{}}}],["featuresmodule",{"_index":1187,"title":{"modules/FeaturesModule.html":{}},"body":{"modules/FeaturesModule.html":{},"modules.html":{},"overview.html":{}}}],["featuresroutingmodule",{"_index":1191,"title":{"modules/FeaturesRoutingModule.html":{}},"body":{"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["fetching",{"_index":1164,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["fff",{"_index":287,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{}}}],["files",{"_index":1609,"title":{},"body":{"index.html":{}}}],["fill",{"_index":883,"title":{},"body":{"components/ChartsComponent.html":{}}}],["fill:false",{"_index":1145,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["fin",{"_index":872,"title":{},"body":{"components/ChartsComponent.html":{}}}],["finalize",{"_index":708,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["first",{"_index":1625,"title":{},"body":{"index.html":{}}}],["firts",{"_index":1327,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["fit",{"_index":326,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["fixed",{"_index":614,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["flask",{"_index":50,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["flex",{"_index":306,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["font",{"_index":270,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["football",{"_index":96,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["footer",{"_index":1207,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":433,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["footer.component.html",{"_index":1209,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1208,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":1488,"title":{},"body":{"modules/SharedModule.html":{}}}],["footercomponent",{"_index":432,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["for(let",{"_index":74,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["formsmodule",{"_index":642,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["fortes",{"_index":117,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["france",{"_index":152,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["français",{"_index":252,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["frenchw100",{"_index":406,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["fron",{"_index":691,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["function",{"_index":1526,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1569,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1629,"title":{},"body":{"index.html":{}}}],["gather",{"_index":448,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["generate",{"_index":1575,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["generated",{"_index":1597,"title":{},"body":{"index.html":{}}}],["genie",{"_index":209,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["gestion",{"_index":170,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["getcurrentvalues",{"_index":452,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getcurrentvalues(stationname",{"_index":457,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getcurrentvalues(stationname:string):observable",{"_index":514,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["gethourlyavg",{"_index":453,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["gethourlyavg(station",{"_index":464,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["gethourlyavg(station:string,start:string,end:string",{"_index":577,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["gethourlyavg(station:string,start:string,end:string):observable",{"_index":517,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["getkey",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getkey(currentitem",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getlatesttransmissionstatus",{"_index":454,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getlatesttransmissionstatus(stationid",{"_index":469,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getlatesttransmissionstatus(stationid:number):observable",{"_index":518,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["getrandomrgb",{"_index":233,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getrange",{"_index":455,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getrange(station",{"_index":473,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getrange(station:string,start:string,end:string",{"_index":581,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["getrange(station:string,start:string,end:string):observable",{"_index":516,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["getsessioninfo",{"_index":456,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getsessioninfo(projectname",{"_index":475,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getsessioninfo(projectname:string):observable",{"_index":515,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["getting",{"_index":482,"title":{"index.html":{}},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["give",{"_index":1281,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["given",{"_index":508,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["go",{"_index":1632,"title":{},"body":{"index.html":{}}}],["gp",{"_index":1076,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["gp?gp.values.filter((v:any)=>v.label!=item.label",{"_index":1081,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["gp?gp.values.find((v:any)=>v.label===item.label):null",{"_index":1079,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["grab",{"_index":1591,"title":{},"body":{"miscellaneous/functions.html":{}}}],["graph",{"_index":994,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"modules.html":{}}}],["graphs",{"_index":974,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["grid",{"_index":290,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["group",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group=item.group.find((f:any)=>f.unit===item.unit&&!units.find(u=>u==f.unit",{"_index":1075,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["group?.values.foreach((v:any",{"_index":1096,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["groupby",{"_index":1012,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["groupby(ydata,(g:any)=>g.label",{"_index":1084,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["grp",{"_index":1083,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["génie",{"_index":102,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["h2",{"_index":330,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["h4",{"_index":367,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["h4:nth",{"_index":365,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["h5",{"_index":363,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["handle",{"_index":972,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["handles",{"_index":585,"title":{},"body":{"components/AppComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["header",{"_index":1221,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":435,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["header.component.html",{"_index":1223,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1222,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":1486,"title":{},"body":{"modules/SharedModule.html":{}}}],["headercomponent",{"_index":434,"title":{"components/HeaderComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":284,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["help",{"_index":1630,"title":{},"body":{"index.html":{}}}],["helper",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helps",{"_index":1276,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["here",{"_index":447,"title":{},"body":{"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesRoutingModule.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"miscellaneous/variables.html":{}}}],["hidden",{"_index":323,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["hobbies",{"_index":95,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["html",{"_index":418,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["htmlws30",{"_index":407,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["http",{"_index":555,"title":{},"body":{"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{}}}],["http://localhost:4200",{"_index":1606,"title":{},"body":{"index.html":{}}}],["http:httpclient",{"_index":574,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["http_interceptors",{"_index":644,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":553,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["httpclientmodule",{"_index":645,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":697,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["httphandler",{"_index":687,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["httpinterceptor",{"_index":690,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["httprequest",{"_index":685,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["i=0;i",{"_index":75,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["i=0;iu.label===s.station).foreach((item:any,index:number",{"_index":1420,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["icon",{"_index":355,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["icon:'error",{"_index":862,"title":{},"body":{"components/ChartsComponent.html":{}}}],["icon:'warning",{"_index":844,"title":{},"body":{"components/ChartsComponent.html":{}}}],["icons",{"_index":878,"title":{},"body":{"components/ChartsComponent.html":{}}}],["icons:not(:last",{"_index":880,"title":{},"body":{"components/ChartsComponent.html":{}}}],["identifier",{"_index":1493,"title":{},"body":{"coverage.html":{}}}],["if(d",{"_index":1104,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["if(data.length",{"_index":1390,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["if(diff",{"_index":857,"title":{},"body":{"components/ChartsComponent.html":{}}}],["if(moment(this.end).format('yyyy",{"_index":832,"title":{},"body":{"components/ChartsComponent.html":{}}}],["if(request.url.includes('getrange')||request.url.includes('getsessioninfo",{"_index":705,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["if(resp",{"_index":858,"title":{},"body":{"components/ChartsComponent.html":{}}}],["if(selectedsensor",{"_index":1407,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["if(st",{"_index":1040,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["if(station",{"_index":831,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["if(ydata.length&&xdata",{"_index":1085,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["ilws60",{"_index":414,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["img",{"_index":324,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["imgbx",{"_index":319,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["implementation",{"_index":689,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["implemented",{"_index":739,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["implements",{"_index":18,"title":{},"body":{"components/AboutCandidateComponent.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"index.html":{}}}],["implicites",{"_index":197,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["import",{"_index":229,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["important",{"_index":1219,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["imports",{"_index":537,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index:0",{"_index":616,"title":{},"body":{"components/AppComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["infomation",{"_index":1215,"title":{},"body":{"components/FooterComponent.html":{}}}],["information",{"_index":492,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["informatiques",{"_index":216,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["ingénieur",{"_index":183,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["init",{"_index":1317,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["initchartbar",{"_index":1306,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["initchartbar(...args",{"_index":1459,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["initchartbar(...args:any):chart",{"_index":748,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["initiate",{"_index":1326,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["initiated",{"_index":599,"title":{},"body":{"components/AppComponent.html":{}}}],["initscatter",{"_index":1307,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["initscatter(...args",{"_index":1461,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["initscatter(...args:any):void",{"_index":749,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["initscatter(d",{"_index":1319,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["initscatter(d:currentvaluesschema",{"_index":1381,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["inject",{"_index":769,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["inject('diferred:mode",{"_index":1018,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["inject('realtime:mode",{"_index":1361,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["injectable",{"_index":546,"title":{"injectables/ApiResourceService.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"injectables/RealTimeUseCases.html":{}},"body":{"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["injectable({providedin:'root",{"_index":1175,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["injectables",{"_index":547,"title":{},"body":{"injectables/ApiResourceService.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"injectables/RealTimeUseCases.html":{},"overview.html":{}}}],["inline",{"_index":356,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["input",{"_index":777,"title":{},"body":{"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["input('chart",{"_index":816,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('scatters",{"_index":812,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('selectedstation",{"_index":818,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('stations",{"_index":814,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('times",{"_index":810,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('title",{"_index":1234,"title":{},"body":{"components/HeaderComponent.html":{}}}],["inputs",{"_index":762,"title":{},"body":{"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["instance",{"_index":1318,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["integrated_sensors",{"_index":495,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["intercept",{"_index":679,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["intercept(request",{"_index":684,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["interceptor",{"_index":675,"title":{"interceptors/Aq54HttpInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptor.interceptor.ts",{"_index":678,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{},"coverage.html":{}}}],["interceptor.interceptor.ts:16",{"_index":683,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["interceptor.interceptor.ts:18",{"_index":696,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["interceptor.interceptor.ts:28",{"_index":688,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["interceptors",{"_index":676,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["interest",{"_index":393,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["interface",{"_index":443,"title":{"interfaces/ApiInterface.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}},"body":{"interfaces/ApiInterface.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{}}}],["interfaces",{"_index":445,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"overview.html":{}}}],["interfonctionnelles",{"_index":127,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["internet",{"_index":98,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["interval",{"_index":1322,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["isloading",{"_index":591,"title":{},"body":{"components/AppComponent.html":{}}}],["isloading:isloadingservice",{"_index":604,"title":{},"body":{"components/AppComponent.html":{}}}],["isloadingservice",{"_index":594,"title":{"injectables/IsLoadingService.html":{}},"body":{"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"injectables/IsLoadingService.html":{},"coverage.html":{}}}],["it's",{"_index":1194,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["item",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item.company",{"_index":257,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item.degree",{"_index":248,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item.group.find((g:any)=>g.unit===item.unit",{"_index":1077,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item.jobtitle",{"_index":258,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item.map((item:any)=>({y:item.value,x:d.time",{"_index":1453,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["item.map((item:any)=>({y:item.value,x:dt[0].time",{"_index":1433,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["item.school",{"_index":249,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item.station",{"_index":873,"title":{},"body":{"components/ChartsComponent.html":{}}}],["item.time",{"_index":256,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item.year",{"_index":247,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item['daydata']?item['daydata']=item['daydata'].concat(v.dayvalues):item['daydata']=v.dayvalues",{"_index":1098,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item['dayval']=groupby(dts,(d:any)=>d.label",{"_index":1094,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item['gunit']=v.unit",{"_index":1097,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item['monthdata']?item['monthdata']=item['monthdata'].concat(v.monthdays):item['monthdata']=v.monthdays",{"_index":1099,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item[1].map((dt:any)=>({...dt.data",{"_index":1107,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["items",{"_index":310,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["its&&!its.data.find((t:any)=>t.x===dt[0].time)?its.data.push(...dd.data):false",{"_index":1441,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["javascript/typescript",{"_index":64,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["jobtitle:\"lead",{"_index":167,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["jobtitle:\"remote",{"_index":145,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["jobtitle:\"sofware",{"_index":81,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["jobtitle:\"stage",{"_index":182,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["jours",{"_index":865,"title":{},"body":{"components/ChartsComponent.html":{}}}],["jquery",{"_index":1547,"title":{},"body":{"dependencies.html":{}}}],["jsws70",{"_index":410,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["juin",{"_index":144,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["justify",{"_index":389,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["k",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":1619,"title":{},"body":{"index.html":{}}}],["key",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["know",{"_index":1173,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["kouam",{"_index":79,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["l'unit",{"_index":1122,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["la",{"_index":112,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["label",{"_index":66,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["label:`${data.gunit",{"_index":1144,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["label:`(${item[0].unit",{"_index":1434,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["labels",{"_index":43,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ChartBarDataInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{}}}],["labels:string",{"_index":731,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["languages",{"_index":250,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["last",{"_index":505,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["last_transmission_utc",{"_index":510,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["latest",{"_index":1274,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["latesttransmissionsresponsescema",{"_index":509,"title":{"interfaces/LatestTransmissionsResponseScema.html":{}},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{}}}],["latitude",{"_index":511,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["le",{"_index":110,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["learning",{"_index":54,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["lecture",{"_index":99,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["left",{"_index":291,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["left:0",{"_index":617,"title":{},"body":{"components/AppComponent.html":{}}}],["left_side",{"_index":302,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["legend",{"_index":417,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["les",{"_index":179,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["letter",{"_index":345,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["li",{"_index":348,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["line",{"_index":338,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["linear",{"_index":1401,"title":{},"body":{"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{}}}],["link",{"_index":923,"title":{},"body":{"components/ChartsComponent.html":{}}}],["linkedin:\"https://linkedin.com/in/kouam",{"_index":1211,"title":{},"body":{"components/FooterComponent.html":{}}}],["linkedin:\"linkedin.com/in/kouam",{"_index":86,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["lis",{"_index":1584,"title":{},"body":{"miscellaneous/functions.html":{}}}],["list",{"_index":349,"title":{},"body":{"components/AboutCandidateComponent.html":{},"miscellaneous/variables.html":{}}}],["list.reduce((previous",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["literal",{"_index":718,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{}}}],["load",{"_index":659,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/IsLoadingService.html":{}}}],["loadchildren:()=>\"import('./features').then(m=>m.featuresmodule",{"_index":671,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":790,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["loader",{"_index":681,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["loader:isloadingservice",{"_index":704,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["loading.service",{"_index":702,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["loading.service.ts",{"_index":1248,"title":{},"body":{"injectables/IsLoadingService.html":{},"coverage.html":{}}}],["loading.service.ts:13",{"_index":1251,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["loading.service.ts:23",{"_index":1253,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["logiciel",{"_index":103,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["logicielles",{"_index":131,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["logiciels",{"_index":116,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["longitude",{"_index":512,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["loop",{"_index":726,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["l’aide",{"_index":196,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["l’approche",{"_index":193,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["l’art",{"_index":188,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["ma",{"_index":960,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["machine",{"_index":53,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["main",{"_index":584,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["maintainaspectratio",{"_index":1377,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["maintenance",{"_index":115,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["make",{"_index":986,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/functions.html":{}}}],["makeanimation",{"_index":1356,"title":{},"body":{"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["makeanimation(duration",{"_index":1578,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makes",{"_index":967,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["maketitle",{"_index":1013,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["maketitle('distribution",{"_index":1378,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["maketitle(`correlation",{"_index":1112,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["maketitle(`distribution",{"_index":1147,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["maketitle(text",{"_index":1580,"title":{},"body":{"miscellaneous/functions.html":{}}}],["making",{"_index":1336,"title":{},"body":{"components/RealTimeChartComponent.html":{},"miscellaneous/variables.html":{}}}],["map",{"_index":660,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/functions.html":{}}}],["mapdata",{"_index":1527,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapdata(data",{"_index":1582,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdifereddata",{"_index":1014,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapdifereddata(data",{"_index":1585,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdifereddata(raw_data,this.stationsinfo[1].integrated_sensors",{"_index":1048,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["mapping",{"_index":1589,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maps",{"_index":1583,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maptolabels",{"_index":1015,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["maptolabels(data",{"_index":1587,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maptolabels(data,labels",{"_index":1068,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["margin",{"_index":264,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["match",{"_index":1293,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["matching",{"_index":442,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":906,"title":{},"body":{"components/ChartsComponent.html":{}}}],["matrix",{"_index":194,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["max",{"_index":281,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["media",{"_index":398,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["menu",{"_index":1243,"title":{},"body":{"components/HeaderComponent.html":{}}}],["message",{"_index":780,"title":{},"body":{"components/ChartsComponent.html":{}}}],["mesure",{"_index":1123,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["metadata",{"_index":20,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["method",{"_index":955,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["methode",{"_index":172,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["microservice",{"_index":57,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["microservices",{"_index":202,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["min",{"_index":283,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["min:0",{"_index":1456,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["min:d.time",{"_index":1455,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["min:x0",{"_index":1149,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["miscellaneous",{"_index":1568,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":174,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["mm",{"_index":794,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["mode",{"_index":499,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["modelisation",{"_index":190,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["moderne",{"_index":219,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["module",{"_index":519,"title":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"components/HeaderComponent.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":521,"title":{"modules.html":{}},"body":{"modules/ApiProxyModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["modèle",{"_index":192,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["moment",{"_index":801,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"dependencies.html":{}}}],["moment().format('yyyy",{"_index":793,"title":{},"body":{"components/ChartsComponent.html":{}}}],["moment().subtract(1,'days').format('yyyy",{"_index":797,"title":{},"body":{"components/ChartsComponent.html":{}}}],["moment(last_transmission_utc",{"_index":1289,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["moment(this.end).diff(moment(this.start),'days",{"_index":853,"title":{},"body":{"components/ChartsComponent.html":{}}}],["mon",{"_index":1240,"title":{},"body":{"components/HeaderComponent.html":{}}}],["more",{"_index":1631,"title":{},"body":{"index.html":{}}}],["morgan",{"_index":1550,"title":{},"body":{"dependencies.html":{}}}],["multi:true",{"_index":652,"title":{},"body":{"modules/AppModule.html":{}}}],["musique",{"_index":97,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["médiatron",{"_index":185,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["n",{"_index":88,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["n'dri",{"_index":80,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["name",{"_index":423,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name:\"david",{"_index":78,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["native",{"_index":59,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["navigate",{"_index":1605,"title":{},"body":{"index.html":{}}}],["ne",{"_index":866,"title":{},"body":{"components/ChartsComponent.html":{}}}],["need",{"_index":1624,"title":{},"body":{"index.html":{}}}],["needed",{"_index":1168,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"modules/SharedModule.html":{}}}],["nestjs",{"_index":45,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["new",{"_index":1062,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":686,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["next.handle(request",{"_index":713,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":707,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["ng",{"_index":1602,"title":{},"body":{"index.html":{}}}],["ng2",{"_index":1552,"title":{},"body":{"dependencies.html":{}}}],["ngmodule",{"_index":528,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngondestroy",{"_index":950,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["ngoninit",{"_index":32,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["ngx",{"_index":1556,"title":{},"body":{"dependencies.html":{}}}],["nodejs",{"_index":44,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["nombre",{"_index":864,"title":{},"body":{"components/ChartsComponent.html":{}}}],["none",{"_index":351,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["not(.circle",{"_index":922,"title":{},"body":{"components/ChartsComponent.html":{}}}],["nouvelle",{"_index":150,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["now.diff(transtime,'minutes',true)==0&&last_transmission_utc?true:true",{"_index":1296,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["now=moment",{"_index":1290,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["null",{"_index":856,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["number",{"_index":470,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["obj=object.entries(grp",{"_index":1087,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["object",{"_index":77,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(xgroup).foreach((key:any",{"_index":1090,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["observable",{"_index":463,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["observable,throwerror",{"_index":698,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["once",{"_index":598,"title":{},"body":{"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["onchartsinit",{"_index":1308,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["onchartsinit(...args",{"_index":1463,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["onchartsinit(...args:any):void",{"_index":751,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["ondestroy",{"_index":939,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["one",{"_index":982,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["oninit",{"_index":19,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["oninit(projectname",{"_index":1478,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["oninit(projectname:string):promise",{"_index":1268,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["oninit,ondestroy,chartbuilder,diferedcomponentinterface",{"_index":1017,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["oninit,ondestroy,chartbuilder,realtimechartcomponent",{"_index":1360,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["oninitresponseschema",{"_index":1258,"title":{"interfaces/OninitResponseSchema.html":{}},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["ontimeseriechartinit",{"_index":1309,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["ontimeseriechartinit(...args",{"_index":1465,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["ontimeseriechartinit(...args:any):void",{"_index":754,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["ontimeseriechartinit(d",{"_index":1329,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["ontimeseriechartinit(d:currentvaluesschema",{"_index":1443,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["onupdate",{"_index":1474,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["onupdate(station",{"_index":1480,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["onupdate(station:string):promise",{"_index":1278,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["optimising",{"_index":1277,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["option",{"_index":225,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["optional",{"_index":461,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":732,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["order",{"_index":1166,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["others",{"_index":988,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["oum",{"_index":220,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["out",{"_index":631,"title":{},"body":{"modules/AppModule.html":{},"components/ChartsComponent.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":322,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["overview",{"_index":1634,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":379,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["package",{"_index":1531,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":266,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["page",{"_index":1636,"title":{},"body":{"index.html":{}}}],["paiement",{"_index":159,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["par",{"_index":1380,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["parallel",{"_index":1174,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["parallelexecution",{"_index":1159,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["parallelexecution(stationname",{"_index":1171,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["parallelexecution(stationname:string='',start:string,end:string,projectname:string",{"_index":1178,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["param",{"_index":575,"title":{},"body":{"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["parameter",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parameters",{"_index":460,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":1558,"title":{},"body":{"dependencies.html":{}}}],["pas",{"_index":868,"title":{},"body":{"components/ChartsComponent.html":{}}}],["path",{"_index":665,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{}}}],["path:'david",{"_index":669,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:'diferred",{"_index":1202,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["path:'real",{"_index":1204,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["path:'visualisation",{"_index":670,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch:'full",{"_index":667,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pau",{"_index":149,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["pdf",{"_index":1553,"title":{},"body":{"dependencies.html":{}}}],["percent",{"_index":370,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["phone:\"+216",{"_index":91,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["photo",{"_index":328,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["photo:\"assets/david.png",{"_index":83,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["phws40",{"_index":412,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["pick",{"_index":1167,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["place",{"_index":175,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["placed",{"_index":1216,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["plage",{"_index":839,"title":{},"body":{"components/ChartsComponent.html":{}}}],["platform",{"_index":1621,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":1111,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["pointer",{"_index":354,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["poppins",{"_index":272,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["position",{"_index":275,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["position:'bottom",{"_index":1131,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["position:'left",{"_index":1128,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["pour",{"_index":135,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["pratique",{"_index":108,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["preload",{"_index":1249,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["preloadallmodules",{"_index":656,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloader/is",{"_index":701,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["previous",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["previous[group",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["previous[group].push(currentitem",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primary",{"_index":918,"title":{},"body":{"components/ChartsComponent.html":{}}}],["principes",{"_index":180,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["pris",{"_index":1116,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["private",{"_index":1019,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["problèmes",{"_index":120,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["production",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["professionnel",{"_index":254,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["profil",{"_index":253,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["profile:`ingénieur",{"_index":100,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["profiletext",{"_index":305,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["project",{"_index":1596,"title":{},"body":{"index.html":{}}}],["projectname",{"_index":477,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["projet",{"_index":171,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["promise",{"_index":977,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["promise.all",{"_index":1180,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["promise.all(sessioninfo.map(async(station:sessioninfoschema)=>await",{"_index":1269,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["promise.all(this.stations.map(async(s:sessioninfoschema)=>await",{"_index":1445,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["properties",{"_index":29,"title":{"properties.html":{}},"body":{"components/AboutCandidateComponent.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartTitle.html":{},"properties.html":{}}}],["property",{"_index":1214,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{}}}],["provide:\"diferred:mode",{"_index":541,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["provide:'api",{"_index":539,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["provide:'realtime:mode",{"_index":543,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["provide:http_interceptors",{"_index":651,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":569,"title":{},"body":{"injectables/ApiResourceService.html":{},"injectables/IsLoadingService.html":{}}}],["providers",{"_index":538,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["proxy",{"_index":525,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["proxy.module.ts",{"_index":524,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["proxy/api",{"_index":523,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["public",{"_index":590,"title":{},"body":{"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"injectables/IsLoadingService.html":{}}}],["purpose",{"_index":15,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["python",{"_index":48,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["queryparams",{"_index":792,"title":{},"body":{"components/ChartsComponent.html":{}}}],["quipes",{"_index":126,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["radius",{"_index":320,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["random",{"_index":1576,"title":{},"body":{"miscellaneous/functions.html":{}}}],["randomly",{"_index":981,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{}}}],["range",{"_index":782,"title":{},"body":{"components/ChartsComponent.html":{}}}],["rangedataschema",{"_index":501,"title":{"interfaces/RangeDataSchema.html":{}},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{}}}],["ranges",{"_index":942,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["raw_data",{"_index":1302,"title":{},"body":{"interfaces/RangeDataSchema.html":{}}}],["raw_data,station",{"_index":1184,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["raw_data,station,sessioninfo",{"_index":1050,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{}}}],["raw_data,station,sessioninfo:stationinfo",{"_index":1041,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["raw_data,station},sessioninfo",{"_index":1179,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["raw_data:array",{"_index":502,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["reactjs",{"_index":47,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["readonly",{"_index":573,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["real",{"_index":437,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["realtime",{"_index":1265,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["realtimechartcomponent",{"_index":436,"title":{"components/RealTimeChartComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["realtimechartcomponentinterface",{"_index":747,"title":{"interfaces/RealTimeChartComponentInterface.html":{}},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{}}}],["realtimeusecases",{"_index":534,"title":{"injectables/RealTimeUseCases.html":{}},"body":{"modules/ApiProxyModule.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["recomandation",{"_index":189,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["recommendation",{"_index":200,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["recommender",{"_index":51,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["record",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirectto:'/visualisation/real",{"_index":666,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1635,"title":{},"body":{"index.html":{}}}],["relative",{"_index":276,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["reload",{"_index":1608,"title":{},"body":{"index.html":{}}}],["repeat(1",{"_index":399,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["repeat(2",{"_index":400,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["repeat(4",{"_index":394,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["represents",{"_index":504,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["request",{"_index":663,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"injectables/DiferredModeUsecases.html":{}}}],["require",{"_index":805,"title":{},"body":{"components/ChartsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require:any",{"_index":806,"title":{},"body":{"components/ChartsComponent.html":{}}}],["required",{"_index":968,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["requirements",{"_index":729,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["res?location.href=`${'/visualisation/diferred?station'}=${station}`:null",{"_index":850,"title":{},"body":{"components/ChartsComponent.html":{}}}],["reseaux",{"_index":215,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["reset",{"_index":630,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resource",{"_index":549,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["resources",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":1262,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["response=await",{"_index":1284,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["responsive:true",{"_index":1110,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["reste",{"_index":1120,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["results",{"_index":441,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resum",{"_index":17,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["retrieve",{"_index":491,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["retrieving",{"_index":500,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["retrive",{"_index":1280,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["return",{"_index":480,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":37,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"miscellaneous/functions.html":{}}}],["rgb",{"_index":1577,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rgb(105",{"_index":907,"title":{},"body":{"components/ChartsComponent.html":{}}}],["rgb(75",{"_index":891,"title":{},"body":{"components/ChartsComponent.html":{}}}],["rgba(0",{"_index":300,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["rgba(255",{"_index":316,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["right",{"_index":383,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["right_side",{"_index":375,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["robustes",{"_index":132,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["root",{"_index":570,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"injectables/IsLoadingService.html":{}}}],["root'},{'name",{"_index":426,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["route",{"_index":662,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule",{"_index":646,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{}}}],["routermodule.forchild(routes",{"_index":1205,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":672,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":657,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/FeaturesRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":658,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"modules/FeaturesRoutingModule.html":{}}}],["routing.module",{"_index":638,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{}}}],["routing.module.ts",{"_index":655,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FeaturesRoutingModule.html":{}}}],["row",{"_index":380,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["run",{"_index":1273,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"index.html":{}}}],["running",{"_index":1616,"title":{},"body":{"index.html":{}}}],["russianw90",{"_index":404,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["rxjs",{"_index":478,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/CurrentValuesSchema.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":700,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["réel",{"_index":1238,"title":{},"body":{"components/HeaderComponent.html":{}}}],["répondre",{"_index":136,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["résolution",{"_index":119,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["s",{"_index":1335,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["same",{"_index":990,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"miscellaneous/functions.html":{}}}],["sansserif",{"_index":273,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["sc=0;scthis.scatterchart.push({config,chart:new",{"_index":1384,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["scaffolding",{"_index":1610,"title":{},"body":{"index.html":{}}}],["scales",{"_index":733,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["scatter",{"_index":979,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["scatterbasedchart",{"_index":928,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{}}}],["scatterbasedchart(...args",{"_index":934,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{}}}],["scatterbasedchart(...args:any):void",{"_index":745,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["scatterchart",{"_index":943,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["scatterchart:any",{"_index":1366,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["scatterchart:chart|any=null",{"_index":1023,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["scatterconfig:any",{"_index":1105,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["scatterdata",{"_index":1310,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["scatterdata(...args",{"_index":1467,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["scatterdata(...args:any):any",{"_index":750,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["scatterdata(d",{"_index":1331,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["scatterdata(d:currentvaluesschema[],n:any=null",{"_index":1405,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["scatters",{"_index":763,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["scatters:any",{"_index":813,"title":{},"body":{"components/ChartsComponent.html":{}}}],["scatters:string",{"_index":1021,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["schemas",{"_index":633,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{}}}],["schemas:[custom_elements_schema",{"_index":650,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{}}}],["school:\"esatic",{"_index":210,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["school:\"lycée",{"_index":218,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["school:\"sup'com",{"_index":204,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["scientifique",{"_index":224,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["screen",{"_index":920,"title":{},"body":{"components/ChartsComponent.html":{}}}],["scrollpositionrestoration",{"_index":673,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["scrum/up",{"_index":63,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["select",{"_index":925,"title":{},"body":{"components/ChartsComponent.html":{}}}],["selecte",{"_index":992,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["selected",{"_index":1412,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["selected='smart188",{"_index":819,"title":{},"body":{"components/ChartsComponent.html":{}}}],["selected=item.values.find(v=>v.sensor.tolowercase()===selectedsensor.type.tolowercase",{"_index":1411,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["selectedsensor",{"_index":1304,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["selectedsensor:any",{"_index":1364,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["selectedsensor=this.selectedsensor?this.selectedsensor:this.sensors[n||math.floor(math.random()*(this.sensors.length",{"_index":1406,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["selectedstation",{"_index":764,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["selectedstation:string='smart188",{"_index":1025,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["selector",{"_index":21,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["selon",{"_index":1121,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["sensor",{"_index":984,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["sensor:selected.sensor",{"_index":1417,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["sensors",{"_index":944,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/functions.html":{}}}],["sensors:any",{"_index":1026,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["sensors:array",{"_index":1365,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["sensors:values.map(s=>s.sensor",{"_index":1418,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["serie",{"_index":226,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["serve",{"_index":1603,"title":{},"body":{"index.html":{}}}],["server",{"_index":1601,"title":{},"body":{"index.html":{}}}],["service",{"_index":550,"title":{},"body":{"injectables/ApiResourceService.html":{},"injectables/IsLoadingService.html":{}}}],["services",{"_index":201,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["sessiond_id",{"_index":494,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["sessionid",{"_index":1282,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["sessioninfo",{"_index":1052,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["sessioninfo:sessioninfoschema",{"_index":1264,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["sessioninfoschema",{"_index":493,"title":{"interfaces/SessionInfoSchema.html":{}},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{}}}],["sessions",{"_index":1165,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["set",{"_index":1200,"title":{},"body":{"modules/FeaturesRoutingModule.html":{},"components/RealTimeChartComponent.html":{}}}],["setinterval",{"_index":1057,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["setinterval(async",{"_index":1372,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["setloading",{"_index":1250,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["setloading(value",{"_index":1252,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["setloading(value=false",{"_index":1256,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["setted",{"_index":608,"title":{},"body":{"components/AppComponent.html":{}}}],["settimeout",{"_index":609,"title":{},"body":{"components/AppComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["setting",{"_index":613,"title":{},"body":{"components/AppComponent.html":{}}}],["setup",{"_index":526,"title":{},"body":{"modules/ApiProxyModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"injectables/IsLoadingService.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["shadow",{"_index":297,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["shared",{"_index":648,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{}}}],["sharedmodule",{"_index":627,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":962,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{}}}],["showcases",{"_index":16,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["size",{"_index":331,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["sizing",{"_index":268,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["skills",{"_index":387,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["small",{"_index":898,"title":{},"body":{"components/ChartsComponent.html":{}}}],["smart188",{"_index":773,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["software",{"_index":146,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["solid",{"_index":315,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["solutions",{"_index":130,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"index.html":{}}}],["spacer",{"_index":1242,"title":{},"body":{"components/HeaderComponent.html":{}}}],["spacing",{"_index":346,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["span",{"_index":340,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["spinner",{"_index":680,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{},"injectables/IsLoadingService.html":{}}}],["spinning",{"_index":592,"title":{},"body":{"components/AppComponent.html":{}}}],["spinning=false",{"_index":603,"title":{},"body":{"components/AppComponent.html":{}}}],["src/.../charts.component.ts",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1570,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/@core",{"_index":602,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DiferredDataChartComponent.html":{}}}],["src/@core/api",{"_index":522,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["src/@core/api/api.resource.service.ts",{"_index":548,"title":{},"body":{"injectables/ApiResourceService.html":{},"coverage.html":{}}}],["src/@core/api/api.resource.service.ts:16",{"_index":554,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/api/api.resource.service.ts:24",{"_index":558,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/api/api.resource.service.ts:34",{"_index":557,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/api/api.resource.service.ts:42",{"_index":556,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/api/api.resource.service.ts:50",{"_index":560,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/api/api.resource.service.ts:61",{"_index":559,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/interceptor/http",{"_index":677,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{},"coverage.html":{}}}],["src/@core/preloader/is",{"_index":1247,"title":{},"body":{"injectables/IsLoadingService.html":{},"coverage.html":{}}}],["src/app/about",{"_index":10,"title":{},"body":{"components/AboutCandidateComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":654,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":583,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":595,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":600,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":596,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":632,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/features/diferred",{"_index":936,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{}}}],["src/app/features/features",{"_index":1199,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["src/app/features/features.module.ts",{"_index":1192,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["src/app/features/real",{"_index":1303,"title":{},"body":{"components/RealTimeChartComponent.html":{},"coverage.html":{}}}],["src/app/shared/charts/charts.component.ts",{"_index":755,"title":{},"body":{"components/ChartsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/charts/charts.component.ts:104",{"_index":781,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:35",{"_index":776,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:36",{"_index":772,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:37",{"_index":775,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:38",{"_index":771,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:39",{"_index":774,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:43",{"_index":798,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:47",{"_index":796,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:51",{"_index":768,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:64",{"_index":788,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:78",{"_index":785,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":1206,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:18",{"_index":1212,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":1220,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts:20",{"_index":1225,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:24",{"_index":1229,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1485,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/domain",{"_index":565,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["src/domain/api/api.interface.ts",{"_index":446,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{}}}],["src/domain/api/api.interface.ts:72",{"_index":459,"title":{},"body":{"interfaces/ApiInterface.html":{}}}],["src/domain/api/api.interface.ts:73",{"_index":476,"title":{},"body":{"interfaces/ApiInterface.html":{}}}],["src/domain/api/api.interface.ts:74",{"_index":474,"title":{},"body":{"interfaces/ApiInterface.html":{}}}],["src/domain/api/api.interface.ts:75",{"_index":467,"title":{},"body":{"interfaces/ApiInterface.html":{}}}],["src/domain/api/api.interface.ts:76",{"_index":471,"title":{},"body":{"interfaces/ApiInterface.html":{}}}],["src/domain/chart.ts",{"_index":715,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{}}}],["src/domain/chart.ts:56",{"_index":1489,"title":{},"body":{"interfaces/chartBuilder.html":{}}}],["src/domain/chart.ts:57",{"_index":1491,"title":{},"body":{"interfaces/chartBuilder.html":{}}}],["src/domain/chart.ts:64",{"_index":930,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{}}}],["src/domain/chart.ts:65",{"_index":935,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{}}}],["src/domain/chart.ts:66",{"_index":933,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{}}}],["src/domain/chart.ts:75",{"_index":1460,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/domain/chart.ts:76",{"_index":1462,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/domain/chart.ts:77",{"_index":1468,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/domain/chart.ts:78",{"_index":1464,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/domain/chart.ts:79",{"_index":1472,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/domain/chart.ts:80",{"_index":1470,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/domain/chart.ts:81",{"_index":1466,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/environments/environment.prod",{"_index":568,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/HeaderComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":1522,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1523,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/usecases",{"_index":535,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["src/usecases/diferred",{"_index":1156,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"coverage.html":{}}}],["src/usecases/real",{"_index":1259,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["src/utils",{"_index":234,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["src/utils.ts",{"_index":1525,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["st",{"_index":969,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["staion",{"_index":786,"title":{},"body":{"components/ChartsComponent.html":{}}}],["staions",{"_index":1267,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["start",{"_index":465,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["start,end,station}=param",{"_index":825,"title":{},"body":{"components/ChartsComponent.html":{}}}],["start:moment().subtract(1,'days').format('yyyy",{"_index":997,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["start:string=moment().subtract(1,'days').format('yyyy",{"_index":820,"title":{},"body":{"components/ChartsComponent.html":{}}}],["start?this.start=start:null",{"_index":826,"title":{},"body":{"components/ChartsComponent.html":{}}}],["started",{"_index":1595,"title":{"index.html":{}},"body":{}}],["starttime=moment(this.ranges.start).tolocalestring().split",{"_index":1137,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["statements",{"_index":1494,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["station",{"_index":468,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"miscellaneous/functions.html":{}}}],["station,start,end}=param",{"_index":1032,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["station:d.station",{"_index":1451,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["station:item.station_name",{"_index":1415,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["station:string",{"_index":503,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["station?location.href=`${'/visualisation/diferred?station'}=${station}&&start=${moment(this.start).format('yyyy",{"_index":859,"title":{},"body":{"components/ChartsComponent.html":{}}}],["station?this.builder(station):this.builder",{"_index":1036,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["station?this.selected=station:null",{"_index":828,"title":{},"body":{"components/ChartsComponent.html":{}}}],["station_id",{"_index":513,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["station_name",{"_index":487,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["stationdata",{"_index":1573,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stationdata:currentvaluesschema",{"_index":1426,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["stationdata:currentvaluesschema[]=d",{"_index":1444,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["stationdatalabels",{"_index":1016,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stationdatalabels(stations",{"_index":1590,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stationdatalabels(this.stationsinfo",{"_index":1065,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["stationid",{"_index":472,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["stationinfo",{"_index":1046,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["stationname",{"_index":462,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"injectables/DiferredModeUsecases.html":{}}}],["stations",{"_index":484,"title":{},"body":{"interfaces/ApiInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"miscellaneous/functions.html":{}}}],["stations,sessioninfo",{"_index":1271,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["stations:any",{"_index":815,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["stations:currentvaluesschema",{"_index":1263,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["stations:sessioninfoschema",{"_index":1369,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["stationsinfo",{"_index":945,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["stationsinfo:sessioninfoschema",{"_index":1024,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["stationval:currentvaluesschema[]=v",{"_index":1388,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["status",{"_index":507,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["stored",{"_index":1613,"title":{},"body":{"index.html":{}}}],["string",{"_index":458,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/HeaderComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["structure",{"_index":973,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["style",{"_index":350,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["styleurls",{"_index":24,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["sub",{"_index":1232,"title":{},"body":{"components/HeaderComponent.html":{}}}],["submodule",{"_index":1196,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["subscibe",{"_index":791,"title":{},"body":{"components/ChartsComponent.html":{}}}],["support",{"_index":1639,"title":{},"body":{"modules.html":{}}}],["sup’com",{"_index":186,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["sur",{"_index":178,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["svg",{"_index":1640,"title":{},"body":{"modules.html":{}}}],["svg.material",{"_index":877,"title":{},"body":{"components/ChartsComponent.html":{}}}],["swagger",{"_index":164,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["swal",{"_index":807,"title":{},"body":{"components/ChartsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["swal:sweetalert",{"_index":808,"title":{},"body":{"components/ChartsComponent.html":{}}}],["swal=require('sweetalert",{"_index":809,"title":{},"body":{"components/ChartsComponent.html":{}}}],["sweetalert",{"_index":802,"title":{},"body":{"components/ChartsComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["sweetalert/typings/core",{"_index":803,"title":{},"body":{"components/ChartsComponent.html":{}}}],["swimlane/ngx",{"_index":1536,"title":{},"body":{"dependencies.html":{}}}],["system",{"_index":52,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["système",{"_index":199,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["systèmes",{"_index":122,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["t",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":1530,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1529,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1226,"title":{},"body":{"components/HeaderComponent.html":{}}}],["takes",{"_index":980,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["technologies,abidjan",{"_index":169,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["telecom",{"_index":217,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["temporelle",{"_index":1148,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["temps",{"_index":840,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{}}}],["tension",{"_index":717,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["tension:0.8",{"_index":1146,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["term",{"_index":989,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["test",{"_index":1618,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1627,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1617,"title":{},"body":{"index.html":{}}}],["text",{"_index":333,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["text:'le",{"_index":863,"title":{},"body":{"components/ChartsComponent.html":{}}}],["text:'vous",{"_index":842,"title":{},"body":{"components/ChartsComponent.html":{}}}],["text:`${data[0].sensor}(${data[0].unit",{"_index":1403,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["text:string",{"_index":722,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["then(res",{"_index":849,"title":{},"body":{"components/ChartsComponent.html":{}}}],["things",{"_index":607,"title":{},"body":{"components/AppComponent.html":{}}}],["this.activeroute.queryparams.subscribe((param:any",{"_index":824,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.activeroute.queryparams.subscribe(async(param:any",{"_index":1031,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.api.getcurrentvalues(station).topromise",{"_index":1279,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["this.api.getcurrentvalues(station.station).topromise",{"_index":1270,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["this.api.getlatesttransmissionstatus(sessionid).topromise",{"_index":1285,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["this.api.getrange(sessioninfo[math.floor(math.random()*(sessioninfo.length",{"_index":1185,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["this.api.getrange(stationname,start,end).topromise",{"_index":1181,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["this.api.getsessioninfo(projectname).topromise",{"_index":1182,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["this.barbasedchart",{"_index":1054,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.builder(station",{"_index":1035,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.changerange(station,'vous",{"_index":836,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.chart.update",{"_index":1422,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.chartdata(data",{"_index":1049,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.data.datasets=dt",{"_index":1070,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.data.labels=labels",{"_index":1066,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.http.get(`${this.baseapi}${'getstationstatus'}/${stationid",{"_index":576,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["this.http.get(`${this.baseapi}gethourlyavg/${station}/${start}/${end}?pivot=${true",{"_index":578,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["this.http.get(this.baseapi+`getcurrentvalues/${stationname",{"_index":579,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["this.http.get(this.baseapi+`getrange/${station}/${start}/${end",{"_index":582,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["this.http.get(this.baseapi+`getsessioninfo/${projectname",{"_index":580,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["this.isloading.load.subscribe((res:boolean",{"_index":610,"title":{},"body":{"components/AppComponent.html":{}}}],["this.load.next(value",{"_index":1257,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["this.loader.setloading(false",{"_index":709,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["this.loader.setloading(true",{"_index":706,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["this.onchartsinit",{"_index":1370,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.ranges.end=end",{"_index":1033,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.ranges.start=start",{"_index":1034,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterbasedchart",{"_index":1055,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterchart",{"_index":1154,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterchart.data=scatterconfig.data",{"_index":1134,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterchart.find((sc:any)=>sc.config.station===station",{"_index":1391,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.scatterchart.options=scatterconfig.options",{"_index":1133,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterchart.update",{"_index":1135,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterdata(d",{"_index":1382,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.scatterdata(stationval",{"_index":1389,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.scatters.push('sc",{"_index":1153,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.selectedstation",{"_index":1119,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.selectedstation=station",{"_index":1044,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.spinning=res",{"_index":611,"title":{},"body":{"components/AppComponent.html":{}}}],["this.stations.foreach(async(s:any",{"_index":1373,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.stations=this.stationsinfo.map((item:sessioninfoschema)=>({station:item.station,selected:item.station==this.selectedstation?true:false",{"_index":1047,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.stations=this.stationsinfo.map((item:sessioninfoschema,index:number)=>({station:item.station,selected:index==0",{"_index":1053,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.stationsinfo",{"_index":1045,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.stattioncurrentval.execute(s.station).topromise",{"_index":1446,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.time",{"_index":1371,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.timedata.filter((item:any)=>item.dayval",{"_index":1101,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.timedata.foreach((item:any,index:any",{"_index":1074,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.timedata=dt",{"_index":1071,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.timedata=this.timedata.map((item:any)=>({...item,group:object.entries(groupby(this.timedata,(t:any)=>t.unit)).map((e:any)=>({unit:e[0],values:e[1],label:item.label",{"_index":1072,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.timer",{"_index":1056,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.times.push(index+\"times\"+date.now",{"_index":1449,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.timescahrt.find((c:any)=>c.config.station===station",{"_index":1430,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.timescahrt.push({chart,config",{"_index":1458,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.updatescatter",{"_index":1058,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.updatescatter([stationdata],s.station",{"_index":1424,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.updatetimeseries(stationdata,s.station",{"_index":1423,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.usecases.canupdate(s.sessiond_id)?this.updatedata(s):null",{"_index":1374,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.usecases.execute(this.ranges.start,this.ranges.end,this.title",{"_index":1051,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.usecases.parallelexecution(st,this.ranges.start,this.ranges.end,this.title",{"_index":1043,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["throw",{"_index":1061,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["throwerror(error",{"_index":712,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["ticks",{"_index":1129,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["time",{"_index":438,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["time:\"depuis",{"_index":165,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["time:\"février",{"_index":181,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["time:\"mars",{"_index":142,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["time:any",{"_index":1368,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["time:d.time",{"_index":1450,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["time:dt[0].time",{"_index":1431,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["timedata",{"_index":946,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["timedata:any",{"_index":1029,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["timer",{"_index":947,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["timer:any=null",{"_index":1030,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["times",{"_index":765,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["times:any",{"_index":811,"title":{},"body":{"components/ChartsComponent.html":{}}}],["times:string",{"_index":1022,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["timescahrt",{"_index":1305,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["timescahrt:any",{"_index":1367,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["timestamp",{"_index":488,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["title",{"_index":344,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["title2",{"_index":378,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["title:maketitle(`${d.label}(${d.unit})`,getrandomrgb",{"_index":1132,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["title:maketitle(`${data[0].sensors.join(',')}(${data[0].unit})`,getrandomrgb",{"_index":1400,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["title:maketitle(`autres",{"_index":1126,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["title:maketitle(`correlation",{"_index":1151,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["title=\"aq54",{"_index":1235,"title":{},"body":{"components/HeaderComponent.html":{}}}],["today",{"_index":759,"title":{},"body":{"components/ChartsComponent.html":{}}}],["today=moment().format('yyyy",{"_index":822,"title":{},"body":{"components/ChartsComponent.html":{}}}],["toolbar",{"_index":1245,"title":{},"body":{"components/HeaderComponent.html":{}}}],["top",{"_index":325,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["top:60px",{"_index":293,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["transform",{"_index":334,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["transition",{"_index":586,"title":{},"body":{"components/AppComponent.html":{},"components/ChartsComponent.html":{}}}],["translatey",{"_index":902,"title":{},"body":{"components/ChartsComponent.html":{}}}],["transmission",{"_index":506,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["transtime",{"_index":1288,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["true",{"_index":847,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1039,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["tslib",{"_index":1564,"title":{},"body":{"dependencies.html":{}}}],["tunis",{"_index":205,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["tunisie",{"_index":94,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type:'linear",{"_index":1125,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["types",{"_index":1379,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["typicaly",{"_index":497,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["ul",{"_index":347,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["uml",{"_index":62,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["unfortunately",{"_index":1297,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["unit",{"_index":963,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["unit:selected?.unit",{"_index":1416,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["units.push(group?.unit",{"_index":1095,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["units:any",{"_index":1073,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["unknown",{"_index":1170,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"components/RealTimeChartComponent.html":{}}}],["unset",{"_index":887,"title":{},"body":{"components/ChartsComponent.html":{}}}],["up",{"_index":173,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["update",{"_index":993,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["update=false",{"_index":1438,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["update?chart.update():null",{"_index":1442,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatechartbardata",{"_index":1528,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatechartbardata(stationdata",{"_index":1592,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updatechartbardata,groupby",{"_index":1355,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatedata",{"_index":1311,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["updatedata(...args",{"_index":1469,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["updatedata(...args:any):any",{"_index":753,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["updatedata(s",{"_index":1333,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatescatter",{"_index":951,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/chartBuilder.html":{}}}],["updatescatter(...args",{"_index":1490,"title":{},"body":{"interfaces/chartBuilder.html":{}}}],["updatescatter(...args:any):void",{"_index":742,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["updatescatter(v",{"_index":1337,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatescatter(v:currentvaluesschema[]=[],station:string",{"_index":1387,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatetimeseries",{"_index":1312,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["updatetimeseries(...args",{"_index":1471,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["updatetimeseries(...args:any):any",{"_index":752,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["updatetimeseries(d",{"_index":1340,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatetimeseries(d:currentvaluesschema,station:string",{"_index":1425,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updating",{"_index":1594,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uppercase",{"_index":335,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["url",{"_index":564,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/HeaderComponent.html":{}}}],["url(\"https://fonts.googleapis.com/css2?family=poppins:wght@200;300;400;500;600;700;800;900&display=swap",{"_index":263,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["use",{"_index":1260,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{},"index.html":{}}}],["usecase",{"_index":1169,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["usecases",{"_index":451,"title":{},"body":{"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/SessionInfoSchema.html":{}}}],["usecases.ts",{"_index":1157,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"coverage.html":{}}}],["usecases.ts:26",{"_index":1172,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["usecases.ts:47",{"_index":1163,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["usecases.ts:9",{"_index":1161,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["usecases:diferredmodeusecases",{"_index":1020,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["usecases:realtimeusecases",{"_index":1362,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["useclass:apiresourceservice",{"_index":540,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["useclass:aq54httpinterceptor",{"_index":653,"title":{},"body":{"modules/AppModule.html":{}}}],["useclass:diferredmodeusecases",{"_index":542,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["useclass:realtimeusecases",{"_index":544,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["used",{"_index":479,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":14,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{}}}],["user.address",{"_index":245,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.email1",{"_index":242,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.email2",{"_index":243,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.email|lowercase",{"_index":1218,"title":{},"body":{"components/FooterComponent.html":{}}}],["user.jobtitle",{"_index":239,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.linkedin",{"_index":244,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.name",{"_index":238,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.phone",{"_index":241,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.profile",{"_index":255,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["using",{"_index":1213,"title":{},"body":{"components/FooterComponent.html":{}}}],["utc",{"_index":1286,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["utilisateurs",{"_index":139,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["utilisation",{"_index":157,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["utility",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uvre",{"_index":198,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["v",{"_index":1339,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["v.sensor!=selectedsensor.type",{"_index":1410,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["v.unit===item.unit",{"_index":1082,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["valid",{"_index":1299,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["value",{"_index":42,"title":{},"body":{"components/AboutCandidateComponent.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":485,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["values.length?data.push",{"_index":1413,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["values:array",{"_index":489,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["values=item.values.filter(v=>!v.unit?null:v.unit.tolowercase()===selectedsensor.unit?.tolowercase",{"_index":1409,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["var",{"_index":421,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":983,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1646,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1599,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":163,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["viewer",{"_index":1554,"title":{},"body":{"dependencies.html":{}}}],["visualisation",{"_index":737,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["void",{"_index":39,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{}}}],["volutives",{"_index":133,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["wait",{"_index":605,"title":{},"body":{"components/AppComponent.html":{}}}],["website",{"_index":1227,"title":{},"body":{"components/HeaderComponent.html":{}}}],["weight",{"_index":336,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["well",{"_index":1358,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["wether",{"_index":694,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["white",{"_index":886,"title":{},"body":{"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["width",{"_index":279,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["work",{"_index":1231,"title":{},"body":{"components/HeaderComponent.html":{}}}],["wrap",{"_index":885,"title":{},"body":{"components/ChartsComponent.html":{}}}],["x",{"_index":1130,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["x0=`${starttime[1]}/${starttime[3",{"_index":1138,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["xdata",{"_index":1078,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["xgroup:any=groupby(xdata.dayvalues,(d:any)=>d.x",{"_index":1086,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["xgroup[key].foreach((xd:any,id:number",{"_index":1092,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["y",{"_index":734,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["y.foreach((yd:any",{"_index":1091,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["y:any=obj.map((yd:any)=>({label:yd[0],ydata:groupby(yd[1][0].dayvalues,(f:any)=>f.x",{"_index":1088,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["ydata",{"_index":1080,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["year:\"2010",{"_index":221,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["year:\"2017",{"_index":212,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["year:\"2021",{"_index":206,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["year_company",{"_index":381,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["z",{"_index":615,"title":{},"body":{"components/AppComponent.html":{}}}],["zone.js",{"_index":1566,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":629,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutCandidateComponent.html":{"url":"components/AboutCandidateComponent.html","title":"component - AboutCandidateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutCandidateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about-candidate/about-candidate.component.ts\n\n\n\n    \n        Description\n    \n    \n        *About user component\nits for my own purpose and just showcases my Resumé\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about-candidate\n            \n\n\n\n            \n                styleUrls\n                ./about-candidate.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about-candidate.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/about-candidate/about-candidate.component.ts:127\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/about-candidate/about-candidate.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  labels: [\n    'Nodejs',\n    \"Nestjs\",\n    \"Angular\",\n    \"Reactjs\",\n    \"Python\",\n    \"Django\",\n    \"Flask\",\n    \"Recommender system\",\n    \"Machine learning\",\n    \"Clean Architecture\",\n    \"Microservice Architecture\",\n    'Cloud native app development',\n    \"Docker\",\n    \"UML\",\n    \"SCRUM/UP\",\n    \"JavaScript/TypeScript\"\n  ],\n  datasets: [{\n    label: 'Domaine de competence.',\n    data: [4.5,4.5,4.5,2.5,4,3,3,3,2.5,4,3,3,2.8,3,2.3,4.5],\n    borderColor: (()=>{\n      const bg:any=[]\n      for(let i=0;i{\n      const bg:any=[]\n      for(let i=0;i\n                    \n                \n                    \n                        \n                                Defined in src/app/about-candidate/about-candidate.component.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  name:\"David Kouamé N'DRI\",\n  jobTitle:\"Sofware Engineer\",\n  photo:\"assets/david.png\",\n  email1:\"kouame.ndri1998@gmail.com\",\n  email2:\"kouame.ndri@supcom.tn\",\n  linkedIn:\"linkedin.com/in/kouamé-david-n-dri-1615a5186\",\n  phone:\"+216 27999299\",\n  address:\"Ariana, Tunisie\",\n  hobbies:[\n    'Football',\n    \"Musique\",\n    \"Internet\",\n    \"Lecture\"\n  ],\n  profile:`Ingénieur en génie logiciel avec deux (02) années de pratique dans le développement, la conception et la maintenance de logiciels.\n  Fortes compétences en résolution de problèmes, analyse de systèmes complexes et collaboration avec des équipes interfonctionnelles.\n  Expérience approfondie dans le développement de solutions logicielles robustes, évolutives et efficaces pour répondre aux besoins des utilisateurs et des clients.`,\n  experience:[\n    {\n      time:\"Mars 2023-Juin 2023\",\n      jobTitle:\"Remote software Developer\",\n      company:\"SeeWatch, Pau, Nouvelle Aquitaine France\",\n      descriptioon:[\n        \" Développement Backend avec Nodejs\",\n        \"conception de la base de données\",\n        \"\tUtilisation des API de paiement\",\n        \"\tdocumentation du code via Swagger.\",\n        ]\n    },\n    {\n      time:\"Depuis Juin 2022\",\n      jobTitle:\"Lead Developer\",\n      company:\"Aladin Technologies,Abidjan\",\n      descriptioon:[\n        \"Conception et développement\",\n        \"gestion de projet avec la methode UP\",\n        \"mise en place d’architectures logicielles robustes\",\n        \"développement basé sur les principes de Clean Architecture\"\n        ]\n    },\n    {\n      time:\"Février 2022- Juin 2022\",\n      jobTitle:\"Stage Ingénieur génie logiciel\",\n      company:\"Laboratoire Médiatron Sup’Com Tunisie\",\n      descriptioon:[\n        \"Conception et développement\",\n        \"Etat de l’art des systèmes de recomandation\",\n        \"modelisation d’un modèle basé sur l’approche Matrix Factorisation à l’aide des données implicites pour la mise en œuvre d’un système de recommendation de services \",\n        \"architecture microservices.\"\n        ]\n    }\n\n  ],\neducations:[\n\n  {\n   school:\"Sup'com Tunis\",\n   year:\"2021-2022\",\n   degree:\"Master systèmes d'information et  genie Logiciel \"\n  },\n  {\n    school:\"ESATIC, Abidjan\",\n    year:\"2017-2020\",\n    degree:\"Licence systèmes reseaux informatiques et telecom \"\n   },\n   {\n    school:\"Lycée Moderne Oumé.\",\n    year:\"2010-2017\",\n    degree:\"Baccalauréat scientifique option serie C. \"\n   }\n  ]\n}\n                    \n                \n                    \n                        \n                                Defined in src/app/about-candidate/about-candidate.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport Chart from 'chart.js/auto';\nimport { getRandomRgb } from 'src/utils';\n/**\n * *About user component\n * its for my own purpose and just showcases my Resumé\n */\n@Component({\n  selector: 'app-about-candidate',\n  templateUrl: './about-candidate.component.html',\n  styleUrls: ['./about-candidate.component.scss']\n})\nexport class AboutCandidateComponent implements OnInit {\nuser={\n  name:\"David Kouamé N'DRI\",\n  jobTitle:\"Sofware Engineer\",\n  photo:\"assets/david.png\",\n  email1:\"kouame.ndri1998@gmail.com\",\n  email2:\"kouame.ndri@supcom.tn\",\n  linkedIn:\"linkedin.com/in/kouamé-david-n-dri-1615a5186\",\n  phone:\"+216 27999299\",\n  address:\"Ariana, Tunisie\",\n  hobbies:[\n    'Football',\n    \"Musique\",\n    \"Internet\",\n    \"Lecture\"\n  ],\n  profile:`Ingénieur en génie logiciel avec deux (02) années de pratique dans le développement, la conception et la maintenance de logiciels.\n  Fortes compétences en résolution de problèmes, analyse de systèmes complexes et collaboration avec des équipes interfonctionnelles.\n  Expérience approfondie dans le développement de solutions logicielles robustes, évolutives et efficaces pour répondre aux besoins des utilisateurs et des clients.`,\n  experience:[\n    {\n      time:\"Mars 2023-Juin 2023\",\n      jobTitle:\"Remote software Developer\",\n      company:\"SeeWatch, Pau, Nouvelle Aquitaine France\",\n      descriptioon:[\n        \" Développement Backend avec Nodejs\",\n        \"conception de la base de données\",\n        \"\tUtilisation des API de paiement\",\n        \"\tdocumentation du code via Swagger.\",\n        ]\n    },\n    {\n      time:\"Depuis Juin 2022\",\n      jobTitle:\"Lead Developer\",\n      company:\"Aladin Technologies,Abidjan\",\n      descriptioon:[\n        \"Conception et développement\",\n        \"gestion de projet avec la methode UP\",\n        \"mise en place d’architectures logicielles robustes\",\n        \"développement basé sur les principes de Clean Architecture\"\n        ]\n    },\n    {\n      time:\"Février 2022- Juin 2022\",\n      jobTitle:\"Stage Ingénieur génie logiciel\",\n      company:\"Laboratoire Médiatron Sup’Com Tunisie\",\n      descriptioon:[\n        \"Conception et développement\",\n        \"Etat de l’art des systèmes de recomandation\",\n        \"modelisation d’un modèle basé sur l’approche Matrix Factorisation à l’aide des données implicites pour la mise en œuvre d’un système de recommendation de services \",\n        \"architecture microservices.\"\n        ]\n    }\n\n  ],\neducations:[\n\n  {\n   school:\"Sup'com Tunis\",\n   year:\"2021-2022\",\n   degree:\"Master systèmes d'information et  genie Logiciel \"\n  },\n  {\n    school:\"ESATIC, Abidjan\",\n    year:\"2017-2020\",\n    degree:\"Licence systèmes reseaux informatiques et telecom \"\n   },\n   {\n    school:\"Lycée Moderne Oumé.\",\n    year:\"2010-2017\",\n    degree:\"Baccalauréat scientifique option serie C. \"\n   }\n  ]\n}\n\ndata:any = {\n  labels: [\n    'Nodejs',\n    \"Nestjs\",\n    \"Angular\",\n    \"Reactjs\",\n    \"Python\",\n    \"Django\",\n    \"Flask\",\n    \"Recommender system\",\n    \"Machine learning\",\n    \"Clean Architecture\",\n    \"Microservice Architecture\",\n    'Cloud native app development',\n    \"Docker\",\n    \"UML\",\n    \"SCRUM/UP\",\n    \"JavaScript/TypeScript\"\n  ],\n  datasets: [{\n    label: 'Domaine de competence.',\n    data: [4.5,4.5,4.5,2.5,4,3,3,3,2.5,4,3,3,2.8,3,2.3,4.5],\n    borderColor: (()=>{\n      const bg:any=[]\n      for(let i=0;i{\n      const bg:any=[]\n      for(let i=0;i{\n          const bg:any=[]\n          for(let i=0;i{\n          const bg:any=[]\n          for(let i=0;i\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n                \n            \n            \n            {{user.name}} {{user.jobTitle}} \n        \n\n        \n            Contacts\n            \n                \n                    \n                    {{user.phone}}\n                \n                \n                    \n                    {{user.email1}}\n                \n                \n                  \n                  {{user.email2}}\n              \n                \n                    \n                    \n                    \n                      {{user.linkedIn}}\n                    \n                \n                \n                    \n                    {{user.address}}\n                \n            \n        \n        \n            Education\n            \n                \n                    {{item.year}}\n                    {{item.degree}}\n                    {{item.school}}\n                \n\n            \n        \n        \n            Languages\n            \n                \n                    Anglais\n                    \n                        \n                    \n                \n            \n\n\n            \n                \n                    Français\n                    \n                        \n                    \n                \n            \n          \n\n        \n    \n        \n            Profil professionnel\n            \n              {{user.profile}}\n            \n        \n        \n            Experience\n            \n                \n                    {{item.time}}\n                    {{item.company}}\n                \n                \n                    {{item.jobTitle}}\n                    \n                      \n                            {{el}}\n                      \n                    \n                \n            \n\n\n        \n        \n            Competences\n            \n        \n        \n            Centres d’intérêts\n            \n\n        \n\n\n    \n    -->\n\n\n\n\n    \n\n    \n                \n                    ./about-candidate.component.scss\n                \n                @import url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700;800;900&display=swap\");\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: \"Poppins\", SansSerif;\n}\n\n.ed{\n  position: relative;\n  padding: 0%;\n}\n\n\n.container {\n  position: absolute;\n  width: 100%;\n  max-width: 1000px;\n  min-height: 1000px;\n  background-color: #fff;\n  margin: 50px;\n  display: grid;\n  left: 200px;\n  top:60px;\n  grid-template-columns: 1fr 2fr;\n  box-shadow: 0 35px 55px rgba(0, 0, 0, 0.1);\n}\n.container .left_Side {\n  position: relative;\n  background-color: #003147;\n  padding: 40px;\n}\n.profileText {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 20px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n}\n.profileText .imgBx {\n  position: relative;\n  width: 200px;\n  height: 200px;\n  border-radius: 50%;\n  overflow: hidden;\n}\n.profileText .imgBx img {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n.photo {\n  width: 100%;\n  height: auto;\n}\n.profileText h2 {\n  color: #fff;\n  font-size: 1.5em;\n  margin-top: 20px;\n  text-transform: uppercase;\n  text-align: center;\n  font-weight: 600;\n  line-height: 1.4em;\n}\n.profileText h2 span {\n  font-size: 0.8em;\n  font-weight: 300;\n}\n.contactInfo {\n  padding-top: 20px;\n}\n.title {\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: 600;\n  letter-spacing: 1px;\n  margin-bottom: 20px;\n}\n.contactInfo ul {\n  position: relative;\n}\n.contactInfo ul li {\n  list-style: none;\n  position: relative;\n  margin: 10px 0;\n  cursor: pointer;\n}\n.contactInfo ul li .icon {\n  display: inline-block;\n  width: 30px;\n  font-size: 18px;\n  color: #03a9f4;\n}\n.contactInfo ul li span {\n  color: #fff;\n  font-weight: 300;\n}\n.contactInfo.education li {\n  margin-bottom: 15px;\n}\n.contactInfo.education h5 {\n  color: #03a9f4;\n  font-weight: 400;\n}\n.contactInfo.education h4:nth-child(2) {\n  color: #fff;\n  font-weight: 300;\n}\n.contactInfo.education h4 {\n  color: #fff;\n  font-weight: 200;\n}\n.contactInfo.language .percent {\n  position: relative;\n  width: 100%;\n  height: 6px;\n  background-color: #081921;\n  display: block;\n  margin-top: 5px;\n}\n.contactInfo.language .percent div {\n  position: relative;\n  top: 0;\n  left: 0;\n  height: 100%;\n  background-color: #03a9f4;\n}\n.container .right_Side {\n  position: relative;\n  background-color: #fff;\n  padding: 40px;\n}\n.about {\n  margin-bottom: 50px;\n}\n.about:last-child {\n  margin-bottom: 0;\n}\n.title2 {\n  color: #003147;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  margin-bottom: 10px;\n}\np {\n  color: #081921;\n}\n.about .box {\n  display: flex;\n  flex-direction: row;\n  margin: 10px 0;\n}\n.about .box .year_company {\n  min-width: 350px;\n  margin-right: 10px;\n}\n.about .box .year_company h5 {\n  text-transform: uppercase;\n  color: #080fe1;\n  font-weight: 350;\n}\n.about .box .text h4 {\n  text-transform: uppercase;\n  color: #080fe1;\n  font-size: 16px;\n}\n.skills .box {\n  position: relative;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 150px 1fr;\n  justify-content: center;\n  align-items: center;\n}\n.skills .box h4 {\n  text-transform: uppercase;\n  color: #848c90;\n  font-weight: 300;\n}\n.skills .box .percent {\n  position: relative;\n  width: 100%;\n  height: 10px;\n  background-color: #f0f0f0;\n}\n.skills .box .percent div {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  background-color: #03a9f4;\n}\n.interest ul {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n}\n.interest ul li {\n  list-style: none;\n  color: black;\n  font-weight: 500;\n  margin: 10px 0;\n}\n.interest ul li .fa {\n  color: #03a9f4;\n  font-size: 18px;\n  width: 20px;\n}\n@media (max-width: 1000px) {\n  .container {\n    margin: 10px;\n    grid-template-columns: repeat(1, 1fr);\n  }\n  .interest ul {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n@media (max-width: 600px) {\n  .about .box {\n    flex-direction: column;\n  }\n  .about .box .year_company {\n    margin-bottom: 5px;\n  }\n  .interest ul {\n    grid-template-columns: repeat(1, 1fr);\n  }\n  .skills .box {\n    grid-template-columns: repeat(1, 1fr);\n  }\n}\n.englishw85 {\n  width: 85%;\n}\n.russianw90 {\n  width: 90%;\n}\n.frenchw100 {\n  width: 100%;\n}\n.htmlws30 {\n  width: 50%;\n}\n.cssws45 {\n  width: 45%;\n}\n.jsws70 {\n  width: 70%;\n}\n.phws40 {\n  width: 40%;\n}\n.ilws60 {\n  width: 60%;\n}\n.adw70 {\n  width: 70%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{user.name}} {{user.jobTitle}}                             Contacts                                                                    {{user.phone}}                                                                        {{user.email1}}                                                                    {{user.email2}}                                                                                                                {{user.linkedIn}}                                                                                            {{user.address}}                                                        Education                                                {{item.year}}                    {{item.degree}}                    {{item.school}}                                                        Languages                                                Anglais                                                                                                                                            Français                                                                                                                                      Profil professionnel                          {{user.profile}}                                        Experience                                                {{item.time}}                    {{item.company}}                                                    {{item.jobTitle}}                                                                      {{el}}                                                                                                  Competences                                        Centres d’intérêts                            -->'\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutCandidateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiInterface.html":{"url":"interfaces/ApiInterface.html","title":"interface - ApiInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/api/api.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Here is the api interface\nwe gather here all the different api call usecases\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getCurrentValues\n                                    \n                                \n                                \n                                    \n                                        getHourlyAvg\n                                    \n                                \n                                \n                                    \n                                        getLatestTransmissionStatus\n                                    \n                                \n                                \n                                    \n                                        getRange\n                                    \n                                \n                                \n                                    \n                                        getSessionInfo\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentValues\n                        \n                    \n                \n            \n            \n                \ngetCurrentValues(stationName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/api/api.interface.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHourlyAvg\n                        \n                    \n                \n            \n            \n                \ngetHourlyAvg(station: string, start: string, end: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/api/api.interface.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLatestTransmissionStatus\n                        \n                    \n                \n            \n            \n                \ngetLatestTransmissionStatus(stationId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/api/api.interface.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stationId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRange\n                        \n                    \n                \n            \n            \n                \ngetRange(station: string, start: string, end: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/api/api.interface.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSessionInfo\n                        \n                    \n                \n            \n            \n                \ngetSessionInfo(projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/api/api.interface.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\n/**\n * used as return type of api calls for getting cirrent stations values\n */\nexport interface CurrentValuesSchema{\n    station_name: string,\n    timestamp: string,\n    values:Array\n\n}\n/**\n * used as type of the return values of calling api to retrieve stations' information\n */\nexport interface SessionInfoSchema{\n  station: string,\n  description: string,\n  sessiond_id: number,\n  integrated_sensors: Array\n}\n\n/**\n * this is typicaly for difered mode data retrieving the api call should return data as type this interface.\n */\nexport interface RangeDataSchema{\n  raw_data:Array\n  station:string\n}\n\n/**\n * this interface represents data type of api calls to retrieve the last transmission status of given station\n */\nexport interface LatestTransmissionsResponseScema\n  {\n    last_transmission_utc: string,\n    latitude: string,\n    longitude: number,\n    station_id: number,\n    station_name: string\n  }\n\n  /**\n   * Here is the api interface\n   * we gather here all the different api call usecases\n   */\nexport interface ApiInterface {\n  getCurrentValues(stationName:string):Observable\n  getSessionInfo(projectName:string):Observable>\n  getRange(station:string,start:string,end:string):Observable\n  getHourlyAvg(station:string,start:string,end:string):Observable\n  getLatestTransmissionStatus(stationId:number):Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiProxyModule.html":{"url":"modules/ApiProxyModule.html","title":"module - ApiProxyModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiProxyModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/@core/api-proxy/api-proxy.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Api proxy module\nhere we setup configuration of the different api usecases\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {  NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ApiResourceService } from '../api/api.resource.service';\nimport { DiferredModeUsecases } from '..';\nimport { RealTimeUseCases } from 'src/UseCases';\n/**\n * Api proxy module\n * here we setup configuration of the different api usecases\n * \n */\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers:[\n\n  {\n    provide:'api',\n    useClass:ApiResourceService\n  },\n\n  {\n    provide:\"diferred:mode\",\n    useClass:DiferredModeUsecases\n  },\n  {\n    provide:'realTime:mode',\n    useClass:RealTimeUseCases\n  }\n\n],\nexports:[]\n})\nexport class ApiProxyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiResourceService.html":{"url":"injectables/ApiResourceService.html","title":"injectable - ApiResourceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiResourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/api/api.resource.service.ts\n        \n\n\n            \n                Description\n            \n            \n                \nApi resource service\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentValues\n                            \n                            \n                                getHourlyAvg\n                            \n                            \n                                getLatestTransmissionStatus\n                            \n                            \n                                getRange\n                            \n                            \n                                getSessionInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/@core/api/api.resource.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentValues\n                        \n                    \n                \n            \n            \n                \ngetCurrentValues(stationName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/api/api.resource.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHourlyAvg\n                        \n                    \n                \n            \n            \n                \ngetHourlyAvg(station: string, start: string, end: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/api/api.resource.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLatestTransmissionStatus\n                        \n                    \n                \n            \n            \n                \ngetLatestTransmissionStatus(stationId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/api/api.resource.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stationId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRange\n                        \n                    \n                \n            \n            \n                \ngetRange(station: string, start: string, end: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/api/api.resource.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSessionInfo\n                        \n                    \n                \n            \n            \n                \ngetSessionInfo(projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/api/api.resource.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.baseApi\n                    \n                \n                    \n                        \n                                Defined in src/@core/api/api.resource.service.ts:16\n                        \n                    \n\n            \n                \n                    based api endpoint url\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiInterface, CurrentValuesSchema, LatestTransmissionsResponseScema, RangeDataSchema, SessionInfoSchema } from 'src/domain';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\n/**\n ** Api resource service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiResourceService implements ApiInterface {\n  /**\n   * based api endpoint url\n   */\n  baseApi:string=environment.baseApi;\n  constructor(private readonly http:HttpClient) { }\n/**\n *\n * @param stationId\n * @returns\n */\n\n  getLatestTransmissionStatus(stationId: number): Observable {\n    return this.http.get(`${this.baseApi}${'getStationStatus'}/${stationId}`)\n  }\n/**\n *\n * @param station\n * @param start\n * @param end\n * @returns\n */\n  getHourlyAvg(station:string,start:string,end:string): Observable {\n    return this.http.get(`${this.baseApi}getHourlyAvg/${station}/${start}/${end}?pivot=${true}`)\n  }\n/**\n *\n * @param stationName\n * @returns\n */\n  getCurrentValues(stationName: string): Observable {\n    return this.http.get(this.baseApi+`getCurrentValues/${stationName}`)\n  }\n/**\n *\n * @param projectName\n * @returns\n */\n  getSessionInfo(projectName: string): Observable {\n    return this.http.get(this.baseApi+`getSessionInfo/${projectName}`)\n  }\n  \n/**\n *\n * @param station\n * @param start\n * @param end\n * @returns\n */\n  getRange(station:string,start:string,end:string): Observable {\n    return this.http.get(this.baseApi+`getRange/${station}/${start}/${end}`)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        the main component that handles the transition between different components and modules\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isLoading\n                            \n                            \n                                spinning\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(isLoading: IsLoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isLoading\n                                                  \n                                                        \n                                                                        IsLoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n            \n                \n                        executed once the component got initiated\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IsLoadingService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spinning\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { IsLoadingService } from 'src/@core';\n\n/**\n * the main component that handles the transition between different components and modules\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  spinning=false\n  constructor( public isLoading:IsLoadingService){}\n  /**\n   * executed once the component got initiated\n   */\n  ngOnInit(): void {\n    /**\n     * we wait a 1ms for things to be setted up.\n     */\n    setTimeout(()=>{\n      this.isLoading.load.subscribe((res:boolean)=>{\n        this.spinning=res\n      })\n    },1000)\n\n  }\n\n\n}\n\n    \n\n    \n        \n\n \n  \n \n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n\n\n.setting{\n  position: fixed;\n  z-index:0;\n  left:0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  text-align: center;\n  img{\n    position: relative;\n    top: 50%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAboutCandidateComponent\n\nAboutCandidateComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutCandidateComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApiProxyModule\n\nApiProxyModule\n\nAppModule -->\n\nApiProxyModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAq54HttpInterceptor\n\nAq54HttpInterceptor\n\nAppModule -->\n\nAq54HttpInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            main module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutCandidateComponent\n                        \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            Aq54HttpInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiProxyModule\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http'\nimport { ApiProxyModule, Aq54HttpInterceptor } from 'src/@core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from './shared';\nimport { AboutCandidateComponent } from './about-candidate/about-candidate.component';\n/**\n * main module \n */\n@NgModule({\n  declarations: [\n    AppComponent,\n    AboutCandidateComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    ApiProxyModule,\n    RouterModule,\n    SharedModule\n  ],\n  bootstrap: [AppComponent],\n  schemas:[CUSTOM_ELEMENTS_SCHEMA],\n  providers:[\n    {\n      provide:HTTP_INTERCEPTORS,\n      multi:true,\n      useClass:Aq54HttpInterceptor\n    }\n  ]\n})\n\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AboutCandidateComponent } from './about-candidate/about-candidate.component';\n/**\n * App routing\n * this module should load all the different routing module\n * and map each route request to the corresponding route\n */\nconst routes: Routes = [\n   {\n    path:'',\n    redirectTo:'/visualisation/real-time',\n    pathMatch:'full'\n   },\n\n   {\n    component:AboutCandidateComponent,\n    path:'david'\n   },\n\n  {\n    path:'visualisation',\n    loadChildren:()=>\"import('./features').then(m=>m.FeaturesModule)\"\n  },\n  {\n    path:'**',\n    redirectTo:'/visualisation/real-time',\n    pathMatch:'full'\n   },\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{ scrollPositionRestoration: 'enabled',preloadingStrategy:PreloadAllModules})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/Aq54HttpInterceptor.html":{"url":"interceptors/Aq54HttpInterceptor.html","title":"interceptor - Aq54HttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  Aq54HttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/Interceptor/http-interceptor.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                We intercept every api call to setup the spinner\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loader: IsLoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/@core/Interceptor/http-interceptor.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        IsLoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/Interceptor/http-interceptor.interceptor.ts:28\n                        \n                    \n\n\n            \n                \n                        \nintercept\nis an implementation of\nHttpInterceptor fron Angular common http\nwe intercept every request and decide wether to enable spinner or not\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IsLoadingService\n\n                    \n                \n                    \n                        \n                                Defined in src/@core/Interceptor/http-interceptor.interceptor.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable,throwError } from 'rxjs';\nimport { catchError,finalize } from 'rxjs/operators';\n\nimport { IsLoadingService } from '../Preloader/is-loading.service';\n/**\n * We intercept every api call to setup the spinner\n */\n@Injectable()\nexport class Aq54HttpInterceptor implements HttpInterceptor {\n\n  constructor(public loader:IsLoadingService) {}\n/**\n ** intercept\n is an implementation of\n ** HttpInterceptor fron Angular common http\n we intercept every request and decide wether to enable spinner or not\n * @param request\n * @param next\n * @returns\n */\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n   if(request.url.includes('getRange')||request.url.includes('getSessionInfo')){\n      this.loader.setLoading(true)\n      return next.handle(request).pipe(\n        finalize(()=>{\n            this.loader.setLoading(false);\n        }),\n        catchError((error:any)=>{\n          this.loader.setLoading(false);\n          //console.log(error)\n          return throwError(error)\n        })\n        )\n   }else{\n    return next.handle(request)\n   }\n\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartAnimation.html":{"url":"interfaces/ChartAnimation.html","title":"interface - ChartAnimation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartAnimation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/chart.ts\n        \n\n\n            \n                Description\n            \n            \n                used as type of chart animation option\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tension\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tension:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Chart } from \"chart.js/auto\"\nimport { CurrentValuesSchema } from \"./api/api.interface\"\n/**\n * used as type  of chart title\n */\nexport\ninterface chartTitle{\n  display:boolean\n  text:string\n  color:string\n}\n/**\n * used as type of chart animation option\n */\nexport interface ChartAnimation{\n    tension: {\n      duration:number,\n      easing: string,\n      from: number,\n      to: number,\n      loop: boolean\n    }\n\n}\n/**\n * chartbar data requirements type\n */\nexport interface ChartBarDataInterface{\n\n    labels:string[]\n    datasets: Array\n  options: {\n    scales: {\n      y: {\n        beginAtZero: boolean,\n        min: number,\n        max: number\n      }\n    }\n  }\n\n\n}\n\n/**\n * Used in both diferred mode data visualisation and real time data\n * visualisation compenents as interface of methods to be implemented.\n */\nexport interface chartBuilder{\n  chartData():CurrentValuesSchema[]|any\n  updateScatter(...args:any):void\n}\n/**\n * Should be implemented in diferred mode data visualisation\n * to setup data requirements\n */\nexport interface DiferedComponentInterface{\n  barBasedChart(...args:any):void\n  scatterBasedChart(...args:any):void\n  builder(...args:any):any\n}\n\n\n/**\n *  Should be implemented in real time mode data visualisation\n * to setup data requirements\n */\nexport interface RealTimeChartComponentInterface{\n  initChartBar(...args:any):Chart\n  initScatter(...args:any):void\n  scatterData(...args:any):any\n  onChartsInit(...args:any):void\n  updateTimeSeries(...args:any):any\n  updateData(...args:any):any\n  OntimeSerieChartInit(...args:any):void\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartBarDataInterface.html":{"url":"interfaces/ChartBarDataInterface.html","title":"interface - ChartBarDataInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartBarDataInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/chart.ts\n        \n\n\n            \n                Description\n            \n            \n                chartbar data requirements type\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            datasets\n                                        \n                                \n                                \n                                        \n                                            labels\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        datasets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        datasets:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labels:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Chart } from \"chart.js/auto\"\nimport { CurrentValuesSchema } from \"./api/api.interface\"\n/**\n * used as type  of chart title\n */\nexport\ninterface chartTitle{\n  display:boolean\n  text:string\n  color:string\n}\n/**\n * used as type of chart animation option\n */\nexport interface ChartAnimation{\n    tension: {\n      duration:number,\n      easing: string,\n      from: number,\n      to: number,\n      loop: boolean\n    }\n\n}\n/**\n * chartbar data requirements type\n */\nexport interface ChartBarDataInterface{\n\n    labels:string[]\n    datasets: Array\n  options: {\n    scales: {\n      y: {\n        beginAtZero: boolean,\n        min: number,\n        max: number\n      }\n    }\n  }\n\n\n}\n\n/**\n * Used in both diferred mode data visualisation and real time data\n * visualisation compenents as interface of methods to be implemented.\n */\nexport interface chartBuilder{\n  chartData():CurrentValuesSchema[]|any\n  updateScatter(...args:any):void\n}\n/**\n * Should be implemented in diferred mode data visualisation\n * to setup data requirements\n */\nexport interface DiferedComponentInterface{\n  barBasedChart(...args:any):void\n  scatterBasedChart(...args:any):void\n  builder(...args:any):any\n}\n\n\n/**\n *  Should be implemented in real time mode data visualisation\n * to setup data requirements\n */\nexport interface RealTimeChartComponentInterface{\n  initChartBar(...args:any):Chart\n  initScatter(...args:any):void\n  scatterData(...args:any):any\n  onChartsInit(...args:any):void\n  updateTimeSeries(...args:any):any\n  updateData(...args:any):any\n  OntimeSerieChartInit(...args:any):void\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChartsComponent.html":{"url":"components/ChartsComponent.html","title":"component - ChartsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChartsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/charts/charts.component.ts\n\n\n\n    \n        Description\n    \n    \n        \nChart component\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-charts\n            \n\n\n\n            \n                styleUrls\n                ./charts.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./charts.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                end\n                            \n                            \n                                start\n                            \n                            \n                                today\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRange\n                            \n                            \n                                changeStation\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                scatters\n                            \n                            \n                                selectedStation\n                            \n                            \n                                stations\n                            \n                            \n                                times\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/charts/charts.component.ts:51\n                            \n                        \n\n                \n                    \n                            We inject the\n*activatedRoute of Angular in our component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        activeRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                We inject the\n*activatedRoute of Angular in our component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chart\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'real-time-chart'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scatters\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedStation\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SMART188'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stations\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        times\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:35\n                            \n                        \n                \n                    \n                        \ninput properties are declared here\n\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeRange\n                        \n                    \n                \n            \n            \n                \nchangeRange(station: string, message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/charts/charts.component.ts:104\n                        \n                    \n\n\n            \n                \n                        executed when range got changed\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeStation\n                        \n                    \n                \n            \n            \n                \nchangeStation(ev: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/charts/charts.component.ts:78\n                        \n                    \n\n\n            \n                \n                        executed when staion got changed\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ev\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/charts/charts.component.ts:64\n                        \n                    \n\n\n            \n                \n                        exected once the component is loaded and subscibe to routing\n\nAngular queryParams\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : moment().format('YYYY-MM-DD')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/charts/charts.component.ts:47\n                        \n                    \n\n            \n                \n                    the range end string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : moment().subtract(1,'days').format('YYYY-MM-DD')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/charts/charts.component.ts:43\n                        \n                    \n\n            \n                \n                    the range start string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Default value : moment().format('YYYY-MM-DD')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/charts/charts.component.ts:51\n                        \n                    \n\n            \n                \n                    the date of the day\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport * as moment from 'moment';\nimport { SweetAlert } from 'sweetalert/typings/core';\n/**\n * Declare require as a const and type any\n */\ndeclare const require:any\n/**\n * we declare swal as var and type\n * *SweetAlert\n */\ndeclare var swal:SweetAlert\n/**\n * then we require swal\n */\nswal=require('sweetalert')\n/**\n ** Chart component\n *\n */\n@Component({\n  selector: 'app-charts',\n  templateUrl: './charts.component.html',\n  styleUrls: ['./charts.component.scss']\n})\n/**\n * The chart component\n * is call in both real time mode and diferred mode data visualisation component.\n */\nexport class ChartsComponent implements OnInit {\n/**\n ** input properties are declared here\n */\n@Input('times') times:any[]=[];\n@Input('scatters') scatters:any[]=[];\n@Input('stations') stations:any[]=[];\n@Input('chart') chart='real-time-chart'\n@Input('selectedStation') selected='SMART188'\n/**\n * the range start string\n */\nstart:string=moment().subtract(1,'days').format('YYYY-MM-DD')\n/**\n *the range end string\n */\nend:string=moment().format('YYYY-MM-DD')\n/**\n * the date of the day\n */\ntoday=moment().format('YYYY-MM-DD')\n/**\n *\n * @param activeRoute\n * We inject the\n * *activatedRoute of Angular in our component\n */\nconstructor(private readonly activeRoute:ActivatedRoute) { }\n\n/**\n * exected once the component is loaded and subscibe to routing\n * * Angular queryParams\n */\n  ngOnInit(): void {\n    this.activeRoute.queryParams.subscribe((param:any)=>{\n      const {start,end,station}=param\n      start?this.start=start:null;\n      end?this.end=end:null;\n      station?this.selected=station:null\n    })\n  }\n\n\n/**\n *executed when staion got changed\n * @param ev\n */\n  changeStation(ev:any){\n  const station =ev?.target.value;\n  if(station){\n    if(moment(this.end).format('YYYY-MM-DD')!=moment().subtract(1,'days').format('YYYY-MM-DD')||moment(this.start).format('YYYY-MM-DD')!=this.today){\n     this.changeRange(station,'vous allez changer la plage de temps et la station des capteurs.')\n    }else{\n\n      swal({\n        text:'vous allez changer de station de capteur',\n        icon:'warning',\n        buttons: {\n         cancel: true,\n         confirm: true,\n       }\n     }).then(res=>{\n     res?location.href=`${'/visualisation/diferred?station'}=${station}`:null\n     })\n    }\n  }\n}\n\n/**\n *executed when range got changed\n * @param station\n * @param message\n */\nchangeRange(station:string='',message=''){\n  if(moment(this.end).format('YYYY-MM-DD')!=moment().subtract(1,'days').format('YYYY-MM-DD')||moment(this.start).format('YYYY-MM-DD')!=this.today){\n\n    const diff= moment(this.end).diff(moment(this.start),'days')\n\n    diff{this.end=moment(this.end).add(Math.abs(diff),'days').format('YYYY-MM-DD');this.start=moment(this.start).subtract(Math.abs(diff),'days').format('YYYY-MM-DD') })():null\n\n    if(diff{\n      if(resp){\n       station?location.href=`${'/visualisation/diferred?station'}=${station}&&start=${moment(this.start).format('YYYY-MM-DD')}&&end=${moment(this.end).format('YYYY-MM-DD')}`:location.href=`${'/visualisation/diferred?station'}=${this.selected}&&start=${moment(this.start).format('YYYY-MM-DD')}&&end=${moment(this.end).format('YYYY-MM-DD')}`\n      }\n    })\n  }else{\n    swal({\n      icon:'error',\n      text:'le nombre de jours ne doit pas exceder 30 jours.'\n    })\n  }\n\n  }\n}\n\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n      \n        Début\n       \n      \n      \n    \n\n    \n      \n        Fin\n     \n\n      \n      \n    \n\n    \n      \n        Stations\n        \n          {{item.station}}\n        \n      \n      \n    \n\n\n  \n\n\n\n\n\n  \n     \n    \n    \n      \n     \n    \n      \n     \n\n\n\n\n\n    \n\n    \n                \n                    ./charts.component.scss\n                \n                \n\n.content {\n  margin: 82px auto 32px;\n  padding: 0 1px;\n  max-width: 980px;\n  align-items: center;\n}\n\nsvg.material-icons {\n  height: 24px;\n  width: auto;\n}\n\nsvg.material-icons:not(:last-child) {\n  margin-right: 8px;\n}\n\n.card svg.material-icons path {\n  fill: #888;\n}\n\n.card-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: 16px;\n}\n\n\n.card a{\n  color: white;\n}\n\n.card {\n  all: unset;\n  border-radius: 4px;\n  border: 1px solid #eee;\n // background-color: #280df5;\n  color: rgb(75, 9, 207);\n  height: 40px;\n  width: 200px;\n  margin: 0 8px 16px;\n  padding: 16px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  transition: all 0.2s ease-in-out;\n  line-height: 24px;\n}\n\n.card-container .card:not(:last-child) {\n  margin-right: 0;\n}\n\n.card.card-small {\n  height: 16px;\n  width: 168px;\n}\n\n.card-container .card:not(.highlight-card) {\n  cursor: pointer;\n}\n\n.card-container .card:not(.highlight-card):hover {\n  transform: translateY(-3px);\n  box-shadow: 0 4px 17px rgba(0, 0, 0, 0.35);\n}\n\n.card-container .card:not(.highlight-card):hover .material-icons path {\n  fill: rgb(105, 103, 103);\n}\n\n.card.highlight-card {\n  background-color: #1976d2;\n  color: white;\n  font-weight: 600;\n  border: none;\n  width: auto;\n  min-width: 30%;\n  position: relative;\n}\n\n.card.card.highlight-card span {\n  margin-left: 60px;\n}\n\n\n\na,\na:visited,\na:hover {\n  color: #1976d2;\n  text-decoration: none;\n}\n\na:hover {\n  color: #125699;\n}\n\n\n.btn-primary{\nbackground-color: #0b043f;\nborder-radius: none;\n}\n\n.btn{\nborder-radius: none;\n}\n\n\n@media screen and (max-width: 767px) {\n  .card-container > *:not(.circle-link) ,\n\n\n  .card:not(.highlight-card) {\n    height: 16px;\n    margin: 8px 0;\n  }\n\n  .card.highlight-card span {\n    margin-left: 72px;\n  }\n\n\n}\n\nselect{\n  background-color: #0b043f;\n  color: white;\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Début                                         Fin                                       Stations                  {{item.station}}                                                                   '\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChartsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurrentValuesSchema.html":{"url":"interfaces/CurrentValuesSchema.html","title":"interface - CurrentValuesSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CurrentValuesSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/api/api.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                used as return type of api calls for getting cirrent stations values\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            station_name\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                        \n                                            values\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        station_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        values:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\n/**\n * used as return type of api calls for getting cirrent stations values\n */\nexport interface CurrentValuesSchema{\n    station_name: string,\n    timestamp: string,\n    values:Array\n\n}\n/**\n * used as type of the return values of calling api to retrieve stations' information\n */\nexport interface SessionInfoSchema{\n  station: string,\n  description: string,\n  sessiond_id: number,\n  integrated_sensors: Array\n}\n\n/**\n * this is typicaly for difered mode data retrieving the api call should return data as type this interface.\n */\nexport interface RangeDataSchema{\n  raw_data:Array\n  station:string\n}\n\n/**\n * this interface represents data type of api calls to retrieve the last transmission status of given station\n */\nexport interface LatestTransmissionsResponseScema\n  {\n    last_transmission_utc: string,\n    latitude: string,\n    longitude: number,\n    station_id: number,\n    station_name: string\n  }\n\n  /**\n   * Here is the api interface\n   * we gather here all the different api call usecases\n   */\nexport interface ApiInterface {\n  getCurrentValues(stationName:string):Observable\n  getSessionInfo(projectName:string):Observable>\n  getRange(station:string,start:string,end:string):Observable\n  getHourlyAvg(station:string,start:string,end:string):Observable\n  getLatestTransmissionStatus(stationId:number):Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiferedComponentInterface.html":{"url":"interfaces/DiferedComponentInterface.html","title":"interface - DiferedComponentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DiferedComponentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/chart.ts\n        \n\n\n            \n                Description\n            \n            \n                Should be implemented in diferred mode data visualisation\nto setup data requirements\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        barBasedChart\n                                    \n                                \n                                \n                                    \n                                        builder\n                                    \n                                \n                                \n                                    \n                                        scatterBasedChart\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        barBasedChart\n                        \n                    \n                \n            \n            \n                \nbarBasedChart(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        builder\n                        \n                    \n                \n            \n            \n                \nbuilder(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterBasedChart\n                        \n                    \n                \n            \n            \n                \nscatterBasedChart(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Chart } from \"chart.js/auto\"\nimport { CurrentValuesSchema } from \"./api/api.interface\"\n/**\n * used as type  of chart title\n */\nexport\ninterface chartTitle{\n  display:boolean\n  text:string\n  color:string\n}\n/**\n * used as type of chart animation option\n */\nexport interface ChartAnimation{\n    tension: {\n      duration:number,\n      easing: string,\n      from: number,\n      to: number,\n      loop: boolean\n    }\n\n}\n/**\n * chartbar data requirements type\n */\nexport interface ChartBarDataInterface{\n\n    labels:string[]\n    datasets: Array\n  options: {\n    scales: {\n      y: {\n        beginAtZero: boolean,\n        min: number,\n        max: number\n      }\n    }\n  }\n\n\n}\n\n/**\n * Used in both diferred mode data visualisation and real time data\n * visualisation compenents as interface of methods to be implemented.\n */\nexport interface chartBuilder{\n  chartData():CurrentValuesSchema[]|any\n  updateScatter(...args:any):void\n}\n/**\n * Should be implemented in diferred mode data visualisation\n * to setup data requirements\n */\nexport interface DiferedComponentInterface{\n  barBasedChart(...args:any):void\n  scatterBasedChart(...args:any):void\n  builder(...args:any):any\n}\n\n\n/**\n *  Should be implemented in real time mode data visualisation\n * to setup data requirements\n */\nexport interface RealTimeChartComponentInterface{\n  initChartBar(...args:any):Chart\n  initScatter(...args:any):void\n  scatterData(...args:any):any\n  onChartsInit(...args:any):void\n  updateTimeSeries(...args:any):any\n  updateData(...args:any):any\n  OntimeSerieChartInit(...args:any):void\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DiferredDataChartComponent.html":{"url":"components/DiferredDataChartComponent.html","title":"component - DiferredDataChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DiferredDataChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/diferred-data-chart/diferred-data-chart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                    chartBuilder\n                    DiferedComponentInterface\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-diferred-data-chart\n            \n\n\n\n            \n                styleUrls\n                ./diferred-data-chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./diferred-data-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                data\n                            \n                            \n                                ranges\n                            \n                            \n                                scatterChart\n                            \n                            \n                                scatters\n                            \n                            \n                                selectedStation\n                            \n                            \n                                sensors\n                            \n                            \n                                stations\n                            \n                            \n                                stationsInfo\n                            \n                            \n                                timeData\n                            \n                            \n                                timer\n                            \n                            \n                                times\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                barBasedChart\n                            \n                            \n                                    Async\n                                builder\n                            \n                            \n                                chartData\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                scatterBasedChart\n                            \n                            \n                                updateScatter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usecases: DiferredModeUsecases, activeRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usecases\n                                                  \n                                                        \n                                                                        DiferredModeUsecases\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activeRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        barBasedChart\n                        \n                    \n                \n            \n            \n                \nbarBasedChart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:224\n                        \n                    \n\n\n            \n                \n                        this method is used to build the chart bar\nthat showcases the distribution of data according to different sensors.\nYou ma change it to show the distribution of sensors' data according  to unit and timeStamp\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                        \n                    builder(st: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:73\n                        \n                    \n\n\n            \n                \n                        this method is called once the component is loaded\nit makes an api call to retrieve required data according to given parameters\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                st\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartData\n                        \n                    \n                \n            \n            \n                \nchartData(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:110\n                        \n                    \n\n\n            \n                \n                        when it calls it handle data structure required for the different graphs\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterBasedChart\n                        \n                    \n                \n            \n            \n                \nscatterBasedChart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:273\n                        \n                    \n\n\n            \n                \n                        Here we have the scatter based chart.\nIt takes randomly one variable (sensor) and builds a scatter chart.\nIt make the a correlation between the given sensor and the others in term of value\nalign with the same unit and data transmission timeStamp\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateScatter\n                        \n                    \n                \n            \n            \n                \nupdateScatter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:162\n                        \n                    \n\n\n            \n                \n                        this method selecte randomly a sensor to update the scatter graph\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart | any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChartBarDataInterface | any\n\n                    \n                \n                \n                    \n                        Default value : {\n      labels: [],\n      datasets: [],\n    options: {\n      scales: {\n        y: {\n          beginAtZero: true,\n          min: 0,\n        }\n      }\n    }\n    }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n      start:moment().subtract(1,'days').format('YYYY-MM-DD'),\n      end:moment().format('YYYY-MM-DD')\n    }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterChart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart | any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatters\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedStation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SMART188'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sensors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stationsInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SessionInfoSchema[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        times\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AQ54'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit ,Inject, OnDestroy} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport Chart from 'chart.js/auto';\nimport * as moment from 'moment';\nimport { DiferredModeUsecases, chartBardDataSets, getRandomRgb, groupBy, makeTitle, mapDiferedData, mapToLabels, stationDataLabels } from 'src/@core';\nimport {  ChartBarDataInterface, DiferedComponentInterface, SessionInfoSchema, chartBuilder } from 'src/domain';\n\n@Component({\n  selector: 'app-diferred-data-chart',\n  templateUrl: './diferred-data-chart.component.html',\n  styleUrls: ['./diferred-data-chart.component.scss']\n})\nexport class DiferredDataChartComponent implements OnInit,OnDestroy,chartBuilder,DiferedComponentInterface {\n\n    constructor(\n      @Inject('diferred:mode') private readonly usecases:DiferredModeUsecases,\n      private readonly activeRoute:ActivatedRoute,\n    ) { }\n\n    scatters:string[]=[]\n    times:string[]=[]\n    scatterChart:Chart|any=null\n    stationsInfo:SessionInfoSchema[]=[];\n    stations:any[]=[]\n    selectedStation:string='SMART188'\n    sensors:any=[]\n    ranges={\n      start:moment().subtract(1,'days').format('YYYY-MM-DD'),\n      end:moment().format('YYYY-MM-DD')\n    }\n    title = 'AQ54';\n    data:ChartBarDataInterface|any = {\n      labels: [],\n      datasets: [],\n    options: {\n      scales: {\n        y: {\n          beginAtZero: true,\n          min: 0,\n        }\n      }\n    }\n    }\n    chart:Chart|any;\n    timeData:any=[];\n    timer:any=null\n\n    async ngOnInit(): Promise{\n      this.activeRoute.queryParams.subscribe(async(param:any)=>{\n        const {station,start,end}=param\n        if(station && start && end){\n          this.ranges.end=end\n          this.ranges.start=start\n        this.builder(station)\n        }else{\n        station?this.builder(station):this.builder()\n        }\n      })\n\n\n    }\n\n    ngOnDestroy(): void {\n    clearInterval(this.timer)\n    }\n\n  /**\n   *this method is called once the component is loaded\n  it makes an api call to retrieve required data according to given parameters\n  * @param st\n  */\n\n    async builder(st:string=''){\n    try{\n      if(st){\n        const {raw_data,station,sessionInfo:stationInfo} = await this.usecases.parallelExecution(st,this.ranges.start,this.ranges.end,this.title)\n        this.selectedStation=station;\n        this.stationsInfo =stationInfo;\n        this.stations=this.stationsInfo.map((item:SessionInfoSchema)=>({station:item.station,selected:item.station==this.selectedStation?true:false}));\n        const data:any= mapDiferedData(raw_data,this.stationsInfo[1].integrated_sensors);\n        this.chartData(data)\n      }else{\n        const {raw_data,station,sessionInfo}= await this.usecases.execute(this.ranges.start,this.ranges.end,this.title)\n        this.stationsInfo = sessionInfo\n        this.stations=this.stationsInfo.map((item:SessionInfoSchema,index:number)=>({station:item.station,selected:index==0}));\n        this.selectedStation=station;\n        const data:any= mapDiferedData(raw_data,this.stationsInfo[1].integrated_sensors);\n        this.chartData(data)\n      }\n\n      this.barBasedChart()\n      this.scatterBasedChart()\n        this.timer =   setInterval(()=>{\n        this.updateScatter()\n      },50000)\n    }catch(err:any){\n      throw new Error(err.message)\n    }\n\n\n\n  }\n\n\n  /**\n   *when it calls it handle data structure required for the different graphs\n  * @param data\n  */\n\n  chartData(data:any=[]){\n\n    const labels= stationDataLabels(this.stationsInfo);\n    this.data.labels=labels;\n    const d= mapToLabels(data,labels);\n    const dt=chartBardDataSets(d);\n    this.data.datasets=dt;\n    this.timeData=dt;\n    this.timeData=this.timeData.map((item:any)=>({...item,group:Object.entries(groupBy(this.timeData,(t:any)=>t.unit)).map((e:any)=>({unit:e[0],values:e[1],label:item.label}))}))\n    const units:any[]=[];\n    this.timeData.forEach((item:any,index:any)=>{\n    const group=item.group.find((f:any)=>f.unit===item.unit&&!units.find(u=>u==f.unit))\n    const gp = item.group.find((g:any)=>g.unit===item.unit);\n    const xdata= gp?gp.values.find((v:any)=>v.label===item.label):null\n    const ydata = gp?gp.values.filter((v:any)=>v.label!=item.label && v.unit===item.unit):[]\n    const grp =groupBy(ydata,(g:any)=>g.label);\n\n  if(ydata.length&&xdata){\n\n  let xgroup:any=groupBy(xdata.dayValues,(d:any)=>d.x)\n  const obj=Object.entries(grp)\n  let y:any=obj.map((yd:any)=>({label:yd[0],ydata:groupBy(yd[1][0].dayValues,(f:any)=>f.x)}))\n\n  let dts:any=[]\n  Object.keys(xgroup).forEach((key:any)=>{\n\n    y.forEach((yd:any)=>{\n      xgroup[key].forEach((xd:any,id:number)=>{\n        dts.push({data:{y:yd.ydata[key][id].y,x:xd.y},label:`${yd.label}=f(${item.label})`})\n      })\n    })\n\n  })\n\n  item['dayVal']=groupBy(dts,(d:any)=>d.label)\n\n\n  }\n  units.push(group?.unit)\n  group?.values.forEach((v:any)=>{\n  item['gunit']=v.unit\n  item['dayData']?item['dayData']=item['dayData'].concat(v.dayValues):item['dayData']=v.dayValues;\n  item['monthData']?item['monthData']=item['monthData'].concat(v.monthDays):item['monthData']=v.monthDays\n  })\n  })\n\n  }\n\n  /**\n   * this method selecte randomly a sensor to update the scatter graph\n   *\n   */\n  updateScatter(){\n    const dt = this.timeData.filter((item:any)=>item.dayVal)\n    const d=dt[Math.floor(Math.random()*(dt.length-1))]\n    if(d){\n      const scatterConfig:any= {\n        type: 'scatter',\n        data:{\n          datasets:Object.entries(d.dayVal).map((item:any)=>{\n              const data= item[1].map((dt:any)=>({...dt.data}))\n              return {data,label:item[0]}\n\n          }),\n\n          backgroundColor:getRandomRgb(),\n\n        },\n        options: {\n          responsive:true,\n          plugins:{\n            legend: {\n              position: 'top',\n            },\n            title: makeTitle(`Correlation entre les donnés d'un capteur pris de façon aleatoire dans ${this.selectedStation} et le reste des capteurs selon l'unité de mesure ${d.unit}. et le temps de transmission des données.`)\n          },\n          scales:{\n            y:{\n              type:'linear',\n              beginAtZero: true,\n              title:makeTitle(`autres capteurs(${d.unit})`, getRandomRgb()),\n              position:'left',\n              ticks: {\n                color: getRandomRgb()\n              },\n\n            },\n            x:{\n              type:'linear',\n              position:'bottom',\n              beginAtZero: true,\n              title:makeTitle(`${d.label}(${d.unit})`,getRandomRgb()),\n              ticks: {\n                color: getRandomRgb()\n              },\n            },\n\n          }\n      }\n      }\n      this.scatterChart.options=scatterConfig.options\n      this.scatterChart.data=scatterConfig.data\n      this.scatterChart.update()\n    }\n\n\n    }\n\n  /**\n   * this method is used to build the chart bar\n   * that showcases the distribution of data according to different sensors.\n   * You ma change it to show the distribution of sensors' data according  to unit and timeStamp\n   *\n   */\n  barBasedChart(){\n  try{\n    const diffRange=moment(this.ranges.end).diff(moment(this.ranges.start),'days')>=30\n    const startTime=moment(this.ranges.start).toLocaleString().split(' ')\n    var x0=`${startTime[1]}/${startTime[3]}`\n    !diffRange?x0=`${startTime[2]}/${startTime[1]}`:null\n    const config:any=\n    {\n    type: 'bar',\n    data: {\n        datasets:this.timeData.filter((f:any)=>f.gunit).map((data:any)=>(\n          {\n            data:diffRange?data.monthData:data.dayData,\n            backgroundColor:getRandomRgb(),\n            borderColor:getRandomRgb(),\n            label:`${data.gunit}`,\n            fill:false,\n            tension:0.8\n        }\n        ))\n    },\n    options: {\n      responsive:true,\n      plugins:{\n        legend: {\n          position: 'top',\n        },\n        title: makeTitle(`Distribution temporelle des données selon le type de capteur  dans la station ${this.selectedStation}`)\n      },\n      scales: {\n          x: {\n              min:x0\n          }\n      }\n  }\n  }\n  new Chart('chart',config)\n  }catch(err:any){\n  throw new Error(err.message)\n  }\n\n  }\n\n  /**\n   * Here we have the scatter based chart.\n   * It takes randomly one variable (sensor) and builds a scatter chart.\n   * It make the a correlation between the given sensor and the others in term of value\n   * align with the same unit and data transmission timeStamp\n   */\n  scatterBasedChart(){\n    const dt = this.timeData.filter((item:any)=>item.dayVal)\n    const d=dt[Math.floor(Math.random()*(dt.length-1))]\n    if(d){\n      const scatterConfig:any= {\n        type: 'scatter',\n        data:{\n          datasets:Object.entries(d.dayVal).map((item:any)=>{\n              const data= item[1].map((dt:any)=>({...dt.data}))\n              return {data,label:item[0]}\n          }),\n\n          backgroundColor:getRandomRgb(),\n\n        },\n        options: {\n          responsive:true,\n          plugins:{\n            legend: {\n              position: 'top',\n            },\n\n            title:makeTitle(`Correlation entre les donnés d'un capteur pris de façon aleatoire dans ${this.selectedStation} et le reste des capteurs selon l'unité de mesure ${d.unit}. et le temps de transmission des données.`)\n          },\n          scales:{\n            y:{\n              type:'linear',\n              beginAtZero: true,\n              title:makeTitle(`autres capteurs(${d.unit})`,getRandomRgb()),\n              position:'left',\n              ticks: {\n                color: getRandomRgb()\n              },\n\n            },\n            x:{\n              type:'linear',\n              position:'bottom',\n              beginAtZero: true,\n              title:makeTitle(`${d.label}(${d.unit})`,getRandomRgb()),\n              ticks: {\n                color: getRandomRgb()\n              },\n            },\n\n          }\n      }\n      }\n      this.scatters.push('sc')\n      setTimeout(()=>{\n      this.scatterChart= new Chart('sc',scatterConfig)\n      },1000)\n    }\n  }\n\n\n\n\n\n\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n                \n                    ./diferred-data-chart.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DiferredDataChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiferredModeUsecases.html":{"url":"injectables/DiferredModeUsecases.html","title":"injectable - DiferredModeUsecases","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiferredModeUsecases\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/UseCases/diferred-mode-usecases.ts\n        \n\n\n            \n                Description\n            \n            \n                This class handles api calls for diferred mode data visualisation\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Async\n                                parallelExecution\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiInterface)\n                    \n                \n                        \n                            \n                                Defined in src/UseCases/diferred-mode-usecases.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(start: string, end: string, projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/diferred-mode-usecases.ts:47\n                        \n                    \n\n\n            \n                \n                        Here we are fetching the sessions information in order to pick randomly a station and request needed data for the  usecase.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Here we are fetching the sessions information in order to pick randomly a station and request needed data for the  usecase.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        parallelExecution\n                        \n                    \n                \n            \n            \n                \n                        \n                    parallelExecution(stationName: string, start: string, end: string, projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/diferred-mode-usecases.ts:26\n                        \n                    \n\n\n            \n                \n                         we know the station so we can make api call in parallel to retrieve needed information for that usecase.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                stationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                     we know the station so we can make api call in parallel to retrieve needed information for that usecase.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { ApiInterface } from \"src/domain\";\n\n/**\n * This class handles api calls for diferred mode data visualisation\n *\n */\n@Injectable({providedIn:'root'})\nexport class DiferredModeUsecases {\n  \n  /**\n   *\n   * @param api\n   */\n  constructor(@Inject('api') private readonly api:ApiInterface){}\n  /**\n   *\n   * @param stationName\n   * @param start\n   * @param end\n   * @param projectName\n   *  we know the station so we can make api call in parallel to retrieve needed information for that usecase.\n   * @returns\n   */\n\n async parallelExecution(stationName:string='',start:string,end:string,projectName:string){\n    try{\n      const [{raw_data,station},sessionInfo] = await Promise.all([\n        await this.api.getRange(stationName,start,end).toPromise(),\n        await this.api.getSessionInfo(projectName).toPromise()\n      ])\n    return {raw_data,station,sessionInfo}\n    }catch(err:any){\n     throw new Error(err.message)\n    }\n  }\n\n\n  /**\n   *\n   * @param start\n   * @param end\n   * @param projectName\n   * Here we are fetching the sessions information in order to pick randomly a station and request needed data for the  usecase.\n   */\n\n  async execute(start:string,end:string,projectName:string){\n    try{\n    const sessionInfo = await this.api.getSessionInfo(projectName).toPromise()\n    const {raw_data,station} = await this.api.getRange(sessionInfo[Math.floor(Math.random()*(sessionInfo.length-1))].station,start,end).toPromise()\n    return {raw_data,station,sessionInfo}\n\n  }catch(err:any){\n      throw new Error(err.message)\n    }\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeaturesModule.html":{"url":"modules/FeaturesModule.html","title":"module - FeaturesModule","body":"\n                   \n\n\n\n\n    Modules\n    FeaturesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeaturesModule\n\n\n\ncluster_FeaturesModule_imports\n\n\n\ncluster_FeaturesModule_declarations\n\n\n\n\nDiferredDataChartComponent\n\nDiferredDataChartComponent\n\n\n\nFeaturesModule\n\nFeaturesModule\n\nFeaturesModule -->\n\nDiferredDataChartComponent->FeaturesModule\n\n\n\n\n\nRealTimeChartComponent\n\nRealTimeChartComponent\n\nFeaturesModule -->\n\nRealTimeChartComponent->FeaturesModule\n\n\n\n\n\nFeaturesRoutingModule\n\nFeaturesRoutingModule\n\nFeaturesModule -->\n\nFeaturesRoutingModule->FeaturesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nFeaturesModule -->\n\nSharedModule->FeaturesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/features.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Features Module\nit's considered as submodule of the main module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DiferredDataChartComponent\n                        \n                        \n                            RealTimeChartComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeaturesRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RealTimeChartComponent } from './real-time-chart/real-time-chart.component';\nimport { DiferredDataChartComponent } from './diferred-data-chart/diferred-data-chart.component';\nimport { FeaturesRoutingModule } from './features-routing.module';\nimport { SharedModule } from '../shared';\n\n/**\n * Features Module\n * it's considered as submodule of the main module\n */\n@NgModule({\n    declarations: [\n        RealTimeChartComponent,\n        DiferredDataChartComponent\n    ],\n    imports: [\n        CommonModule,\n        FeaturesRoutingModule,\n        SharedModule\n    ],\n    schemas:[CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class FeaturesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeaturesRoutingModule.html":{"url":"modules/FeaturesRoutingModule.html","title":"module - FeaturesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FeaturesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/features-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DiferredDataChartComponent } from './diferred-data-chart/diferred-data-chart.component';\nimport { RealTimeChartComponent } from './real-time-chart/real-time-chart.component';\n\n/**\n * Here we set routing for features' components\n */\nconst routes: Routes = [\n{\n  component:DiferredDataChartComponent,\n  path:'diferred'\n},\n{\n  component:RealTimeChartComponent,\n  path:'real-time'\n}\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FeaturesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        *Footer component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  email:\"kouame.ndri1998@gmail.com\",\n  linkedIn:\"https://linkedin.com/in/kouamé-david-n-dri-1615a5186\"\n}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/footer/footer.component.ts:18\n                        \n                    \n\n            \n                \n                    We are just using that property to show user infomation in the footer component\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n/**\n * *Footer component\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\n/**\n * The footer component is placed at the bottom of the\n * main component and is aivaibled for every other components\n */\nexport class FooterComponent {\n/**\n * We are just using that property to show user infomation in the footer component\n */\nuser={\n  email:\"kouame.ndri1998@gmail.com\",\n  linkedIn:\"https://linkedin.com/in/kouamé-david-n-dri-1615a5186\"\n}\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n      {{user.email|lowercase}}\n  \n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                footer {\n  margin-top: 8px;\n  display: flex;\n  align-items: center;\n  line-height: 20px;\n  bottom: 0%;\n  position: fixed;\n  background: white !important;\n}\n\nfooter a {\n  display: flex;\n  align-items: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{user.email|lowercase}}  '\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        \nHeader component\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                docUrl\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"AQ54\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/header/header.component.ts:20\n                            \n                        \n                \n                    \n                        take the title of the website as input\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        docUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.docsURL\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/header/header.component.ts:24\n                        \n                    \n\n            \n                \n                    property that contains the url to documentation website\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input} from '@angular/core';\nimport { environment } from 'src/environments/environment.prod';\n/**\n ** Header component\n */\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\n/**\n * Header component\n * is placed in the main component and work\n * for every sub component or sub module compenent\n */\nexport class HeaderComponent {\n/**\n * take the title of the website as input\n */\n@Input('title') title=\"AQ54\"\n/**\n * property that contains the url to documentation website\n */\ndocUrl=environment.docsURL\n}\n\n    \n\n    \n        \n  \n  {{title}}\n   \n   \n    Différée\n    Temps Réel\n    Docs\n   \n    \n    Mon CV\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .spacer {\n  flex: 1;\n}\n\n\na{\n  text-decoration: none;\n  margin: 6px;\n}\n\n\n.menu{\n  width: 800px;\n  position: relative;\n  left: 30px;\n}\n.toolbar {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  background: #010f1d !important;\n  color: white;\n  font-weight: 500;\n  padding-right: 15px;\n  margin-right: 15px;\n}\n\n.toolbar img {\n  margin: 0 16px;\n}\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{title}}          Différée    Temps Réel    Docs           Mon CV'\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IsLoadingService.html":{"url":"injectables/IsLoadingService.html","title":"injectable - IsLoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IsLoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/Preloader/is-loading.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Here the preload spinner service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                load\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/@core/Preloader/is-loading.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setLoading\n                        \n                    \n                \n            \n            \n                \nsetLoading(value)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/Preloader/is-loading.service.ts:23\n                        \n                    \n\n\n            \n                \n                        setup spinner value\n\ntrue\nor\nfalse\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        load\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/@core/Preloader/is-loading.service.ts:13\n                        \n                    \n\n            \n                \n                    Property used to setup spinner\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n/**\n * Here the preload spinner service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsLoadingService {\n/**\n * Property used to setup spinner\n */\npublic load : BehaviorSubject= new BehaviorSubject(false)\n\n  constructor() { }\n/**\n *setup spinner value\n ** true\n or\n ** false\n * @param value\n */\n  setLoading(value=false){\n    this.load.next(value)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LatestTransmissionsResponseScema.html":{"url":"interfaces/LatestTransmissionsResponseScema.html","title":"interface - LatestTransmissionsResponseScema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LatestTransmissionsResponseScema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/api/api.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                this interface represents data type of api calls to retrieve the last transmission status of given station\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            last_transmission_utc\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                                \n                                        \n                                            station_id\n                                        \n                                \n                                \n                                        \n                                            station_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        last_transmission_utc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_transmission_utc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        station_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        station_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\n/**\n * used as return type of api calls for getting cirrent stations values\n */\nexport interface CurrentValuesSchema{\n    station_name: string,\n    timestamp: string,\n    values:Array\n\n}\n/**\n * used as type of the return values of calling api to retrieve stations' information\n */\nexport interface SessionInfoSchema{\n  station: string,\n  description: string,\n  sessiond_id: number,\n  integrated_sensors: Array\n}\n\n/**\n * this is typicaly for difered mode data retrieving the api call should return data as type this interface.\n */\nexport interface RangeDataSchema{\n  raw_data:Array\n  station:string\n}\n\n/**\n * this interface represents data type of api calls to retrieve the last transmission status of given station\n */\nexport interface LatestTransmissionsResponseScema\n  {\n    last_transmission_utc: string,\n    latitude: string,\n    longitude: number,\n    station_id: number,\n    station_name: string\n  }\n\n  /**\n   * Here is the api interface\n   * we gather here all the different api call usecases\n   */\nexport interface ApiInterface {\n  getCurrentValues(stationName:string):Observable\n  getSessionInfo(projectName:string):Observable>\n  getRange(station:string,start:string,end:string):Observable\n  getHourlyAvg(station:string,start:string,end:string):Observable\n  getLatestTransmissionStatus(stationId:number):Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OninitResponseSchema.html":{"url":"interfaces/OninitResponseSchema.html","title":"interface - OninitResponseSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OninitResponseSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/UseCases/real-time-use-cases.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface that is use as type for api call response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sessionInfo\n                                        \n                                \n                                \n                                        \n                                            stations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sessionInfo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionInfo:         SessionInfoSchema[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SessionInfoSchema[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stations:         CurrentValuesSchema[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CurrentValuesSchema[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport * as moment from \"moment\";\nimport { ApiInterface, CurrentValuesSchema, SessionInfoSchema } from \"src/domain\";\n\n/**\n * Interface that is use as type for api call response\n */\nexport interface OninitResponseSchema{\n  stations:CurrentValuesSchema[],\n  sessionInfo:SessionInfoSchema[]\n}\n\n\n/**\n * This class handles api calls for real time mode data visualisation\n *\n */\n\n@Injectable({providedIn:'root'})\nexport class RealTimeUseCases {\n  /**\n   *\n   * @param api\n   */\n  constructor(@Inject('api') private readonly api:ApiInterface){}\n/**\n *\n * @param projectName\n * @returns\n *   we retrieve needed data to start the realtime visualisation by fetching the current values of different sensors from all staions.\n\n */\n async Oninit(projectName:string):Promise{\ntry{\n  const sessionInfo= await this.api.getSessionInfo(projectName).toPromise();\n  const stations = await Promise.all(sessionInfo.map(async(station:SessionInfoSchema)=>await this.api.getCurrentValues(station.station).toPromise()));\n  return {stations,sessionInfo};\n}catch(err:any)\n{\n  throw new Error(err.message)\n}\n\n  }\n\n  /**\n   *Once a change is detected in a station we run api  call to get the latest values of the sensors in that station.\n    Doing that helps us in optimising the api calls.\n   * @param station\n    @returns\n   */\n async OnUpdate(station:string):Promise{\n  try{\n   return await this.api.getCurrentValues(station).toPromise()\n  }catch(err:any){\n   throw new Error(err.message)\n  }\n  }\n\n/**\n *we are fetching the latest transmission time in order to retrive the data of the give station.\n * @param sessionId\n * @returns\n */\n\n async canUpdate(sessionId:number):Promise{\n  try{\n    const response=await this.api.getLatestTransmissionStatus(sessionId).toPromise()\n\n      /** Here we retrieve the last transmission utc datetime */\n    const {last_transmission_utc} = response\n    const transTime= moment(last_transmission_utc);\n    const now=moment()\n    /**\n     * we compare that datetime to the caurrent datetime if both match then we enable api call for new entries then we disbale the call\n     */\n    const value= now.diff(transTime,'minutes',true)==0&&last_transmission_utc?true:true // unfortunately this will allways be true because the api does not return valid data so we decided to make it always true.\n    return value\n  }catch(err:any){\n    throw new Error(err.message)\n  }\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RangeDataSchema.html":{"url":"interfaces/RangeDataSchema.html","title":"interface - RangeDataSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RangeDataSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/api/api.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                this is typicaly for difered mode data retrieving the api call should return data as type this interface.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            raw_data\n                                        \n                                \n                                \n                                        \n                                            station\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        raw_data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        raw_data:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        station\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\n/**\n * used as return type of api calls for getting cirrent stations values\n */\nexport interface CurrentValuesSchema{\n    station_name: string,\n    timestamp: string,\n    values:Array\n\n}\n/**\n * used as type of the return values of calling api to retrieve stations' information\n */\nexport interface SessionInfoSchema{\n  station: string,\n  description: string,\n  sessiond_id: number,\n  integrated_sensors: Array\n}\n\n/**\n * this is typicaly for difered mode data retrieving the api call should return data as type this interface.\n */\nexport interface RangeDataSchema{\n  raw_data:Array\n  station:string\n}\n\n/**\n * this interface represents data type of api calls to retrieve the last transmission status of given station\n */\nexport interface LatestTransmissionsResponseScema\n  {\n    last_transmission_utc: string,\n    latitude: string,\n    longitude: number,\n    station_id: number,\n    station_name: string\n  }\n\n  /**\n   * Here is the api interface\n   * we gather here all the different api call usecases\n   */\nexport interface ApiInterface {\n  getCurrentValues(stationName:string):Observable\n  getSessionInfo(projectName:string):Observable>\n  getRange(station:string,start:string,end:string):Observable\n  getHourlyAvg(station:string,start:string,end:string):Observable\n  getLatestTransmissionStatus(stationId:number):Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RealTimeChartComponent.html":{"url":"components/RealTimeChartComponent.html","title":"component - RealTimeChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RealTimeChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/real-time-chart/real-time-chart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Real time data visualisation compenent\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                    chartBuilder\n                    RealTimeChartComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-real-time-chart\n            \n\n\n\n            \n                styleUrls\n                ./real-time-chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./real-time-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                data\n                            \n                            \n                                scatterChart\n                            \n                            \n                                scatters\n                            \n                            \n                                selectedSensor\n                            \n                            \n                                sensors\n                            \n                            \n                                stations\n                            \n                            \n                                time\n                            \n                            \n                                timeData\n                            \n                            \n                                times\n                            \n                            \n                                timesCahrt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                chartData\n                            \n                            \n                                initChartBar\n                            \n                            \n                                initScatter\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                onChartsInit\n                            \n                            \n                                    Async\n                                OntimeSerieChartInit\n                            \n                            \n                                scatterData\n                            \n                            \n                                    Async\n                                updateData\n                            \n                            \n                                    Async\n                                updateScatter\n                            \n                            \n                                    Async\n                                updateTimeSeries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usecases: RealTimeUseCases)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usecases\n                                                  \n                                                        \n                                                                        RealTimeUseCases\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        chartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    chartData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:249\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                set up data requirements for charts' config\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initChartBar\n                        \n                    \n                \n            \n            \n                \ninitChartBar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:82\n                        \n                    \n\n\n            \n                \n                        init chart bar chart config\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                ***chartbar instance\ninit chart bar chart config\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initScatter\n                        \n                    \n                \n            \n            \n                \ninitScatter(d: CurrentValuesSchema[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:98\n                        \n                    \n\n\n            \n                \n                        init the scatter chart config\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            CurrentValuesSchema[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:25\n                        \n                    \n\n\n            \n                \n                        clear the time interval once the component is destroyed\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:62\n                        \n                    \n\n\n            \n                \n                        call once the componentis loaded to initiate firts visualisation requirements.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onChartsInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onChartsInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:236\n                        \n                    \n\n\n            \n                \n                        init all  the charts\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        OntimeSerieChartInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    OntimeSerieChartInit(d: CurrentValuesSchema[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:337\n                        \n                    \n\n\n            \n                \n                        init time based chart config\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            CurrentValuesSchema[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterData\n                        \n                    \n                \n            \n            \n                \nscatterData(d: CurrentValuesSchema[], n: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:207\n                        \n                    \n\n\n            \n                \n                        build scatter data requirements\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            CurrentValuesSchema[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                n\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateData\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateData(s: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:271\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                s\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    update data by making api call\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateScatter\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateScatter(v: CurrentValuesSchema[], station: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                v\n                                            \n                                                            CurrentValuesSchema[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                            \n                                                    update scatter chart\n\n                                            \n                                        \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTimeSeries\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTimeSeries(d: CurrentValuesSchema, station: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:292\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            CurrentValuesSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    update time based chart config\n\n                                            \n                                        \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart | any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChartBarDataInterface | any\n\n                    \n                \n                \n                    \n                        Default value : {\n      labels: [],\n      datasets: [],\n      options: {\n      scales: {\n        y: {\n          beginAtZero: true,\n          min: 0,\n          max: 100\n        }\n      }\n    }\n\n    }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterChart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatters\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedSensor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:32\n                        \n                    \n\n            \n                \n                    diffrent properties of the class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sensors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SessionInfoSchema[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        times\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timesCahrt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AQ54'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport Chart from 'chart.js/auto';\nimport {  chartBarDataSets, getRandomRgb, stationDataLabels, updateChartBarData,groupBy, RealTimeUseCases, makeTitle, makeAnimation } from '../../../@core';\nimport {  ChartBarDataInterface, CurrentValuesSchema, SessionInfoSchema, chartBuilder } from 'src/domain';\n\n/**\n * Real time data visualisation compenent\n */\n@Component({\n  selector: 'app-real-time-chart',\n  templateUrl: './real-time-chart.component.html',\n  styleUrls: ['./real-time-chart.component.scss']\n})\n/**\n *we implemented the different interfaces for the well being of this component.\n */\nexport class RealTimeChartComponent implements OnInit,OnDestroy,chartBuilder,RealTimeChartComponent {\n\n  constructor(\n    @Inject('realTime:mode') private readonly usecases:RealTimeUseCases,\n    ){}\n/**\n * clear the time interval once the component is destroyed\n */\n  ngOnDestroy(): void {\n    clearInterval(this.time)\n  }\n\n  /**\n   * diffrent properties of the class\n   */\n    selectedSensor:any\n    sensors:Array=[]\n    scatters:string[]=[]\n    scatterChart:any[]=[];\n    times:string[]=[]\n    timeData:any=[]\n    timesCahrt:any=[]\n    title = 'AQ54';\n    time:any=''\n    data:ChartBarDataInterface|any = {\n      labels: [],\n      datasets: [],\n      options: {\n      scales: {\n        y: {\n          beginAtZero: true,\n          min: 0,\n          max: 100\n        }\n      }\n    }\n\n    }\n    chart:Chart|any;\n    stations:SessionInfoSchema[]=[]\n\n/**\n * call once the componentis loaded to initiate firts visualisation requirements.\n */\n\n    async ngOnInit(): Promise {\n      try{\n        await  this.onChartsInit()\n       this.time= setInterval(async()=>{\n        this.stations.forEach(async(s:any)=>{\n          await this.usecases.canUpdate(s.sessiond_id)?this.updateData(s):null\n        })\n        },1000)\n      }catch(err:any){\n        throw new Error(err.message)\n      }\n\n    }\n\n    /**\n     *\n     * @returns ***chartbar instance\n     * init chart bar chart config\n     */\n\n    initChartBar(){\n      return new Chart('real-time-chart',{data:this.data,options:{\n        responsive:true,\n        maintainAspectRatio: true,\n        plugins:{\n          legend: {\n            position: 'top',\n          },\n          title: makeTitle('Distribution des données selon les types de capteurs par station.')\n        },\n      }})\n    }\n/**\n *init the scatter chart config\n * @param d\n */\n    initScatter(d:CurrentValuesSchema[]=[]){\n      var data =this.scatterData(d)\n      !data.length?data=this.scatterData(d,4):null\n     for(let sc=0;scthis.scatterChart.push({config,chart:new Chart((document.getElementById(this.scatters[sc]) as any),config)}),100)\n     }\n    }\n/**\n *\n * @param v update scatter chart\n * @param station\n */\n    async updateScatter(v:CurrentValuesSchema[]=[],station:string=''){\n     try{\n      let stationVal:CurrentValuesSchema[]=v\n      const data:any =this.scatterData(stationVal)\n    if(data.length){\n      const {chart}= this.scatterChart.find((sc:any)=>sc.config.station===station)\n      //console.log(chart.config.data,data)\n       chart.config.data.datasets.forEach((dt:any)=>{\n        const d=data[0].datasets.find((item:any)=>item.label===dt.label)\n        d?dt.data=dt.data.concat(d.data):null\n       });\n       chart.config.options=  {\n        responsive:true,\n        animations:makeAnimation(),\n        plugins:{\n          legend: {\n            position: 'top',\n          },\n          title:makeTitle(`Correlation entre les donnés d'un capteur pris de façon aleatoire dans ${data[0]?.station} et le reste des capteurs selon l'unité de mesure (${data[0]?.unit}).`)\n        },\n        scales:{\n          y:{\n            type:'linear',\n            position:'left',\n            beginAtZero: true,\n            title:makeTitle(`${data[0].sensors.join(',')}(${data[0].unit})`,getRandomRgb()),\n             ticks: {\n              color: getRandomRgb()\n            },\n\n          },\n          x:{\n            type: 'linear',\n             title:{\n               display:true,\n               text:`${data[0].sensor}(${data[0].unit})`\n             },\n            beginAtZero: true,\n            position:'bottom',\n            ticks: {\n              color: getRandomRgb()\n            },\n          },\n\n        }\n    }\n     chart.update()\n    }\n     }catch(err:any){\n      throw new Error(err.message)\n     }\n\n  }\n\n/**\n *build scatter data requirements\n * @param d\n * @param n\n * @returns\n */\n    scatterData(d:CurrentValuesSchema[],n:any=null){\n    let data:any=[]\n      const selectedSensor=this.selectedSensor?this.selectedSensor:this.sensors[n||Math.floor(Math.random()*(this.sensors.length-1))]\n      if(selectedSensor)\n      d.forEach(item=>{\n        const values=item.values.filter(v=>!v.unit?null:v.unit.toLowerCase()===selectedSensor.unit?.toLowerCase() && v.sensor!=selectedSensor.type)\n        const selected=item.values.find(v=>v.sensor.toLowerCase()===selectedSensor.type.toLowerCase())\n        selected && values.length?data.push({\n          datasets:values.map(s=>({data:[{x:selected.value,y:s.value}],label:`${s.sensor}=f(${selected.sensor})`\n        })),\n        backgroundColor:getRandomRgb(),\n        station:item.station_name,\n        unit:selected?.unit,\n        sensor:selected.sensor,\n        sensors:values.map(s=>s.sensor)\n        }):null\n      })\n      let cnv=[]\n      for(let i=0;iu.label===s.station).forEach((item:any,index:number) => {\n         data.find((d:any)=>d.station==item.label)?item.data=data.find((d:any)=>d.station==item.label)?.data:this.chart.config.data.datasets.splice(index,1)\n        });\n        this.chart.update()\n        this.updateTimeSeries(stationData,s.station)\n        this.updateScatter([stationData],s.station)\n        }\n        catch(err:any){\n        throw new Error(err.message)\n      }\n    }\n\n    /**\n     *\n     * @param d update time based chart config\n     * @param station\n     */\n  async updateTimeSeries(d:CurrentValuesSchema,station:string){\n   const stationData:CurrentValuesSchema[]= [d]\n   let data:any=stationData.map(item=>({time:item.timestamp,station:item.station_name,values:groupBy(item.values,(v:any)=>v.unit)}));\n   const dt:any= data.map((item:any)=>({...item,values:Object.entries(item.values).map(e=>e[1])}))\n   const {chart} = this.timesCahrt.find((c:any)=>c.config.station===station)\n   const config:any=\n          {\n          type: 'bar',\n          time:dt[0].time,\n          data: {\n              datasets: dt[0].values.map((item:any)=>({\n                data:\n                  item.map((item:any)=>({y:item.value,x:dt[0].time})),\n                  label:`(${item[0].unit})`,\n                  backgroundColor:getRandomRgb(),\n\n              })\n              )\n          },\n          options: {\n            responsive:true,\n            plugins:{\n              legend: {\n                position: 'top',\n              },\n              title: makeTitle(`Distribution temporelle des données selon l'unité de mesure dans la station ${dt[0].station}`)\n\n            }\n\n        }\n        }\n          chart.config.options.plugins=config.options.plugins\n          //chart.config.options.scales.x.max=dt[0].time,\n         var update=false\n          config.data.datasets.forEach((dd:any)=>{\n           const its= chart.config.data.datasets.find((f:any)=>dd.label===f.label)\n           update= its&&!its.data.find((t:any)=>t.x===dt[0].time)?its.data.push(...dd.data):false\n          })\n          update?chart.update():null;\n  }\n\n  /**\n   *init time based chart config\n   * @param d\n   */\n   async OntimeSerieChartInit(d:CurrentValuesSchema[]){\n   const stationData:CurrentValuesSchema[]=d// await Promise.all(this.stations.map(async(s:SessionInfoSchema)=>await this.stattionCurrentVal.execute(s.station).toPromise()))\n\n   let data:any=stationData.map(item=>({time:item.timestamp,station:item.station_name,values:groupBy(item.values,(v:any)=>v.unit)}));\n\n   data=data.map((item:any)=>({...item,values:Object.entries(item.values).map(e=>e[1])}))\n\n   data.forEach((d:any,index:number)=>{\n   this.times.push(index+\"times\"+Date.now())\n    const config:any=\n      {\n      type: 'line',\n      time:d.time,\n      station:d.station,\n      data: {\n          datasets: d.values.map((item:any)=>({\n            data:\n              item.map((item:any)=>({y:item.value,x:d.time})),\n              label:`(${item[0].unit})`,\n              backgroundColor:getRandomRgb(),\n              borderColor:getRandomRgb(),\n              fill:false,\n              tension:0.8\n          })\n          )\n      },\n      options: {\n        responsive:true,\n        animations:makeAnimation(),\n        plugins:{\n          legend: {\n            position: 'top',\n          },\n          title: makeTitle(`Distribution temporelle des données selon l'unité de mesure dans la station ${d.station}`)\n        },\n        scales: {\n            x: {\n                min:d.time,\n            },\n            y:{\n              min:0\n            }\n        }\n    }\n\n    }\n    setTimeout(()=>{\n      let chart = new Chart(this.times[index],config);\n      this.timesCahrt.push({chart,config})\n        },1000)\n   })\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n\n\n    \n\n    \n                \n                    ./real-time-chart.component.scss\n                \n                \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RealTimeChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RealTimeChartComponentInterface.html":{"url":"interfaces/RealTimeChartComponentInterface.html","title":"interface - RealTimeChartComponentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RealTimeChartComponentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/chart.ts\n        \n\n\n            \n                Description\n            \n            \n                 Should be implemented in real time mode data visualisation\nto setup data requirements\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        initChartBar\n                                    \n                                \n                                \n                                    \n                                        initScatter\n                                    \n                                \n                                \n                                    \n                                        onChartsInit\n                                    \n                                \n                                \n                                    \n                                        OntimeSerieChartInit\n                                    \n                                \n                                \n                                    \n                                        scatterData\n                                    \n                                \n                                \n                                    \n                                        updateData\n                                    \n                                \n                                \n                                    \n                                        updateTimeSeries\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initChartBar\n                        \n                    \n                \n            \n            \n                \ninitChartBar(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Chart\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initScatter\n                        \n                    \n                \n            \n            \n                \ninitScatter(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChartsInit\n                        \n                    \n                \n            \n            \n                \nonChartsInit(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OntimeSerieChartInit\n                        \n                    \n                \n            \n            \n                \nOntimeSerieChartInit(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterData\n                        \n                    \n                \n            \n            \n                \nscatterData(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTimeSeries\n                        \n                    \n                \n            \n            \n                \nupdateTimeSeries(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Chart } from \"chart.js/auto\"\nimport { CurrentValuesSchema } from \"./api/api.interface\"\n/**\n * used as type  of chart title\n */\nexport\ninterface chartTitle{\n  display:boolean\n  text:string\n  color:string\n}\n/**\n * used as type of chart animation option\n */\nexport interface ChartAnimation{\n    tension: {\n      duration:number,\n      easing: string,\n      from: number,\n      to: number,\n      loop: boolean\n    }\n\n}\n/**\n * chartbar data requirements type\n */\nexport interface ChartBarDataInterface{\n\n    labels:string[]\n    datasets: Array\n  options: {\n    scales: {\n      y: {\n        beginAtZero: boolean,\n        min: number,\n        max: number\n      }\n    }\n  }\n\n\n}\n\n/**\n * Used in both diferred mode data visualisation and real time data\n * visualisation compenents as interface of methods to be implemented.\n */\nexport interface chartBuilder{\n  chartData():CurrentValuesSchema[]|any\n  updateScatter(...args:any):void\n}\n/**\n * Should be implemented in diferred mode data visualisation\n * to setup data requirements\n */\nexport interface DiferedComponentInterface{\n  barBasedChart(...args:any):void\n  scatterBasedChart(...args:any):void\n  builder(...args:any):any\n}\n\n\n/**\n *  Should be implemented in real time mode data visualisation\n * to setup data requirements\n */\nexport interface RealTimeChartComponentInterface{\n  initChartBar(...args:any):Chart\n  initScatter(...args:any):void\n  scatterData(...args:any):any\n  onChartsInit(...args:any):void\n  updateTimeSeries(...args:any):any\n  updateData(...args:any):any\n  OntimeSerieChartInit(...args:any):void\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RealTimeUseCases.html":{"url":"injectables/RealTimeUseCases.html","title":"injectable - RealTimeUseCases","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RealTimeUseCases\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/UseCases/real-time-use-cases.ts\n        \n\n\n            \n                Description\n            \n            \n                This class handles api calls for real time mode data visualisation\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canUpdate\n                            \n                            \n                                    Async\n                                Oninit\n                            \n                            \n                                    Async\n                                OnUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiInterface)\n                    \n                \n                        \n                            \n                                Defined in src/UseCases/real-time-use-cases.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canUpdate(sessionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/real-time-use-cases.ts:65\n                        \n                    \n\n\n            \n                \n                        we are fetching the latest transmission time in order to retrive the data of the give station.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        Oninit\n                        \n                    \n                \n            \n            \n                \n                        \n                    Oninit(projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/real-time-use-cases.ts:33\n                        \n                    \n\n\n            \n                \n                          we retrieve needed data to start the realtime visualisation by fetching the current values of different sensors from all staions.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                  we retrieve needed data to start the realtime visualisation by fetching the current values of different sensors from all staions.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        OnUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    OnUpdate(station: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/real-time-use-cases.ts:51\n                        \n                    \n\n\n            \n                \n                        Once a change is detected in a station we run api  call to get the latest values of the sensors in that station.\nDoing that helps us in optimising the api calls.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport * as moment from \"moment\";\nimport { ApiInterface, CurrentValuesSchema, SessionInfoSchema } from \"src/domain\";\n\n/**\n * Interface that is use as type for api call response\n */\nexport interface OninitResponseSchema{\n  stations:CurrentValuesSchema[],\n  sessionInfo:SessionInfoSchema[]\n}\n\n\n/**\n * This class handles api calls for real time mode data visualisation\n *\n */\n\n@Injectable({providedIn:'root'})\nexport class RealTimeUseCases {\n  /**\n   *\n   * @param api\n   */\n  constructor(@Inject('api') private readonly api:ApiInterface){}\n/**\n *\n * @param projectName\n * @returns\n *   we retrieve needed data to start the realtime visualisation by fetching the current values of different sensors from all staions.\n\n */\n async Oninit(projectName:string):Promise{\ntry{\n  const sessionInfo= await this.api.getSessionInfo(projectName).toPromise();\n  const stations = await Promise.all(sessionInfo.map(async(station:SessionInfoSchema)=>await this.api.getCurrentValues(station.station).toPromise()));\n  return {stations,sessionInfo};\n}catch(err:any)\n{\n  throw new Error(err.message)\n}\n\n  }\n\n  /**\n   *Once a change is detected in a station we run api  call to get the latest values of the sensors in that station.\n    Doing that helps us in optimising the api calls.\n   * @param station\n    @returns\n   */\n async OnUpdate(station:string):Promise{\n  try{\n   return await this.api.getCurrentValues(station).toPromise()\n  }catch(err:any){\n   throw new Error(err.message)\n  }\n  }\n\n/**\n *we are fetching the latest transmission time in order to retrive the data of the give station.\n * @param sessionId\n * @returns\n */\n\n async canUpdate(sessionId:number):Promise{\n  try{\n    const response=await this.api.getLatestTransmissionStatus(sessionId).toPromise()\n\n      /** Here we retrieve the last transmission utc datetime */\n    const {last_transmission_utc} = response\n    const transTime= moment(last_transmission_utc);\n    const now=moment()\n    /**\n     * we compare that datetime to the caurrent datetime if both match then we enable api call for new entries then we disbale the call\n     */\n    const value= now.diff(transTime,'minutes',true)==0&&last_transmission_utc?true:true // unfortunately this will allways be true because the api does not return valid data so we decided to make it always true.\n    return value\n  }catch(err:any){\n    throw new Error(err.message)\n  }\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SessionInfoSchema.html":{"url":"interfaces/SessionInfoSchema.html","title":"interface - SessionInfoSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SessionInfoSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/api/api.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                used as type of the return values of calling api to retrieve stations' information\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            integrated_sensors\n                                        \n                                \n                                \n                                        \n                                            sessiond_id\n                                        \n                                \n                                \n                                        \n                                            station\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        integrated_sensors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        integrated_sensors:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessiond_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessiond_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        station\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\n/**\n * used as return type of api calls for getting cirrent stations values\n */\nexport interface CurrentValuesSchema{\n    station_name: string,\n    timestamp: string,\n    values:Array\n\n}\n/**\n * used as type of the return values of calling api to retrieve stations' information\n */\nexport interface SessionInfoSchema{\n  station: string,\n  description: string,\n  sessiond_id: number,\n  integrated_sensors: Array\n}\n\n/**\n * this is typicaly for difered mode data retrieving the api call should return data as type this interface.\n */\nexport interface RangeDataSchema{\n  raw_data:Array\n  station:string\n}\n\n/**\n * this interface represents data type of api calls to retrieve the last transmission status of given station\n */\nexport interface LatestTransmissionsResponseScema\n  {\n    last_transmission_utc: string,\n    latitude: string,\n    longitude: number,\n    station_id: number,\n    station_name: string\n  }\n\n  /**\n   * Here is the api interface\n   * we gather here all the different api call usecases\n   */\nexport interface ApiInterface {\n  getCurrentValues(stationName:string):Observable\n  getSessionInfo(projectName:string):Observable>\n  getRange(station:string,start:string,end:string):Observable\n  getHourlyAvg(station:string,start:string,end:string):Observable\n  getLatestTransmissionStatus(stationId:number):Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nChartsComponent\n\nChartsComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nChartsComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nChartsComponent \n\nChartsComponent \n\nChartsComponent  -->\n\nSharedModule->ChartsComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Shared module\ncall in the needed module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChartsComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ChartsComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { ChartsComponent } from './charts/charts.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n/**\n * Shared module\n * call in the needed module\n */\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    ChartsComponent,\n    FooterComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule\n  ],\n  exports:[\n    HeaderComponent,\n    ChartsComponent,\n    FooterComponent\n  ]\n})\n\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/chartBuilder.html":{"url":"interfaces/chartBuilder.html","title":"interface - chartBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  chartBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/chart.ts\n        \n\n\n            \n                Description\n            \n            \n                Used in both diferred mode data visualisation and real time data\nvisualisation compenents as interface of methods to be implemented.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        chartData\n                                    \n                                \n                                \n                                    \n                                        updateScatter\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chartData\n                        \n                    \n                \n            \n            \n                \nchartData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     [] | any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateScatter\n                        \n                    \n                \n            \n            \n                \nupdateScatter(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Chart } from \"chart.js/auto\"\nimport { CurrentValuesSchema } from \"./api/api.interface\"\n/**\n * used as type  of chart title\n */\nexport\ninterface chartTitle{\n  display:boolean\n  text:string\n  color:string\n}\n/**\n * used as type of chart animation option\n */\nexport interface ChartAnimation{\n    tension: {\n      duration:number,\n      easing: string,\n      from: number,\n      to: number,\n      loop: boolean\n    }\n\n}\n/**\n * chartbar data requirements type\n */\nexport interface ChartBarDataInterface{\n\n    labels:string[]\n    datasets: Array\n  options: {\n    scales: {\n      y: {\n        beginAtZero: boolean,\n        min: number,\n        max: number\n      }\n    }\n  }\n\n\n}\n\n/**\n * Used in both diferred mode data visualisation and real time data\n * visualisation compenents as interface of methods to be implemented.\n */\nexport interface chartBuilder{\n  chartData():CurrentValuesSchema[]|any\n  updateScatter(...args:any):void\n}\n/**\n * Should be implemented in diferred mode data visualisation\n * to setup data requirements\n */\nexport interface DiferedComponentInterface{\n  barBasedChart(...args:any):void\n  scatterBasedChart(...args:any):void\n  builder(...args:any):any\n}\n\n\n/**\n *  Should be implemented in real time mode data visualisation\n * to setup data requirements\n */\nexport interface RealTimeChartComponentInterface{\n  initChartBar(...args:any):Chart\n  initScatter(...args:any):void\n  scatterData(...args:any):any\n  onChartsInit(...args:any):void\n  updateTimeSeries(...args:any):any\n  updateData(...args:any):any\n  OntimeSerieChartInit(...args:any):void\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/chartTitle.html":{"url":"interfaces/chartTitle.html","title":"interface - chartTitle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  chartTitle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/chart.ts\n        \n\n\n            \n                Description\n            \n            \n                used as type  of chart title\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            display\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Chart } from \"chart.js/auto\"\nimport { CurrentValuesSchema } from \"./api/api.interface\"\n/**\n * used as type  of chart title\n */\nexport\ninterface chartTitle{\n  display:boolean\n  text:string\n  color:string\n}\n/**\n * used as type of chart animation option\n */\nexport interface ChartAnimation{\n    tension: {\n      duration:number,\n      easing: string,\n      from: number,\n      to: number,\n      loop: boolean\n    }\n\n}\n/**\n * chartbar data requirements type\n */\nexport interface ChartBarDataInterface{\n\n    labels:string[]\n    datasets: Array\n  options: {\n    scales: {\n      y: {\n        beginAtZero: boolean,\n        min: number,\n        max: number\n      }\n    }\n  }\n\n\n}\n\n/**\n * Used in both diferred mode data visualisation and real time data\n * visualisation compenents as interface of methods to be implemented.\n */\nexport interface chartBuilder{\n  chartData():CurrentValuesSchema[]|any\n  updateScatter(...args:any):void\n}\n/**\n * Should be implemented in diferred mode data visualisation\n * to setup data requirements\n */\nexport interface DiferedComponentInterface{\n  barBasedChart(...args:any):void\n  scatterBasedChart(...args:any):void\n  builder(...args:any):any\n}\n\n\n/**\n *  Should be implemented in real time mode data visualisation\n * to setup data requirements\n */\nexport interface RealTimeChartComponentInterface{\n  initChartBar(...args:any):Chart\n  initScatter(...args:any):void\n  scatterData(...args:any):any\n  onChartsInit(...args:any):void\n  updateTimeSeries(...args:any):any\n  updateData(...args:any):any\n  OntimeSerieChartInit(...args:any):void\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/@core/Interceptor/http-interceptor.interceptor.ts\n            \n            interceptor\n            Aq54HttpInterceptor\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/@core/Preloader/is-loading.service.ts\n            \n            injectable\n            IsLoadingService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/@core/api/api.resource.service.ts\n            \n            injectable\n            ApiResourceService\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/UseCases/diferred-mode-usecases.ts\n            \n            injectable\n            DiferredModeUsecases\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/UseCases/real-time-use-cases.ts\n            \n            injectable\n            RealTimeUseCases\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/UseCases/real-time-use-cases.ts\n            \n            interface\n            OninitResponseSchema\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/about-candidate/about-candidate.component.ts\n            \n            component\n            AboutCandidateComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/features/diferred-data-chart/diferred-data-chart.component.ts\n            \n            component\n            DiferredDataChartComponent\n            \n                22 %\n                (5/22)\n            \n        \n        \n            \n                \n                src/app/features/real-time-chart/real-time-chart.component.ts\n            \n            component\n            RealTimeChartComponent\n            \n                36 %\n                (9/25)\n            \n        \n        \n            \n                \n                src/app/shared/charts/charts.component.ts\n            \n            component\n            ChartsComponent\n            \n                69 %\n                (9/13)\n            \n        \n        \n            \n                \n                src/app/shared/charts/charts.component.ts\n            \n            variable\n            require\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/charts/charts.component.ts\n            \n            variable\n            swal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/domain/api/api.interface.ts\n            \n            interface\n            ApiInterface\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/domain/api/api.interface.ts\n            \n            interface\n            CurrentValuesSchema\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/domain/api/api.interface.ts\n            \n            interface\n            LatestTransmissionsResponseScema\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/domain/api/api.interface.ts\n            \n            interface\n            RangeDataSchema\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/domain/api/api.interface.ts\n            \n            interface\n            SessionInfoSchema\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/domain/chart.ts\n            \n            interface\n            ChartAnimation\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/domain/chart.ts\n            \n            interface\n            ChartBarDataInterface\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/domain/chart.ts\n            \n            interface\n            chartBuilder\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/domain/chart.ts\n            \n            interface\n            chartTitle\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/domain/chart.ts\n            \n            interface\n            DiferedComponentInterface\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/domain/chart.ts\n            \n            interface\n            RealTimeChartComponentInterface\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            chartBarDataSets\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            chartBardDataSets\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getRandomRgb\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            makeAnimation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            makeTitle\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            mapData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            mapDiferedData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            mapToLabels\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            stationDataLabels\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            updateChartBarData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            variable\n            groupBy\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.0\n        \n            @angular/common : ~12.2.0\n        \n            @angular/compiler : ~12.2.0\n        \n            @angular/core : ~12.2.0\n        \n            @angular/forms : ~12.2.0\n        \n            @angular/platform-browser : ~12.2.0\n        \n            @angular/platform-browser-dynamic : ~12.2.0\n        \n            @angular/router : ~12.2.0\n        \n            @swimlane/ngx-charts : ^20.5.0\n        \n            bootstrap : ^5.3.2\n        \n            chart.js : ^4.4.1\n        \n            cors : ^2.8.5\n        \n            ejs : ^3.1.9\n        \n            express : ^4.18.2\n        \n            jquery : ^3.7.1\n        \n            moment : ^2.30.1\n        \n            morgan : ^1.10.0\n        \n            ng2-pdf-viewer : ^10.0.0\n        \n            ngx-csv-parser : ^1.3.1\n        \n            ngx-extended-pdf-viewer : ^19.0.3\n        \n            rxjs : ~6.6.0\n        \n            sweetalert : ^2.1.2\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            chartBarDataSets   (src/.../utils.ts)\n                        \n                        \n                            chartBardDataSets   (src/.../utils.ts)\n                        \n                        \n                            getRandomRgb   (src/.../utils.ts)\n                        \n                        \n                            makeAnimation   (src/.../utils.ts)\n                        \n                        \n                            makeTitle   (src/.../utils.ts)\n                        \n                        \n                            mapData   (src/.../utils.ts)\n                        \n                        \n                            mapDiferedData   (src/.../utils.ts)\n                        \n                        \n                            mapToLabels   (src/.../utils.ts)\n                        \n                        \n                            stationDataLabels   (src/.../utils.ts)\n                        \n                        \n                            updateChartBarData   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        chartBarDataSets\n                        \n                    \n                \n            \n            \n                \nchartBarDataSets(stationData, labels)\n                \n            \n\n\n\n\n            \n                \n                        we build datasets for chartbar config in case of\n\nreal time mode data visualisation\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                stationData\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                labels\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartBardDataSets\n                        \n                    \n                \n            \n            \n                \nchartBardDataSets(stationData)\n                \n            \n\n\n\n\n            \n                \n                        we build datasets for chartbar config in case of\n\ndiferred mode data visualisation\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                stationData\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomRgb\n                        \n                    \n                \n            \n            \n                \ngetRandomRgb()\n                \n            \n\n\n\n\n            \n                \n                        We generate a random RGB value from this function\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeAnimation\n                        \n                    \n                \n            \n            \n                \nmakeAnimation(duration: number, easing: string, from: number, to: number, loop)\n                \n            \n\n\n\n\n            \n                \n                        config animation option for given chart\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1000\n                                            \n\n                                        \n                                        \n                                                easing\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'linear'\n                                            \n\n                                        \n                                        \n                                                from\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                to\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                        \n                                                loop\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ChartAnimation\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTitle\n                        \n                    \n                \n            \n            \n                \nmakeTitle(text: string, color: string)\n                \n            \n\n\n\n\n            \n                \n                        make chart title according to given parameters\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'blue'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         chartTitle\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapData\n                        \n                    \n                \n            \n            \n                \nmapData(data, labels)\n                \n            \n\n\n\n\n            \n                \n                        this function maps the labels to the given lis of data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labels\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapDiferedData\n                        \n                    \n                \n            \n            \n                \nmapDiferedData(data, sensors)\n                \n            \n\n\n\n\n            \n                \n                        we map data acording to the unit of sensors\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sensors\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapToLabels\n                        \n                    \n                \n            \n            \n                \nmapToLabels(data: any, labels: any)\n                \n            \n\n\n\n\n            \n                \n                        this function do almost the same with 2\n*mapData\nbut is used for mapping data in case of diferred mode data visualisation\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                labels\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stationDataLabels\n                        \n                    \n                \n            \n            \n                \nstationDataLabels(stations)\n                \n            \n\n\n\n\n            \n                \n                        we grab station labels\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stations\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateChartBarData\n                        \n                    \n                \n            \n            \n                \nupdateChartBarData(stationData, labels)\n                \n            \n\n\n\n\n            \n                \n                        build dataset for updating chartbar in case of\n\nreal time mode data visualisation\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                stationData\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                labels\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAQ54\nThis project was generated with Angular CLI version 12.2.18.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/  directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiProxyModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeaturesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeaturesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_FeaturesModule\n\n\n\ncluster_FeaturesModule_declarations\n\n\n\ncluster_FeaturesModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAboutCandidateComponent\n\nAboutCandidateComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutCandidateComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApiProxyModule\n\nApiProxyModule\n\nAppModule -->\n\nApiProxyModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nFeaturesModule\n\nFeaturesModule\n\nFeaturesModule -->\n\nSharedModule->FeaturesModule\n\n\n\n\n\nChartsComponent \n\nChartsComponent \n\nChartsComponent  -->\n\nSharedModule->ChartsComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nAq54HttpInterceptor\n\nAq54HttpInterceptor\n\nAppModule -->\n\nAq54HttpInterceptor->AppModule\n\n\n\n\n\nDiferredDataChartComponent\n\nDiferredDataChartComponent\n\nFeaturesModule -->\n\nDiferredDataChartComponent->FeaturesModule\n\n\n\n\n\nRealTimeChartComponent\n\nRealTimeChartComponent\n\nFeaturesModule -->\n\nRealTimeChartComponent->FeaturesModule\n\n\n\n\n\nFeaturesRoutingModule\n\nFeaturesRoutingModule\n\nFeaturesModule -->\n\nFeaturesRoutingModule->FeaturesModule\n\n\n\n\n\nChartsComponent\n\nChartsComponent\n\nSharedModule -->\n\nChartsComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            groupBy   (src/.../utils.ts)\n                        \n                        \n                            require   (src/.../charts.component.ts)\n                        \n                        \n                            swal   (src/.../charts.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  baseApi:\"https://airqino-api.magentalab.it/\",\n  docsURL:\"http://localhost:8080/docs\"\n}\n                    \n                \n\n            \n                \n                    \nBased Api endpoints and other static  resources are placed here.\n\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        groupBy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (list: T[], getKey: (item: T) => K) =>\n  list.reduce((previous, currentItem) => {\n    const group = getKey(currentItem);\n    if (!previous[group]) previous[group] = [];\n    previous[group].push(currentItem);\n    return previous;\n  }, {} as Record)\n                    \n                \n\n            \n                \n                    This utility function is used as helper in making a group of data from a given list according to key parameter.\n\n                \n            \n\n        \n    \n\n    src/app/shared/charts/charts.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    Declare require as a const and type any\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SweetAlert\n\n                    \n                \n\n            \n                \n                    we declare swal as var and type\n*SweetAlert\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
