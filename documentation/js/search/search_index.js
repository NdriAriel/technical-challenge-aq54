var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutCandidateComponent.html",[0,0.972,1,1.193]],["body/components/AboutCandidateComponent.html",[0,1.054,1,1.151,2,0.918,3,0.101,4,0.089,5,2.285,6,0.625,7,0.625,8,0.625,9,0.078,10,3.083,11,2.429,12,1.035,13,0.14,14,2.709,15,2.096,16,1.77,17,2.096,18,1.069,19,1.519,20,0.625,21,2.386,22,2.037,23,2.096,24,1.069,25,2.746,26,1.069,27,2.096,28,0.14,29,0.427,30,0.417,31,0.528,32,1.659,33,0.854,34,0.876,35,1.226,36,1.226,37,0.331,38,0.027,39,0.537,40,0.239,41,0.742,42,0.648,43,1.267,44,2.744,45,2.096,46,1.395,47,2.096,48,2.096,49,2.096,50,2.096,51,2.096,52,2.096,53,1.77,54,2.096,55,3.249,56,4.482,57,2.096,58,2.096,59,2.096,60,1.77,61,1.77,62,2.096,63,2.096,64,2.096,65,0.854,66,2.096,67,2.096,68,4.133,69,2.096,70,2.096,71,2.096,72,1.621,73,3.979,74,3.36,75,3.979,76,1.226,77,1.395,78,2.096,79,1.77,80,1.77,81,2.096,82,2.096,83,2.096,84,2.096,85,2.096,86,2.096,87,1.555,88,1.555,89,1.77,90,1.77,91,2.096,92,2.096,93,2.096,94,3.249,95,2.096,96,2.096,97,2.096,98,2.096,99,2.096,100,2.096,101,4.482,102,3.249,103,3.979,104,4.482,105,2.096,106,2.096,107,2.096,108,2.096,109,2.411,110,2.411,111,5.131,112,3.227,113,4.482,114,3.681,115,1.77,116,2.096,117,2.096,118,2.096,119,2.096,120,2.096,121,2.096,122,4.482,123,2.096,124,2.096,125,3.414,126,2.096,127,2.096,128,2.096,129,2.096,130,2.096,131,3.249,132,3.249,133,2.096,134,2.096,135,3.249,136,2.096,137,2.096,138,2.096,139,2.096,140,2.096,141,3.249,142,2.096,143,3.249,144,3.979,145,2.096,146,1.77,147,3.249,148,2.096,149,2.096,150,2.096,151,2.096,152,2.096,153,3.979,154,1.77,155,2.096,156,2.411,157,2.096,158,0.565,159,2.096,160,1.555,161,2.096,162,1.77,163,2.096,164,2.096,165,2.096,166,4.482,167,2.096,168,2.096,169,2.096,170,2.096,171,2.096,172,2.096,173,1.395,174,3.249,175,2.096,176,2.096,177,3.249,178,3.249,179,1.555,180,2.096,181,2.096,182,2.096,183,2.096,184,2.096,185,2.096,186,2.096,187,2.096,188,2.096,189,2.096,190,2.096,191,3.249,192,2.096,193,2.096,194,2.096,195,2.096,196,2.096,197,2.096,198,2.096,199,2.096,200,2.096,201,1.77,202,2.096,203,2.096,204,2.096,205,2.096,206,2.096,207,2.096,208,2.096,209,2.096,210,2.096,211,2.096,212,2.096,213,2.096,214,2.096,215,2.096,216,2.096,217,2.096,218,2.096,219,2.096,220,2.096,221,2.096,222,2.096,223,2.096,224,2.096,225,0.989,226,2.096,227,2.096,228,1.226,229,0.268,230,0.25,231,0.648,232,0.537,233,0.741,234,1.226,235,0.101,236,0.268,237,0.909,238,2.096,239,2.096,240,2.096,241,2.096,242,2.096,243,2.096,244,2.096,245,2.096,246,2.096,247,2.096,248,2.096,249,2.096,250,2.096,251,2.096,252,2.096,253,2.096,254,2.096,255,2.096,256,2.096,257,2.096,258,2.096,259,2.096,260,2.096,261,2.096,262,2.096,263,1.226,264,3.624,265,2.422,266,2.952,267,4.52,268,1.226,269,2.318,270,4.104,271,1.226,272,1.226,273,1.226,274,1.226,275,2.729,276,3.327,277,2.744,278,2.318,279,4.384,280,3.227,281,1.202,282,2.746,283,0.854,284,3.114,285,2.829,286,2.987,287,4.252,288,2.096,289,2.353,290,4.85,291,2.411,292,2.318,293,1.226,294,4.252,295,4.252,296,1.226,297,1.035,298,1.226,299,1.226,300,1.035,301,1.226,302,1.226,303,2.096,304,1.77,305,3.651,306,2.429,307,2.318,308,2.096,309,1.519,310,1.395,311,1.963,312,2.982,313,3.083,314,2.318,315,1.035,316,1.226,317,2.096,318,1.226,319,2.096,320,1.035,321,1.555,322,1.226,323,1.226,324,0.909,325,2.029,326,1.226,327,1.226,328,1.226,329,1.035,330,2.096,331,3.651,332,1.226,333,2.48,334,3.36,335,3.36,336,3.599,337,1.77,338,0.816,339,1.226,340,1.77,341,1.226,342,3.249,343,3.651,344,0.434,345,2.096,346,2.096,347,4.679,348,3.979,349,1.77,350,2.096,351,1.555,352,3.59,353,1.035,354,1.035,355,1.226,356,1.226,357,2.096,358,1.035,359,2.096,360,3.651,361,3.249,362,1.035,363,2.096,364,1.226,365,1.226,366,1.226,367,2.746,368,1.226,369,2.096,370,3.249,371,0.909,372,2.096,373,2.096,374,2.096,375,1.226,376,1.226,377,1.035,378,1.226,379,1.226,380,1.035,381,2.746,382,1.226,383,0.816,384,2.096,385,1.226,386,0.909,387,3.651,388,1.226,389,1.035,390,1.035,391,1.226,392,1.226,393,3.651,394,1.226,395,1.226,396,1.035,397,1.226,398,1.77,399,2.746,400,1.226,401,1.226,402,1.226,403,1.226,404,1.226,405,1.226,406,1.226,407,1.226,408,1.226,409,1.226,410,1.226,411,2.096,412,1.226,413,1.035,414,1.226,415,1.226,416,1.226,417,0.465,418,1.069,419,1.069,420,0.625,421,1.533,422,0.625,423,0.528,424,0.625,425,0.465,426,0.625,427,0.465,428,0.625,429,0.434,430,0.309,431,0.625,432,0.465,433,0.625,434,0.465,435,0.625,436,0.434,437,0.288,438,0.25,439,0.625,440,0.625,441,0.008,442,0.008]],["title/interfaces/ApiInterface.html",[443,0.384,444,1.278]],["body/interfaces/ApiInterface.html",[3,0.287,4,0.253,9,0.22,13,0.536,28,0.397,30,0.607,31,1.182,34,1.603,37,1.603,38,0.027,40,0.736,158,1.717,229,0.287,235,0.491,423,1.496,441,0.018,442,0.018,443,0.736,444,1.782,445,1.075,446,1.925,447,1.759,448,2.837,449,1.663,450,1.758,451,2.215,452,3.964,453,3.964,454,3.964,455,3.964,456,3.964,457,2.937,458,1.51,459,3.478,460,1.837,461,1.837,462,2.58,463,3.122,464,2.937,465,2.684,466,3.439,467,3.478,468,1.883,469,2.937,470,1.837,471,3.478,472,2.937,473,2.937,474,3.478,475,2.937,476,3.478,477,2.101,478,1.523,479,1.356,480,1.758,481,2.056,482,1.773,483,2.101,484,1.782,485,2.394,486,0.876,487,2.837,488,1.925,489,2.101,490,2.101,491,2.056,492,1.773,493,1.232,494,2.101,495,2.101,496,1.232,497,2.101,498,2.101,499,0.876,500,2.101,501,1.64,502,2.101,503,2.101,504,2.101,505,1.773,506,1.64,507,2.101,508,1.64,509,1.64,510,1.773,511,2.101,512,2.101,513,2.101,514,2.101,515,2.101,516,2.101,517,2.101,518,2.101]],["title/modules/ApiProxyModule.html",[519,1.114,520,2.034]],["body/modules/ApiProxyModule.html",[3,0.376,4,0.331,9,0.288,13,0.52,38,0.027,158,1.699,229,0.534,230,0.927,235,0.376,236,0.996,441,0.021,442,0.021,447,1.726,449,1.979,451,2.635,519,1.848,520,3.375,521,1.855,522,4.553,523,4.553,524,4.553,525,5.585,526,2.445,527,4.716,528,3.091,529,4.144,530,3.029,531,3.029,532,4.553,533,2.751,534,2.519,535,4.553,536,2.751,537,2.519,538,2.751,539,4.553,540,4.553,541,4.553,542,4.553,543,4.553,544,4.553,545,2.321]],["title/injectables/ApiResourceService.html",[531,2.24,546,1.278]],["body/injectables/ApiResourceService.html",[3,0.269,4,0.237,9,0.206,13,0.372,18,1.661,28,0.372,29,0.914,31,1.131,33,1.327,34,1.66,37,1.737,38,0.027,40,0.702,41,1.154,42,1.007,158,1.494,229,0.48,230,0.663,235,0.269,236,0.713,423,1.512,441,0.017,442,0.017,444,1.705,452,3.792,453,3.792,454,3.792,455,3.792,456,3.792,457,3.792,458,1.485,460,1.856,461,1.856,462,3.332,463,3.316,464,2.751,465,2.833,466,3.629,468,1.832,469,3.792,470,1.588,472,3.792,473,2.751,475,3.792,477,2.713,478,1.426,480,1.922,486,0.82,493,1.154,501,1.537,509,1.537,531,2.988,546,1.705,547,1.969,548,2.751,549,4.49,550,3.332,551,4.49,552,3.258,553,5.138,554,4.49,555,2.751,556,3.258,557,3.258,558,3.258,559,3.258,560,3.258,561,3.258,562,2.988,563,4.49,564,3.792,565,1.803,566,2.417,567,2.168,568,2.751,569,2.751,570,2.417,571,3.258,572,2.751,573,1.661,574,3.258,575,2.786,576,3.258,577,3.258,578,3.258,579,3.258,580,3.258,581,3.258,582,3.258]],["title/components/AppComponent.html",[0,0.972,425,1.278]],["body/components/AppComponent.html",[0,1.82,1,1.265,2,2.519,3,0.295,4,0.26,5,1.82,6,1.82,7,1.82,8,1.82,9,0.226,13,0.407,18,2.436,19,2.981,20,1.82,21,3.307,22,2.642,24,2.436,26,2.436,28,0.407,29,0.973,30,0.407,31,1.203,32,3.476,33,1.947,34,1.551,37,0.963,38,0.027,39,2.092,40,0.545,41,1.265,42,1.104,173,2.376,229,0.395,230,0.727,231,1.104,235,0.295,236,0.781,265,2.358,275,2.436,276,2.376,309,1.976,311,2.158,312,2.376,321,2.649,324,2.649,325,2.436,333,1.976,383,2.376,417,1.356,418,2.436,419,2.436,420,1.82,421,2.713,422,1.82,423,1.356,424,1.82,425,2.184,426,1.82,427,1.356,428,1.82,429,1.265,430,0.899,431,1.82,432,1.356,433,1.82,434,1.356,435,1.82,436,1.265,437,0.839,438,0.727,439,1.82,440,1.82,441,0.018,442,0.018,449,1.693,460,1.104,461,1.104,521,1.947,570,3.546,583,3.015,584,2.888,585,3.18,586,4.035,587,4.035,588,5.387,589,4.779,590,3.997,591,5.387,592,4.779,593,3.571,594,3.476,595,4.779,596,3.571,597,4.035,598,2.645,599,4.779,600,3.571,601,2.649,602,2.649,603,3.571,604,3.571,605,3.571,606,3.571,607,3.571,608,3.571,609,2.649,610,3.571,611,3.571,612,2.376,613,3.571,614,3.015,615,3.571,616,3.571,617,3.571]],["title/modules/AppModule.html",[519,1.114,618,2.24]],["body/modules/AppModule.html",[1,2.228,3,0.315,4,0.278,9,0.241,11,2.54,13,0.436,22,1.555,38,0.027,229,0.552,230,0.777,235,0.315,236,0.835,417,1.449,425,2.553,441,0.019,442,0.019,519,1.842,520,3.8,521,1.555,528,2.764,536,3.364,537,2.764,538,3.364,545,1.946,566,2.832,584,3.018,602,2.832,618,4.567,619,1.946,620,3.364,621,3.223,622,3.223,623,3.223,624,3.223,625,3.223,626,3.8,627,3.48,628,3.704,629,3.324,630,2.54,631,2.307,632,3.817,633,3.223,634,4.218,635,4.995,636,4.218,637,2.54,638,3.223,639,3.817,640,4.995,641,3.817,642,4.218,643,2.832,644,3.817,645,4.995,646,3.324,647,1.946,648,2.832,649,3.223,650,3.223,651,3.817,652,3.817,653,3.817]],["title/modules/AppRoutingModule.html",[519,1.114,626,2.034]],["body/modules/AppRoutingModule.html",[1,1.619,3,0.377,4,0.333,9,0.289,11,3.042,22,1.862,38,0.027,72,1.862,229,0.5,230,0.931,235,0.377,236,1,438,1.14,441,0.021,442,0.021,449,1.619,519,1.852,521,1.862,528,3.099,537,2.53,545,2.33,626,3.383,646,3.726,647,2.33,649,3.86,654,4.571,655,3.86,656,4.571,657,3.658,658,4.154,659,3.86,660,3.86,661,4.571,662,5.599,663,3.391,664,4.571,665,4.728,666,5.599,667,5.599,668,4.571,669,4.571,670,4.571,671,4.571,672,4.571,673,4.571,674,4.571]],["title/interceptors/Aq54HttpInterceptor.html",[628,2.034,675,2.843]],["body/interceptors/Aq54HttpInterceptor.html",[3,0.32,4,0.282,9,0.245,13,0.442,18,1.973,28,0.442,29,1.026,31,1.269,33,1.576,34,1.511,37,1.359,38,0.027,40,0.64,46,3.353,158,1.359,229,0.508,230,0.788,235,0.32,236,0.847,423,1.269,441,0.019,442,0.019,450,1.667,460,1.557,461,1.557,463,2.569,478,1.694,480,1.854,526,2.206,546,1.913,555,4.255,566,2.871,575,2.206,590,3.739,594,3.588,628,3.045,663,4.405,676,3.869,677,5.013,678,3.267,679,6.517,680,5.013,681,5.604,682,3.869,683,3.869,684,5.039,685,5.937,686,5.937,687,5.937,688,3.869,689,5.039,690,5.937,691,5.039,692,5.039,693,5.039,694,5.039,695,3.739,696,3.869,697,3.869,698,3.869,699,3.869,700,3.869,701,3.869,702,3.869,703,3.869,704,3.869,705,3.869,706,3.869,707,3.869,708,3.869,709,5.039,710,3.869,711,3.869,712,3.869,713,3.869]],["title/interfaces/ChartAnimation.html",[443,0.384,714,1.474]],["body/interfaces/ChartAnimation.html",[3,0.323,4,0.284,9,0.247,13,0.446,28,0.446,29,1.033,30,0.735,31,0.984,38,0.027,40,0.735,65,1.592,225,2.393,229,0.419,231,1.842,232,1.712,235,0.523,281,1.712,283,1.592,344,1.385,430,1.277,437,1.191,438,1.033,441,0.019,442,0.019,443,0.735,445,1.208,458,0.855,470,1.842,479,1.721,486,0.984,496,1.385,499,1.418,526,2.221,714,2.221,715,1.993,716,2.586,717,3.298,718,4.284,719,2.163,720,1.712,721,2.163,722,2.163,723,2.163,724,2.163,725,1.993,726,1.993,727,2.807,728,1.844,729,2.871,730,1.592,731,2.163,732,1.844,733,1.844,734,1.844,735,1.844,736,1.712,737,1.842,738,2.163,739,2.871,740,1.592,741,2.163,742,2.163,743,1.712,744,2.163,745,2.163,746,2.163,747,1.844,748,2.163,749,2.163,750,2.163,751,2.163,752,2.163,753,2.163,754,2.163]],["title/interfaces/ChartBarDataInterface.html",[443,0.384,730,1.371]],["body/interfaces/ChartBarDataInterface.html",[3,0.316,4,0.278,9,0.242,13,0.436,28,0.436,29,1.018,30,0.742,31,0.963,38,0.027,40,0.75,43,3.367,65,2.407,225,1.804,229,0.413,231,1.722,232,1.674,235,0.52,281,1.674,283,1.558,344,1.354,430,1.259,437,1.174,438,1.018,441,0.019,442,0.019,443,0.731,445,1.182,458,1.219,470,1.826,479,1.609,486,0.963,496,1.974,499,1.403,526,2.189,714,1.674,715,1.949,716,1.949,717,2.116,718,4.222,719,2.116,720,1.674,721,2.116,722,2.116,723,2.116,724,2.116,725,1.949,726,1.949,727,2.767,728,2.359,729,3.013,730,2.037,731,2.116,732,2.788,733,1.804,734,1.804,735,1.804,736,1.674,737,1.826,738,2.116,739,2.841,740,1.558,741,2.116,742,2.116,743,1.674,744,2.116,745,2.116,746,2.116,747,1.804,748,2.116,749,2.116,750,2.116,751,2.116,752,2.116,753,2.116,754,2.116]],["title/components/ChartsComponent.html",[0,0.972,427,1.278]],["body/components/ChartsComponent.html",[0,1.621,1,0.576,2,1.162,3,0.134,4,0.118,5,0.829,6,0.829,7,0.829,8,0.829,9,0.103,13,0.303,18,1.353,19,1.861,20,0.829,21,2.664,22,2.128,24,1.353,26,1.353,28,0.186,29,0.79,30,0.303,31,0.668,32,2.346,33,0.662,34,1.662,37,1.154,38,0.027,39,2.009,40,0.703,41,2.023,42,1.765,46,2.846,68,2.583,72,1.742,112,1.766,114,1.082,125,1.082,229,0.321,230,0.331,231,1.561,235,0.134,236,0.356,264,3.476,265,2.12,266,1.969,267,1.373,269,3.612,270,1.206,275,1.353,276,1.766,277,3.875,279,3.747,280,1.082,281,1.162,283,0.662,284,2.846,285,3.054,286,2.862,289,1.469,291,2.495,292,1.373,297,1.373,300,1.373,304,1.373,306,2.583,307,1.373,309,1.861,310,1.766,311,2.585,312,1.082,314,2.241,315,1.373,320,2.84,325,1.353,329,3.278,333,2.148,334,2.241,335,1.373,336,1.206,337,1.373,338,1.082,340,2.241,344,1.515,351,2.88,352,1.373,353,1.373,354,1.373,371,1.206,377,2.241,380,1.373,383,1.766,386,3.174,389,2.241,390,2.84,398,1.373,417,0.617,418,1.353,419,1.353,420,0.829,421,2.165,422,0.829,423,1.219,424,0.829,425,0.617,426,0.829,427,1.474,428,0.829,429,0.576,430,0.668,431,0.829,432,0.617,433,0.829,434,0.617,435,0.829,436,0.576,437,0.79,438,0.79,439,0.829,440,0.829,441,0.01,442,0.01,447,0.82,450,0.538,458,1.25,460,1.322,461,1.322,465,1.831,466,2.346,468,1.415,484,1.474,499,0.668,572,1.373,573,0.829,575,1.7,586,1.373,597,3.278,598,1.469,631,0.982,647,0.829,658,1.969,665,2.241,736,0.712,737,0.82,755,1.206,756,1.969,757,3.363,758,2.654,759,2.654,760,2.654,761,2.654,762,2.654,763,2.654,764,2.241,765,2.241,766,2.654,767,1.969,768,2.241,769,1.469,770,1.969,771,2.654,772,2.654,773,3.363,774,1.626,775,3.875,776,2.654,777,1.861,778,2.241,779,1.626,780,2.88,781,1.626,782,1.626,783,1.373,784,1.626,785,1.626,786,1.626,787,1.626,788,2.84,789,2.654,790,2.495,791,2.241,792,1.626,793,4.277,794,1.626,795,1.626,796,1.626,797,3.363,798,1.626,799,4.589,800,3.882,801,1.626,802,1.626,803,2.654,804,2.654,805,1.626,806,2.654,807,1.969,808,2.654,809,2.654,810,1.626,811,4.589,812,1.626,813,1.626,814,1.626,815,2.654,816,5.12,817,4.264,818,1.626,819,1.626,820,1.626,821,1.626,822,2.654,823,2.654,824,1.626,825,1.604,826,1.969,827,1.626,828,3.278,829,1.969,830,1.626,831,2.88,832,1.626,833,1.626,834,1.626,835,1.626,836,1.626,837,1.626,838,1.626,839,1.373,840,1.626,841,1.626,842,1.626,843,1.626,844,1.373,845,1.626,846,1.626,847,1.626,848,1.626,849,1.626,850,1.626,851,1.626,852,1.252,853,1.626,854,1.626,855,1.626,856,1.626,857,1.626,858,1.373,859,1.626,860,1.626,861,1.626,862,1.626,863,1.626,864,1.626,865,1.626,866,1.373,867,2.654,868,2.654,869,2.654,870,2.654,871,1.626,872,2.654,873,2.654,874,1.626,875,1.206,876,1.626,877,1.206,878,1.626,879,1.626,880,1.626,881,1.252,882,1.626,883,1.626,884,1.626,885,1.626,886,1.626,887,1.626,888,1.626,889,1.626,890,1.626,891,1.626,892,1.626,893,2.654,894,1.626,895,1.626,896,1.626,897,1.626,898,2.654,899,1.626,900,1.626,901,1.626,902,1.626,903,2.654,904,1.626,905,1.626,906,1.626,907,1.626,908,2.654,909,2.654,910,2.654,911,2.654,912,2.654,913,2.241,914,1.626,915,1.626,916,2.654,917,2.654,918,1.626,919,1.626,920,1.626,921,1.626,922,3.363,923,3.363,924,2.654,925,1.626,926,2.84,927,5.797,928,2.654,929,1.626,930,2.654,931,2.495,932,1.626,933,2.654,934,1.626,935,1.626,936,1.626,937,1.626,938,1.626,939,1.626,940,1.626,941,1.626,942,1.626,943,1.626,944,1.626,945,3.882,946,2.654,947,1.626,948,1.626,949,1.626,950,1.626,951,1.626,952,1.626,953,2.654,954,2.654,955,2.654,956,1.626,957,1.373,958,1.626,959,2.654,960,1.626,961,2.654,962,1.626,963,2.654,964,1.626,965,1.626,966,1.626,967,1.626,968,1.626,969,1.626]],["title/interfaces/CurrentValuesSchema.html",[443,0.384,486,0.848]],["body/interfaces/CurrentValuesSchema.html",[3,0.325,4,0.286,9,0.248,13,0.581,28,0.448,29,1.036,30,0.644,38,0.027,40,0.746,158,1.74,229,0.325,235,0.511,441,0.02,442,0.02,443,0.746,444,1.492,445,1.214,446,2.175,447,1.573,448,2.375,449,1.392,450,1.684,451,1.854,458,1.469,463,2.003,468,1.684,470,1.745,478,1.72,479,1.63,480,1.976,481,2.472,482,2.595,483,3.076,484,2.143,485,3.231,486,1.282,487,3.738,488,3.305,489,2.375,490,2.375,491,2.229,492,2.003,493,1.392,494,2.375,495,2.375,496,2,497,2.375,498,2.375,499,0.989,500,2.375,501,1.854,502,2.375,503,2.375,504,2.375,505,2.003,506,1.854,507,2.375,508,1.854,509,1.854,510,2.003,511,2.375,512,2.375,513,2.375,514,2.375,515,2.375,516,2.375,517,2.375,518,2.375]],["title/interfaces/DiferedComponentInterface.html",[443,0.384,743,1.474]],["body/interfaces/DiferedComponentInterface.html",[3,0.304,4,0.268,9,0.233,13,0.421,28,0.421,30,0.745,31,1.378,34,1.476,37,1.476,38,0.027,39,2.137,40,0.711,65,1.502,225,1.739,229,0.403,231,1.692,232,1.614,235,0.514,281,1.614,283,1.502,344,1.306,423,1.378,430,1.378,437,1.147,438,0.994,441,0.019,442,0.019,443,0.725,445,1.139,458,0.807,460,1.692,461,1.692,470,1.801,479,1.58,486,0.928,496,1.306,499,1.467,526,2.396,714,1.614,715,1.88,716,1.88,717,2.04,719,2.04,720,1.614,721,2.04,722,2.04,723,2.04,724,2.04,725,1.88,726,1.88,727,2.702,728,1.739,729,2.97,730,1.502,731,2.04,732,1.739,733,1.739,734,1.739,735,1.739,736,1.614,737,1.873,738,2.04,739,2.97,740,1.502,741,2.04,742,2.04,743,2.137,744,2.04,745,2.04,746,2.04,747,1.739,748,2.04,749,2.04,750,2.04,751,2.04,752,2.04,753,2.04,754,2.04,970,4.122,971,4.122,972,4.122,973,3.687,974,3.687,975,4.061,976,3.687,977,3.687,978,3.687,979,3.687]],["title/components/DiferredDataChartComponent.html",[0,0.972,429,1.193]],["body/components/DiferredDataChartComponent.html",[0,1.11,1,0.474,2,0.989,3,0.111,4,0.097,5,0.682,6,0.682,7,0.682,8,0.682,9,0.085,16,1.907,18,1.152,19,1.25,20,0.682,21,2.474,22,1.977,24,1.152,26,1.152,28,0.153,29,0.701,30,0.783,31,0.569,32,2.08,33,0.92,34,1.675,37,1.353,38,0.027,39,2.041,40,0.705,41,2.057,42,1.83,43,1.771,65,0.92,68,3.102,72,2.531,77,0.891,109,2.174,110,2.852,112,0.891,114,2.29,125,2.952,156,2.174,158,0.609,179,1.676,229,0.344,230,0.273,231,1.699,232,0.586,233,2.519,235,0.111,236,0.641,237,1.676,265,0.989,275,1.494,283,0.92,286,1.755,309,1.25,325,1.494,344,1.362,417,1.307,418,1.152,419,1.152,420,0.682,421,1.813,422,0.682,423,1.174,424,0.682,425,0.508,426,0.682,427,0.508,428,0.682,429,1.219,430,1.174,431,0.682,432,0.508,433,0.682,434,0.508,435,0.682,436,0.474,437,0.314,438,0.273,439,0.682,440,0.682,441,0.009,442,0.009,447,0.698,449,1.219,450,0.747,451,0.631,458,1.062,460,1.441,461,1.288,465,0.631,466,0.809,468,0.443,479,0.652,480,0.969,481,0.989,484,0.858,488,1.904,491,0.989,493,0.8,506,1.623,508,1.623,533,1.771,562,1.503,565,0.741,573,1.152,575,0.989,587,1.907,598,1.25,602,0.993,609,0.993,612,0.891,647,0.682,730,0.92,732,1.813,733,1.813,734,1.623,735,1.967,737,0.414,740,0.92,743,0.989,764,1.907,767,1.676,768,1.907,769,2.307,770,1.676,775,2.474,777,0.741,778,1.907,780,1.676,783,1.13,790,1.676,807,1.676,816,2.906,817,2.906,825,1.365,839,1.13,852,1.382,858,1.13,866,1.13,875,2.553,877,2.174,881,1.967,970,2.906,971,1.907,972,2.906,980,5.272,981,4.154,982,0.993,983,1.907,984,2.474,985,1.907,986,2.93,987,2.259,988,2.93,989,1.907,990,1.907,991,2.259,992,1.907,993,2.259,994,2.519,995,2.259,996,1.676,997,3.441,998,2.906,999,1.676,1000,1.13,1001,1.339,1002,1.339,1003,4.169,1004,1.503,1005,2.474,1006,3.441,1007,3.093,1008,2.259,1009,1.676,1010,1.907,1011,2.906,1012,1.339,1013,1.339,1014,2.259,1015,2.259,1016,3.441,1017,2.259,1018,1.339,1019,1.339,1020,1.907,1021,1.339,1022,1.339,1023,2.259,1024,1.907,1025,2.259,1026,1.339,1027,1.339,1028,1.339,1029,1.676,1030,1.339,1031,1.339,1032,1.339,1033,3.937,1034,2.259,1035,2.906,1036,2.259,1037,1.907,1038,4.437,1039,2.259,1040,1.25,1041,2.259,1042,2.259,1043,2.259,1044,1.907,1045,1.339,1046,1.339,1047,2.259,1048,1.907,1049,1.907,1050,1.13,1051,2.259,1052,2.906,1053,2.259,1054,2.259,1055,2.259,1056,2.259,1057,2.259,1058,1.339,1059,1.907,1060,1.339,1061,1.339,1062,2.259,1063,2.259,1064,1.13,1065,1.13,1066,1.339,1067,1.13,1068,1.13,1069,1.13,1070,1.13,1071,1.13,1072,1.339,1073,1.339,1074,1.339,1075,1.503,1076,1.339,1077,0.993,1078,0.993,1079,0.891,1080,0.993,1081,0.993,1082,0.891,1083,1.339,1084,1.339,1085,1.365,1086,1.339,1087,1.339,1088,1.13,1089,1.13,1090,1.13,1091,1.339,1092,1.339,1093,1.339,1094,1.339,1095,1.13,1096,1.13,1097,1.13,1098,1.339,1099,1.339,1100,1.339,1101,1.339,1102,1.339,1103,1.339,1104,1.339,1105,2.259,1106,1.339,1107,1.365,1108,1.339,1109,1.339,1110,1.365,1111,1.339,1112,2.259,1113,2.259,1114,1.339,1115,1.339,1116,2.259,1117,2.259,1118,1.13,1119,1.339,1120,0.891,1121,1.339,1122,2.259,1123,1.339,1124,1.339,1125,1.339,1126,1.339,1127,1.339,1128,1.365,1129,1.365,1130,1.365,1131,1.339,1132,1.339,1133,1.339,1134,1.339,1135,0.993,1136,1.339,1137,1.339,1138,1.339,1139,1.339,1140,1.339,1141,1.339,1142,1.339,1143,1.339,1144,1.339,1145,1.339,1146,1.339,1147,1.339,1148,1.339,1149,1.339,1150,1.339,1151,1.339,1152,1.339,1153,1.339,1154,1.339,1155,1.339,1156,1.339,1157,1.339,1158,1.339,1159,1.339,1160,1.339,1161,1.339,1162,1.339,1163,1.339,1164,1.339,1165,1.339,1166,1.339,1167,1.339,1168,1.339,1169,1.339,1170,2.259,1171,1.676,1172,1.339,1173,1.339,1174,1.339,1175,1.339,1176,2.259,1177,2.259,1178,1.339,1179,1.339,1180,2.259,1181,2.259,1182,2.259,1183,2.259,1184,2.259,1185,2.474,1186,2.474,1187,2.474,1188,1.339,1189,1.907,1190,1.907,1191,1.907,1192,1.907,1193,2.93,1194,1.907,1195,2.474,1196,1.907,1197,2.259,1198,2.906,1199,2.259,1200,1.339,1201,1.907,1202,2.906,1203,2.474,1204,1.907,1205,2.259,1206,1.339,1207,1.339,1208,1.339,1209,1.339,1210,1.339,1211,1.339,1212,1.339,1213,1.13,1214,1.339,1215,1.339,1216,1.13,1217,1.339,1218,1.13,1219,1.13,1220,1.13,1221,1.13,1222,1.339,1223,1.339,1224,1.339,1225,1.339,1226,0.891,1227,1.339,1228,1.339,1229,1.13,1230,1.13,1231,1.13,1232,1.339,1233,1.339,1234,1.339,1235,1.339]],["title/injectables/DiferredModeUsecases.html",[533,2.034,546,1.278]],["body/injectables/DiferredModeUsecases.html",[3,0.271,4,0.238,9,0.207,13,0.588,28,0.374,30,0.664,31,1.135,33,1.335,34,1.39,37,1.39,38,0.027,40,0.588,41,1.161,42,1.013,72,2.1,158,1.662,229,0.372,230,0.667,235,0.271,236,1.128,423,1.298,430,1.135,441,0.017,442,0.017,444,1.957,447,1.593,450,1.705,458,1.455,460,1.593,461,1.593,462,3.345,465,2.746,466,3.635,468,1.99,477,3.635,480,1.491,481,1.974,491,2.257,492,3.067,499,1.515,533,2.724,546,1.244,547,1.98,565,1.813,573,1.671,575,2.749,585,3,663,3.824,737,1.393,777,1.813,852,2.127,994,3.635,1035,4.352,1040,2.852,1085,1.98,1107,2.724,1110,3.518,1118,3.807,1120,2.18,1128,2.724,1129,2.724,1130,2.724,1236,4.688,1237,2.767,1238,4.508,1239,4.508,1240,2.767,1241,3.277,1242,3.277,1243,3.277,1244,3.824,1245,5.154,1246,3.824,1247,5.154,1248,3.635,1249,6.016,1250,3.807,1251,3.277,1252,3.277,1253,5.154,1254,5.154,1255,2.431,1256,2.431,1257,2.431,1258,3.277,1259,3.277,1260,3.277,1261,3.277,1262,3.345,1263,3.277,1264,3.277,1265,3.277,1266,3.277]],["title/modules/FeaturesModule.html",[519,1.114,1267,2.24]],["body/modules/FeaturesModule.html",[3,0.343,4,0.302,9,0.263,13,0.474,30,0.602,38,0.027,229,0.531,230,0.845,235,0.343,236,0.909,417,1.576,429,2.278,430,1.045,436,2.278,437,0.975,438,1.074,441,0.02,442,0.02,519,2.082,521,1.692,528,2.918,529,3.913,530,2.763,536,3.502,537,2.918,538,2.509,545,2.117,584,3.187,619,2.117,620,2.509,627,3.559,629,3.509,630,2.763,631,2.509,633,3.506,634,4.453,638,3.506,648,3.081,650,3.506,981,2.763,1267,4.528,1268,3.506,1269,3.506,1270,3.506,1271,3.886,1272,4.153,1273,4.893,1274,5.274,1275,5.274,1276,5.274,1277,2.763,1278,4.453]],["title/modules/FeaturesRoutingModule.html",[519,1.114,1271,2.034]],["body/modules/FeaturesRoutingModule.html",[2,2.051,3,0.387,4,0.341,9,0.296,30,0.649,38,0.027,72,1.908,229,0.525,230,0.954,235,0.387,236,1.025,429,1.659,430,1.179,436,1.659,437,1.1,438,1.246,441,0.022,442,0.022,447,1.448,521,1.908,528,3.145,537,2.592,545,2.388,646,3.782,647,2.388,655,3.956,657,3.697,658,3.475,981,3.117,1271,3.434,1273,3.956,1277,3.117,1278,4.799,1279,4.684,1280,3.956,1281,4.684,1282,4.684,1283,4.684,1284,4.684,1285,4.684]],["title/components/FooterComponent.html",[0,0.972,432,1.278]],["body/components/FooterComponent.html",[0,1.89,1,1.325,2,2.414,3,0.309,4,0.272,5,1.908,6,1.908,7,1.908,8,1.908,9,0.237,13,0.427,14,4.518,20,1.908,21,3.338,22,2.667,24,2.513,26,2.513,28,0.427,29,1.004,30,0.427,34,1.009,38,0.027,40,0.427,41,1.325,42,1.156,77,2.49,87,3.658,88,3.658,89,4.163,90,4.163,229,0.309,230,0.762,231,1.156,235,0.309,236,0.819,264,2.49,265,1.638,275,1.908,284,2.49,285,2.49,289,2.728,306,3.28,309,2.728,310,3.28,311,2.979,312,3.28,313,3.159,325,1.908,338,2.49,417,1.42,418,2.513,419,2.513,420,1.908,421,2.764,422,1.908,423,1.241,424,1.908,425,1.42,426,1.908,427,1.42,428,1.908,429,1.325,430,0.942,431,1.908,432,2.225,433,1.908,434,1.42,435,1.908,436,1.325,437,0.879,438,0.762,439,1.908,440,1.908,441,0.019,442,0.019,584,2.261,614,3.159,926,3.159,931,2.776,1010,4.163,1286,3.159,1287,6.547,1288,5.513,1289,4.93,1290,4.93,1291,4.93,1292,3.741,1293,4.93,1294,3.658,1295,4.93,1296,2.776,1297,3.741,1298,4.93,1299,3.159]],["title/components/HeaderComponent.html",[0,0.972,434,1.278]],["body/components/HeaderComponent.html",[0,1.833,1,1.217,2,2.039,3,0.284,4,0.25,5,1.751,6,1.751,7,1.751,8,1.751,9,0.217,13,0.392,20,1.751,21,3.281,22,2.621,24,2.374,26,2.374,28,0.392,29,0.948,30,0.392,34,1.256,38,0.027,40,0.392,41,1.65,42,1.439,160,3.455,229,0.385,230,0.699,231,1.062,235,0.284,236,0.752,264,3.515,265,2.479,266,2.549,270,2.549,275,2.374,276,2.286,278,2.901,279,2.549,284,2.286,285,2.286,286,1.751,289,1.901,291,3.455,306,3.098,309,1.901,310,2.286,311,2.076,324,2.549,325,1.751,333,1.901,336,2.549,344,2.162,351,2.549,358,2.901,362,3.932,371,2.549,383,3.515,386,2.549,396,2.901,417,1.304,418,2.374,419,2.374,420,1.751,421,2.671,422,1.751,423,1.172,424,1.751,425,1.304,426,1.751,427,1.304,428,1.751,429,1.217,430,0.865,431,1.751,432,1.304,433,1.751,434,2.15,435,1.751,436,1.217,437,0.807,438,0.699,439,1.751,440,1.751,441,0.018,442,0.018,458,0.752,519,1.136,564,3.932,567,2.286,568,2.901,584,2.076,765,3.932,788,4.46,790,3.455,791,3.932,844,2.901,913,2.901,931,2.549,957,2.901,1059,3.932,1075,2.286,1226,2.286,1294,3.455,1296,2.549,1299,2.901,1300,2.901,1301,5.918,1302,5.282,1303,4.656,1304,4.656,1305,3.435,1306,4.656,1307,5.663,1308,3.435,1309,3.435,1310,3.932,1311,3.435,1312,4.656,1313,2.901,1314,3.435,1315,3.435,1316,4.656,1317,4.656,1318,4.656,1319,3.435,1320,3.435,1321,3.435,1322,4.656,1323,3.435]],["title/injectables/IsLoadingService.html",[546,1.278,594,2.034]],["body/injectables/IsLoadingService.html",[3,0.352,4,0.31,9,0.27,13,0.486,28,0.486,29,1.091,31,1.35,33,2.389,34,1.582,37,1.149,38,0.027,39,1.866,40,0.486,41,1.899,42,2.001,229,0.443,230,0.868,235,0.352,236,0.933,423,1.073,441,0.021,442,0.021,447,1.657,460,1.317,461,1.317,478,1.866,479,1.548,526,2.695,546,2.035,547,2.575,550,3.977,569,3.599,570,3.162,575,1.866,590,4.351,594,3.239,601,4.351,659,4.952,680,5.467,852,2.529,881,2.529,1294,3.977,1324,5.197,1325,3.599,1326,5.361,1327,5.361,1328,5.361,1329,4.262,1330,4.262,1331,5.865,1332,5.361,1333,4.262,1334,4.262]],["title/interfaces/LatestTransmissionsResponseScema.html",[443,0.384,509,1.588]],["body/interfaces/LatestTransmissionsResponseScema.html",[3,0.315,4,0.278,9,0.241,13,0.57,28,0.436,29,1.017,30,0.674,38,0.027,40,0.757,158,1.728,229,0.315,235,0.506,441,0.019,442,0.019,443,0.75,444,1.449,445,1.18,446,2.112,447,1.544,448,2.307,449,1.352,450,1.652,451,1.801,458,1.479,463,1.946,468,1.842,470,1.98,478,1.671,479,1.442,480,1.842,481,2.438,482,1.946,483,2.307,484,1.896,485,2.546,486,0.961,487,3.704,488,2.112,489,2.307,490,2.307,491,2.438,492,1.946,493,1.352,494,2.307,495,2.307,496,1.352,497,2.307,498,2.307,499,0.961,500,2.307,501,1.801,502,2.307,503,2.307,504,3.018,505,2.546,506,2.356,507,3.018,508,2.356,509,2.356,510,3.011,511,3.569,512,3.569,513,3.569,514,2.307,515,2.307,516,2.307,517,2.307,518,2.307]],["title/interfaces/OninitResponseSchema.html",[443,0.384,1335,2.24]],["body/interfaces/OninitResponseSchema.html",[3,0.282,4,0.249,9,0.216,13,0.39,28,0.39,29,0.945,30,0.645,37,1.421,38,0.027,40,0.645,42,1.435,72,2.539,158,1.71,229,0.435,230,0.696,235,0.383,236,1.016,437,0.803,438,1.073,441,0.018,442,0.018,443,0.601,444,1.298,445,1.057,447,1.057,449,1.211,450,1.955,465,1.613,468,1.87,477,2.067,480,1.87,481,2.032,484,2.146,485,2.367,486,1.327,491,2.032,493,1.867,499,0.861,505,1.744,506,2.19,510,1.744,534,1.893,546,1.298,565,1.893,573,1.744,575,2.475,585,2.276,598,1.893,695,2.537,736,1.497,737,1.435,769,2.569,777,1.893,825,2.805,852,2.666,881,2.19,994,3.184,1009,2.537,1040,1.893,1085,2.067,1107,3.184,1110,3.184,1120,3.761,1128,3.184,1129,3.184,1130,3.184,1244,3.444,1246,2.537,1248,2.067,1255,2.537,1256,2.537,1257,2.537,1262,2.537,1335,3.089,1336,2.537,1337,3.91,1338,2.537,1339,4.45,1340,2.888,1341,2.888,1342,2.888,1343,2.888,1344,2.888,1345,2.888,1346,2.888,1347,2.888,1348,2.888,1349,2.888,1350,2.888,1351,3.444,1352,2.888,1353,2.888,1354,2.888,1355,2.888,1356,2.888,1357,2.888,1358,2.888,1359,2.888,1360,2.888,1361,2.888,1362,2.888,1363,2.888,1364,4.45,1365,2.888,1366,2.888,1367,2.888,1368,2.888,1369,2.888,1370,2.888,1371,2.888,1372,2.888,1373,2.888,1374,2.888,1375,2.888,1376,2.888,1377,2.888,1378,2.888]],["title/interfaces/RangeDataSchema.html",[443,0.384,501,1.588]],["body/interfaces/RangeDataSchema.html",[3,0.327,4,0.288,9,0.251,13,0.584,28,0.452,29,1.042,30,0.708,38,0.027,40,0.738,158,1.743,229,0.327,235,0.512,441,0.02,442,0.02,443,0.755,444,1.505,445,1.225,446,2.194,447,1.582,448,2.395,449,1.404,450,1.876,451,1.87,458,1.448,463,2.021,468,2.052,470,1.752,478,1.735,479,1.478,480,1.982,481,2.241,482,2.021,483,2.395,484,1.943,485,2.61,486,0.998,487,3.093,488,2.194,489,2.395,490,2.395,491,2.241,492,2.021,493,1.404,494,2.395,495,2.395,496,2.008,497,3.093,498,3.093,499,1.289,500,3.093,501,2.415,502,2.395,503,2.395,504,2.395,505,2.021,506,1.87,507,2.395,508,1.87,509,1.87,510,2.021,511,2.395,512,2.395,513,2.395,514,2.395,515,2.395,516,2.395,517,2.395,518,2.395,1379,5.669]],["title/components/RealTimeChartComponent.html",[0,0.972,436,1.193]],["body/components/RealTimeChartComponent.html",[0,1.256,1,0.516,2,1.061,3,0.12,4,0.106,5,0.743,6,0.743,7,0.743,8,0.743,9,0.092,13,0.414,18,1.236,19,1.342,20,0.743,21,2.558,22,2.043,24,1.236,26,1.236,28,0.166,29,0.739,30,0.643,31,0.61,32,2.194,33,0.987,34,1.682,37,1.493,38,0.027,39,1.363,40,0.703,41,1.995,42,1.74,43,1.465,65,1.479,68,2.682,72,2.256,74,2.047,88,2.31,109,2.31,110,1.081,112,1.613,114,0.969,125,2.415,156,2.31,158,0.393,173,0.969,179,1.799,229,0.3,230,0.297,231,1.916,232,0.638,233,1.882,235,0.12,236,0.681,237,1.799,265,1.061,275,1.851,280,1.613,281,1.061,283,0.987,286,1.236,325,1.851,338,0.969,344,1.634,417,1.53,418,1.236,419,1.236,420,0.743,421,2.053,422,0.743,423,1.263,424,0.743,425,0.553,426,0.743,427,0.553,428,0.743,429,0.516,430,0.367,431,0.743,432,0.553,433,0.743,434,0.553,435,0.743,436,1.428,437,1.215,438,1.393,439,0.743,440,0.743,441,0.009,442,0.009,445,0.45,449,0.516,450,1.03,451,0.687,458,1.01,460,1.426,461,1.426,468,1.659,480,0.482,484,0.92,486,1.337,493,0.859,496,0.516,534,1.723,562,2.415,565,0.806,573,0.743,575,2.116,598,2.009,609,1.081,612,1.613,728,1.143,729,2.055,730,0.987,732,1.712,733,1.712,734,1.712,735,1.712,737,1.122,739,0.743,740,0.987,756,1.799,767,1.799,769,1.342,770,1.799,777,0.806,780,1.799,807,1.799,852,1.902,875,1.799,877,1.081,881,1.902,982,1.081,983,2.047,984,2.629,985,2.047,989,2.047,990,2.047,992,2.047,994,3.578,996,2.31,998,3.065,999,1.799,1000,1.23,1004,1.613,1005,3.065,1029,1.799,1033,3.675,1048,3.675,1050,1.23,1052,2.629,1064,1.23,1065,1.23,1067,1.23,1068,1.23,1069,1.23,1070,1.23,1071,1.23,1075,1.613,1079,0.969,1082,0.969,1085,0.88,1088,1.23,1089,1.23,1090,1.23,1095,1.23,1096,1.23,1097,1.23,1107,1.465,1110,1.882,1128,1.882,1129,1.882,1130,1.882,1135,3.722,1171,3.839,1185,2.629,1186,3.065,1187,3.065,1189,1.23,1190,1.23,1191,1.23,1192,1.23,1194,1.23,1195,3.065,1196,2.629,1198,1.23,1201,1.23,1202,2.047,1203,2.047,1204,1.23,1213,2.047,1216,1.23,1218,1.23,1219,1.23,1220,2.047,1221,2.047,1226,0.969,1229,1.23,1230,1.23,1231,1.23,1250,1.23,1277,4.171,1280,1.23,1313,2.047,1380,5.294,1381,2.424,1382,2.424,1383,3.065,1384,2.047,1385,2.629,1386,2.047,1387,2.047,1388,2.047,1389,2.047,1390,1.456,1391,1.456,1392,1.456,1393,4.832,1394,2.424,1395,1.456,1396,1.456,1397,1.456,1398,2.424,1399,2.424,1400,2.424,1401,1.456,1402,2.424,1403,2.424,1404,2.424,1405,1.456,1406,1.456,1407,1.456,1408,1.456,1409,1.456,1410,1.456,1411,1.456,1412,1.456,1413,1.23,1414,1.456,1415,1.456,1416,2.424,1417,1.456,1418,1.456,1419,1.456,1420,1.456,1421,1.456,1422,1.456,1423,2.424,1424,1.456,1425,1.081,1426,1.456,1427,1.081,1428,1.456,1429,1.456,1430,1.456,1431,1.456,1432,1.456,1433,1.456,1434,1.456,1435,1.456,1436,1.456,1437,1.456,1438,1.456,1439,1.456,1440,1.456,1441,1.456,1442,1.456,1443,1.456,1444,1.456,1445,1.456,1446,1.456,1447,1.456,1448,1.456,1449,1.456,1450,1.456,1451,1.456,1452,1.456,1453,1.456,1454,1.456,1455,1.456,1456,1.456,1457,1.456,1458,1.456,1459,1.456,1460,1.456,1461,1.456,1462,1.456,1463,1.456,1464,1.456,1465,1.456,1466,1.456,1467,1.456,1468,2.424,1469,1.456,1470,1.456,1471,1.456,1472,1.23,1473,1.456,1474,1.456,1475,1.456,1476,1.456,1477,1.456,1478,1.456,1479,1.456,1480,1.456,1481,1.456,1482,1.456,1483,1.456,1484,1.456,1485,1.456,1486,1.456,1487,1.456,1488,1.456,1489,1.456,1490,1.456,1491,1.456,1492,1.456,1493,1.456,1494,1.456,1495,1.456,1496,1.456,1497,1.456,1498,2.424,1499,1.456,1500,1.456,1501,1.456,1502,1.456,1503,1.456,1504,1.456,1505,2.424,1506,1.456,1507,1.456,1508,1.456,1509,1.456,1510,1.456,1511,1.456,1512,1.456,1513,1.456,1514,1.456,1515,1.456,1516,1.456,1517,1.456,1518,1.456,1519,1.456,1520,1.456,1521,1.456,1522,1.456,1523,1.456,1524,1.456,1525,1.456,1526,1.456,1527,1.456,1528,1.456,1529,1.456]],["title/interfaces/RealTimeChartComponentInterface.html",[443,0.384,747,1.588]],["body/interfaces/RealTimeChartComponentInterface.html",[3,0.279,4,0.246,9,0.214,13,0.386,28,0.386,30,0.732,31,1.32,34,1.676,37,1.676,38,0.027,39,2.295,40,0.74,65,1.379,225,1.596,229,0.381,231,1.739,232,1.482,235,0.502,281,1.482,283,1.379,344,1.199,423,1.565,430,1.16,437,1.231,438,1.067,441,0.018,442,0.018,443,0.709,445,1.046,458,0.741,460,1.921,461,1.921,470,1.739,479,1.513,486,0.852,496,1.199,499,1.417,526,2.295,714,1.482,715,1.725,716,1.725,717,1.873,719,1.873,720,1.482,721,1.873,722,1.873,723,1.873,724,1.873,725,1.725,726,1.725,727,2.551,728,1.596,729,2.869,730,1.379,731,1.873,732,1.596,733,1.596,734,1.596,735,1.596,736,1.482,737,1.82,738,1.873,739,2.869,740,1.379,741,1.873,742,1.873,743,1.482,744,1.873,745,1.873,746,1.873,747,2.174,748,1.873,749,1.873,750,1.873,751,1.873,752,1.873,753,1.873,754,1.873,975,4.612,1383,3.892,1384,3.892,1385,3.892,1386,3.892,1387,3.892,1388,3.892,1389,3.892,1530,3.384,1531,3.384,1532,3.384,1533,3.384,1534,3.384,1535,3.384,1536,3.384,1537,3.384,1538,3.384,1539,3.384,1540,3.384,1541,3.384,1542,3.384,1543,3.384]],["title/injectables/RealTimeUseCases.html",[534,1.863,546,1.278]],["body/injectables/RealTimeUseCases.html",[3,0.24,4,0.212,9,0.184,13,0.332,19,2.296,28,0.332,30,0.696,31,1.045,33,1.186,34,1.422,37,1.562,38,0.027,40,0.636,42,1.282,72,2.428,158,1.717,229,0.399,230,0.593,235,0.343,236,1.058,423,1.327,437,0.974,438,1.263,441,0.016,442,0.016,443,0.474,444,1.836,447,0.9,449,1.713,450,1.843,458,1.153,460,1.629,461,1.629,465,2.281,468,2.016,470,1.282,477,2.507,480,1.744,481,2.308,484,1.105,485,2.841,486,0.733,491,2.308,493,1.031,499,1.045,505,1.484,506,2.281,510,1.484,534,2.296,546,1.105,547,1.759,565,1.611,573,1.484,575,2.308,585,2.761,598,2.296,695,2.16,736,1.274,737,1.722,769,3.084,777,1.611,825,2.507,852,2.486,881,1.957,994,3.748,1009,3.079,1029,3.588,1040,1.611,1085,1.759,1107,2.922,1110,2.922,1120,1.937,1128,2.922,1129,2.922,1130,2.922,1240,2.458,1244,4.134,1246,3.079,1248,2.922,1255,2.16,1256,2.16,1257,2.16,1262,2.16,1335,1.937,1336,4.134,1337,4.298,1338,2.16,1339,3.504,1340,2.458,1341,2.458,1342,4.083,1343,4.083,1344,4.083,1345,2.458,1346,2.458,1347,2.458,1348,2.458,1349,3.504,1350,3.504,1351,3.911,1352,3.504,1353,3.504,1354,3.504,1355,2.458,1356,2.458,1357,3.504,1358,3.504,1359,3.504,1360,2.458,1361,2.458,1362,2.458,1363,2.458,1364,4.083,1365,2.458,1366,2.458,1367,2.458,1368,2.458,1369,2.458,1370,2.458,1371,2.458,1372,2.458,1373,2.458,1374,2.458,1375,2.458,1376,2.458,1377,2.458,1378,2.458,1544,4.149,1545,4.149,1546,2.911,1547,2.911,1548,2.911,1549,2.911,1550,2.911,1551,2.911,1552,2.911]],["title/interfaces/SessionInfoSchema.html",[443,0.384,493,1.193]],["body/interfaces/SessionInfoSchema.html",[3,0.321,4,0.282,9,0.246,13,0.703,28,0.443,29,1.028,30,0.641,38,0.027,40,0.752,158,1.735,229,0.321,235,0.509,441,0.019,442,0.019,443,0.744,444,1.474,445,1.2,446,2.149,447,1.561,448,2.346,449,1.375,450,1.671,451,1.831,458,1.466,463,1.979,468,2.039,470,1.905,478,1.7,479,1.621,480,1.967,481,2.211,482,1.979,483,2.346,484,2.131,485,2.862,486,0.977,487,3.052,488,2.149,489,2.346,490,3.052,491,2.458,492,2.575,493,1.789,494,3.592,495,3.592,496,1.989,497,2.346,498,2.346,499,0.977,500,2.346,501,1.831,502,2.346,503,2.346,504,2.346,505,1.979,506,1.831,507,2.346,508,1.831,509,1.831,510,1.979,511,2.346,512,2.346,513,2.346,514,2.346,515,2.346,516,2.346,517,2.346,518,2.346]],["title/modules/SharedModule.html",[519,1.114,627,1.863]],["body/modules/SharedModule.html",[3,0.338,4,0.298,9,0.259,13,0.467,38,0.027,229,0.538,230,0.833,235,0.338,236,0.896,417,1.554,427,2.578,432,2.578,434,2.578,441,0.02,442,0.02,450,1.728,519,2.073,521,1.667,528,2.892,529,3.877,530,2.723,536,3.478,537,2.265,538,2.473,545,2.934,619,2.087,620,2.473,627,3.775,629,3.477,630,2.723,631,2.473,642,4.412,643,3.036,646,3.477,647,2.087,648,3.877,1248,3.157,1553,3.456,1554,3.456,1555,3.456,1556,4.093,1557,4.093,1558,4.093,1559,4.093]],["title/interfaces/chartBuilder.html",[443,0.384,740,1.371]],["body/interfaces/chartBuilder.html",[3,0.311,4,0.274,9,0.238,13,0.429,28,0.429,30,0.748,31,1.478,34,1.334,37,1.334,38,0.027,39,1.646,40,0.67,65,1.532,225,1.774,229,0.408,231,1.708,232,1.646,235,0.517,281,1.646,283,1.532,344,1.332,423,0.947,430,1.391,437,1.298,438,1.125,441,0.019,442,0.019,443,0.739,445,1.162,458,0.823,460,1.162,461,1.162,470,1.815,479,1.695,486,0.947,496,1.332,499,1.478,526,2.165,714,1.646,715,1.917,716,1.917,717,2.081,719,2.081,720,1.646,721,2.081,722,2.081,723,2.081,724,2.081,725,1.917,726,1.917,727,2.737,728,1.774,729,2.818,730,1.532,731,2.081,732,1.774,733,1.774,734,1.774,735,1.774,736,2.165,737,1.935,738,2.737,739,2.993,740,2.015,741,2.081,742,2.081,743,1.646,744,2.081,745,2.081,746,2.081,747,1.774,748,2.081,749,2.081,750,2.081,751,2.081,752,2.081,753,2.081,754,2.081,975,2.79,996,4.1,999,3.669,1560,3.76,1561,3.76,1562,3.76]],["title/interfaces/chartTitle.html",[443,0.384,720,1.474]],["body/interfaces/chartTitle.html",[3,0.317,4,0.279,9,0.243,13,0.438,28,0.438,29,1.02,30,0.732,31,0.966,38,0.027,40,0.732,65,1.563,225,1.81,229,0.414,231,1.829,232,1.68,235,0.52,281,1.68,283,1.563,286,2.845,289,3.089,333,3.089,344,1.775,430,1.262,437,1.177,438,1.02,441,0.019,442,0.019,443,0.732,445,1.186,458,1.343,470,1.829,479,1.709,486,0.966,496,1.359,499,1.405,526,2.194,714,1.68,715,1.956,716,1.956,717,2.123,719,2.123,720,2.194,721,2.123,722,2.123,723,2.123,724,2.123,725,1.956,726,1.956,727,3.275,728,1.81,729,2.845,730,1.563,731,2.123,732,1.81,733,1.81,734,1.81,735,1.81,736,1.68,737,1.829,738,2.123,739,2.845,740,1.563,741,2.123,742,2.123,743,1.68,744,2.123,745,2.123,746,2.123,747,1.81,748,2.123,749,2.123,750,2.123,751,2.123,752,2.123,753,2.123,754,2.123]],["title/coverage.html",[1563,3.878]],["body/coverage.html",[0,1.79,1,1.186,9,0.212,10,2.828,11,2.229,12,2.828,30,0.522,38,0.027,40,0.382,160,2.485,233,2.024,265,1.466,280,4.482,321,3.396,413,2.828,425,1.272,427,1.272,429,1.186,432,1.272,434,1.272,436,1.186,438,1.141,441,0.018,442,0.018,443,0.752,444,1.272,446,3.246,486,0.843,493,1.186,499,0.843,501,1.58,509,1.58,531,2.229,533,2.024,534,1.853,546,2.127,548,2.828,567,3.045,583,2.828,594,2.024,628,2.024,675,2.828,677,2.828,678,2.828,714,1.466,715,3.087,720,1.466,730,1.364,740,1.364,743,1.466,747,1.58,755,3.868,829,2.485,831,2.485,852,1.58,980,2.828,981,2.229,982,3.396,1037,4.954,1077,2.485,1078,2.485,1079,2.229,1080,2.485,1081,2.485,1082,2.229,1236,2.828,1237,2.828,1277,2.229,1286,2.828,1300,2.828,1324,2.828,1325,2.828,1335,2.229,1336,3.396,1337,3.396,1338,3.396,1380,2.828,1425,2.485,1427,2.485,1563,2.828,1564,3.349,1565,3.349,1566,3.349,1567,4.576,1568,4.576,1569,5.866,1570,3.349,1571,3.349,1572,3.349,1573,5.213,1574,5.213,1575,4.576,1576,4.576,1577,3.349,1578,3.349,1579,3.349,1580,3.349,1581,3.349,1582,3.349,1583,3.349,1584,6.672,1585,3.349,1586,3.349,1587,3.864,1588,4.576,1589,5.603,1590,3.349,1591,2.828,1592,3.349,1593,2.828,1594,2.828,1595,3.349,1596,4.849,1597,4.804,1598,2.828,1599,2.828,1600,3.349,1601,3.349]],["title/dependencies.html",[619,2.064,1602,2.375]],["body/dependencies.html",[38,0.027,230,0.927,441,0.021,442,0.021,478,1.993,530,3.029,619,2.321,620,2.751,636,4.716,637,3.716,643,3.378,647,2.321,756,3.378,825,2.751,826,3.378,1603,4.553,1604,6.73,1605,4.553,1606,4.553,1607,4.553,1608,4.553,1609,4.553,1610,4.553,1611,4.553,1612,4.553,1613,4.553,1614,4.553,1615,4.553,1616,4.553,1617,4.553,1618,4.553,1619,4.553,1620,4.553,1621,4.553,1622,4.553,1623,4.553,1624,5.585,1625,5.585,1626,4.553,1627,5.585,1628,4.553,1629,4.553,1630,4.553,1631,4.553,1632,4.553,1633,4.553,1634,4.553,1635,4.553,1636,4.553,1637,4.553,1638,4.553]],["title/miscellaneous/functions.html",[1639,1.871,1640,3.418]],["body/miscellaneous/functions.html",[28,0.408,30,0.748,37,1.29,38,0.026,40,0.615,41,2.187,42,1.949,43,3.961,65,1.949,225,1.687,231,1.478,233,3.258,265,1.566,286,2.439,333,1.979,344,1.267,423,1.634,430,1.204,437,1.124,438,0.974,441,0.018,442,0.018,458,1.351,460,2.026,461,2.005,468,1.183,470,1.908,479,1.033,484,1.358,499,1.449,508,2.543,612,2.38,660,3.02,714,1.566,716,1.823,720,1.566,725,2.439,726,2.439,728,2.543,737,1.779,769,2.983,881,1.687,1004,3.587,1007,2.653,1011,3.02,1040,1.979,1044,3.02,1077,3.55,1079,3.183,1080,3.55,1081,3.55,1082,3.183,1171,4,1226,2.38,1425,3.55,1427,3.55,1472,3.02,1596,2.653,1597,4,1598,4.552,1599,4.04,1639,2.38,1640,3.02,1641,5.535,1642,3.576,1643,5.756,1644,5.391,1645,3.576,1646,3.576,1647,3.576,1648,3.576,1649,3.576,1650,3.576,1651,3.576,1652,3.576,1653,3.576,1654,3.576,1655,3.576,1656,3.576,1657,3.576,1658,3.576,1659,3.576,1660,3.576,1661,3.576,1662,3.576,1663,3.576,1664,3.576,1665,3.576]],["title/index.html",[28,0.321,482,1.434,1666,2.375]],["body/index.html",[4,0.35,9,0.304,14,2.679,22,2.732,30,0.687,38,0.018,44,3.049,46,4.326,53,3.049,60,3.049,61,5.545,79,3.049,80,3.049,87,2.679,115,3.049,146,3.049,154,4.065,158,1.461,162,4.879,173,2.402,201,4.065,289,1.998,441,0.018,442,0.018,443,0.412,465,1.703,482,1.841,492,1.841,527,3.049,550,4.019,619,1.841,637,2.402,737,1.116,1004,3.604,1024,3.049,1040,2.664,1075,3.604,1135,2.679,1248,2.182,1310,3.049,1351,2.679,1587,3.049,1666,3.049,1667,5.417,1668,6.191,1669,2.679,1670,5.417,1671,3.61,1672,3.61,1673,3.61,1674,3.61,1675,3.61,1676,3.61,1677,3.61,1678,3.61,1679,3.61,1680,3.61,1681,3.61,1682,3.61,1683,3.61,1684,3.61,1685,4.815,1686,3.61,1687,4.815,1688,3.61,1689,3.61,1690,3.049,1691,3.61,1692,3.61,1693,3.61,1694,3.61,1695,3.61,1696,3.61,1697,4.815,1698,6.32,1699,3.61,1700,3.61,1701,5.417,1702,3.61,1703,4.815,1704,4.815,1705,4.815,1706,5.778,1707,3.61,1708,3.61,1709,4.815,1710,3.61,1711,3.61,1712,5.417,1713,4.815,1714,4.815,1715,3.61,1716,5.778,1717,3.61,1718,4.815,1719,4.815,1720,3.61,1721,3.61,1722,3.61,1723,3.61,1724,3.61,1725,4.815,1726,3.61,1727,3.61,1728,4.815,1729,4.815,1730,3.61,1731,3.61,1732,3.61,1733,3.61,1734,3.61,1735,4.815,1736,3.61,1737,4.065,1738,3.61,1739,3.61,1740,3.61,1741,3.61,1742,3.61,1743,5.417,1744,3.61,1745,3.61,1746,3.61,1747,3.61,1748,3.61]],["title/modules.html",[521,1.871]],["body/modules.html",[38,0.023,441,0.023,442,0.023,520,3.1,521,2.089,618,3.413,626,3.1,627,2.839,637,4.231,1049,5.369,1267,3.413,1271,3.1,1737,5.369,1749,6.358,1750,6.763,1751,6.358]],["title/overview.html",[1669,3.407]],["body/overview.html",[1,2.044,2,1.802,38,0.027,417,1.562,425,2.475,427,2.475,429,2.044,432,2.475,434,2.475,436,2.044,441,0.02,442,0.02,445,1.272,519,1.361,520,3.487,521,1.676,536,2.487,538,2.487,545,2.098,547,2.487,618,4.576,619,2.098,620,2.487,621,3.475,622,3.475,623,3.475,624,3.475,625,3.475,626,3.487,627,3.778,628,3.487,629,3.489,630,2.738,631,2.487,657,2.487,1267,4.469,1268,3.475,1269,3.475,1270,3.475,1271,3.487,1553,3.475,1554,3.475,1555,3.475,1591,3.475,1669,3.053,1752,4.115,1753,4.115,1754,4.115,1755,4.115]],["title/properties.html",[29,0.824,1602,2.375]],["body/properties.html",[29,1.104,38,0.025,441,0.024,442,0.024,1690,4.58,1756,5.424]],["title/routes.html",[657,2.775]],["body/routes.html",[38,0.024,441,0.024,442,0.024,657,3.301]],["title/miscellaneous/variables.html",[1639,1.871,1757,3.418]],["body/miscellaneous/variables.html",[28,0.497,30,0.497,38,0.027,40,0.743,41,2.098,42,1.83,72,2.212,77,3.614,158,1.174,349,4.586,421,2.053,441,0.021,442,0.021,447,1.345,479,1.256,480,1.44,508,2.053,562,2.896,567,4.126,601,3.229,755,3.229,826,4.03,828,4.586,829,4.393,831,4.393,881,2.053,1007,3.229,1020,3.675,1078,4.03,1296,3.229,1413,3.675,1593,3.675,1594,3.675,1596,3.229,1597,3.229,1639,2.896,1641,3.675,1757,3.675,1758,4.352,1759,4.352,1760,5.431,1761,5.431,1762,4.352,1763,4.352,1764,4.352,1765,4.352,1766,4.352,1767,4.352,1768,5.431,1769,4.352,1770,4.352,1771,4.352,1772,4.352,1773,5.431,1774,4.352,1775,5.431,1776,4.352,1777,4.352,1778,4.352,1779,4.352,1780,4.352,1781,4.352,1782,4.352]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":265,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.1",{"_index":301,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["0.11.4",{"_index":1638,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":318,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["0.2s",{"_index":939,"title":{},"body":{"components/ChartsComponent.html":{}}}],["0.35",{"_index":950,"title":{},"body":{"components/ChartsComponent.html":{}}}],["0.8em",{"_index":341,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["0/1",{"_index":1595,"title":{},"body":{"coverage.html":{}}}],["003147",{"_index":303,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["010f1d",{"_index":1323,"title":{},"body":{"components/HeaderComponent.html":{}}}],["02",{"_index":106,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["03a9f4",{"_index":360,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["080fe1",{"_index":384,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["081921",{"_index":372,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["0b043f",{"_index":963,"title":{},"body":{"components/ChartsComponent.html":{}}}],["1",{"_index":1226,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{}}}],["1))].station,start,end).topromise",{"_index":1266,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["1))]:dt.find((s:any)=>s.label==sensor",{"_index":1179,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["1.0.0",{"_index":1756,"title":{},"body":{"properties.html":{}}}],["1.10.0",{"_index":1622,"title":{},"body":{"dependencies.html":{}}}],["1.3.1",{"_index":1630,"title":{},"body":{"dependencies.html":{}}}],["1.4em",{"_index":339,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["1.5em",{"_index":332,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["1/1",{"_index":1584,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1590,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1574,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1589,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1576,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1588,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1592,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":1626,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":280,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{}}}],["1000",{"_index":612,"title":{},"body":{"components/AppComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{}}}],["1000px",{"_index":282,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["103",{"_index":953,"title":{},"body":{"components/ChartsComponent.html":{}}}],["105192",{"_index":917,"title":{},"body":{"components/ChartsComponent.html":{}}}],["10px",{"_index":352,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["12",{"_index":1591,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["12.2.0",{"_index":1604,"title":{},"body":{"dependencies.html":{}}}],["12.2.18",{"_index":1691,"title":{},"body":{"index.html":{}}}],["125699",{"_index":960,"title":{},"body":{"components/ChartsComponent.html":{}}}],["150px",{"_index":388,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["15px",{"_index":362,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{}}}],["16",{"_index":1587,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["1615a5186",{"_index":90,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{}}}],["168px",{"_index":944,"title":{},"body":{"components/ChartsComponent.html":{}}}],["16px",{"_index":386,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["17px",{"_index":949,"title":{},"body":{"components/ChartsComponent.html":{}}}],["18px",{"_index":359,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["19.0.3",{"_index":1632,"title":{},"body":{"dependencies.html":{}}}],["1976d2",{"_index":955,"title":{},"body":{"components/ChartsComponent.html":{}}}],["1fr",{"_index":295,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["1ms",{"_index":606,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":314,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["2",{"_index":1659,"title":{},"body":{"miscellaneous/functions.html":{}}}],["2.1.2",{"_index":1634,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1636,"title":{},"body":{"dependencies.html":{}}}],["2.30.1",{"_index":1620,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1613,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1585,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1566,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":1577,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":1570,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1575,"title":{},"body":{"coverage.html":{}}}],["20.5.0",{"_index":1608,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":368,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["200px",{"_index":292,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["2017",{"_index":222,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["2020",{"_index":213,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["2022",{"_index":166,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["2023",{"_index":143,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["207",{"_index":938,"title":{},"body":{"components/ChartsComponent.html":{}}}],["20px",{"_index":313,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{}}}],["21",{"_index":1578,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":924,"title":{},"body":{"components/ChartsComponent.html":{}}}],["25",{"_index":1569,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":317,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["27999299",{"_index":92,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["280df5",{"_index":935,"title":{},"body":{"components/ChartsComponent.html":{}}}],["2fr",{"_index":296,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["3.1.9",{"_index":1615,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":1619,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1586,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1568,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":903,"title":{},"body":{"components/ChartsComponent.html":{}}}],["300",{"_index":342,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["30px",{"_index":358,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{}}}],["32px",{"_index":920,"title":{},"body":{"components/ChartsComponent.html":{}}}],["33",{"_index":1573,"title":{},"body":{"coverage.html":{}}}],["34",{"_index":1580,"title":{},"body":{"coverage.html":{}}}],["350",{"_index":385,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["350px",{"_index":382,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["35px",{"_index":298,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["3px",{"_index":948,"title":{},"body":{"components/ChartsComponent.html":{}}}],["4",{"_index":1754,"title":{},"body":{"overview.html":{}}}],["4.18.2",{"_index":1617,"title":{},"body":{"dependencies.html":{}}}],["4.4.1",{"_index":1611,"title":{},"body":{"dependencies.html":{}}}],["4.5,4.5,4.5,2.5,4,3,3,3,2.5,4,3,3,2.8,3,2.3,4.5",{"_index":70,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["4/5",{"_index":1572,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":413,"title":{},"body":{"components/AboutCandidateComponent.html":{},"coverage.html":{}}}],["400",{"_index":364,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["40px",{"_index":304,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["42",{"_index":1582,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":409,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["4px",{"_index":933,"title":{},"body":{"components/ChartsComponent.html":{}}}],["5.3.2",{"_index":1609,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":321,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"coverage.html":{}}}],["500",{"_index":396,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{}}}],["50000",{"_index":1127,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["50px",{"_index":288,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["55px",{"_index":299,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["5px",{"_index":373,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["6",{"_index":1752,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":1633,"title":{},"body":{"dependencies.html":{}}}],["6/28",{"_index":1579,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":415,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["600",{"_index":337,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["600px",{"_index":401,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["60px",{"_index":957,"title":{},"body":{"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["6px",{"_index":371,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["7",{"_index":1753,"title":{},"body":{"overview.html":{}}}],["70",{"_index":411,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["72px",{"_index":968,"title":{},"body":{"components/ChartsComponent.html":{}}}],["75",{"_index":1567,"title":{},"body":{"coverage.html":{}}}],["767px",{"_index":965,"title":{},"body":{"components/ChartsComponent.html":{}}}],["8",{"_index":1755,"title":{},"body":{"overview.html":{}}}],["80",{"_index":1571,"title":{},"body":{"coverage.html":{}}}],["800px",{"_index":1321,"title":{},"body":{"components/HeaderComponent.html":{}}}],["82px",{"_index":919,"title":{},"body":{"components/ChartsComponent.html":{}}}],["848c90",{"_index":391,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["85",{"_index":403,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["888",{"_index":929,"title":{},"body":{"components/ChartsComponent.html":{}}}],["8px",{"_index":926,"title":{},"body":{"components/ChartsComponent.html":{},"components/FooterComponent.html":{}}}],["9",{"_index":937,"title":{},"body":{"components/ChartsComponent.html":{}}}],["9/21",{"_index":1583,"title":{},"body":{"coverage.html":{}}}],["9/26",{"_index":1581,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":405,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["980px",{"_index":921,"title":{},"body":{"components/ChartsComponent.html":{}}}],["a:hover",{"_index":959,"title":{},"body":{"components/ChartsComponent.html":{}}}],["a:visited",{"_index":958,"title":{},"body":{"components/ChartsComponent.html":{}}}],["abidjan",{"_index":211,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["about:last",{"_index":376,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["aboutcandidatecomponent",{"_index":1,"title":{"components/AboutCandidateComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["absolute",{"_index":278,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{}}}],["access",{"_index":1719,"title":{},"body":{"index.html":{}}}],["according",{"_index":1007,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["acording",{"_index":1657,"title":{},"body":{"miscellaneous/functions.html":{}}}],["activatedroute",{"_index":775,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["activeroute",{"_index":778,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["activeroute:activatedroute",{"_index":858,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["actual_component",{"_index":440,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["additional",{"_index":1738,"title":{},"body":{"index.html":{}}}],["address:\"ariana",{"_index":93,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["adw70",{"_index":416,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["air",{"_index":1677,"title":{},"body":{"index.html":{}}}],["airquino",{"_index":1674,"title":{},"body":{"index.html":{}}}],["aivaibled",{"_index":1297,"title":{},"body":{"components/FooterComponent.html":{}}}],["aleatoire",{"_index":1231,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["align",{"_index":309,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["allez",{"_index":872,"title":{},"body":{"components/ChartsComponent.html":{}}}],["allways",{"_index":1375,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["always",{"_index":1378,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["analyse",{"_index":121,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["anglais",{"_index":251,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["angular",{"_index":46,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1603,"title":{},"body":{"dependencies.html":{}}}],["angular/cli@12",{"_index":1711,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":530,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":566,"title":{},"body":{"injectables/ApiResourceService.html":{},"modules/AppModule.html":{},"interceptors/Aq54HttpInterceptor.html":{}}}],["angular/compiler",{"_index":1605,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":230,"title":{},"body":{"components/AboutCandidateComponent.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":643,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":636,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":647,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["animation",{"_index":716,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["animations:makeanimation",{"_index":1468,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["années",{"_index":107,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["any),config)}),100",{"_index":1457,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["api",{"_index":158,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.magentalab.it",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/api.interface",{"_index":719,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["api/api.resource.service",{"_index":532,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["api:apiinterface",{"_index":1257,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["apiinterface",{"_index":444,"title":{"interfaces/ApiInterface.html":{}},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/CurrentValuesSchema.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{}}}],["apiproxymodule",{"_index":520,"title":{"modules/ApiProxyModule.html":{}},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apiresourceservice",{"_index":531,"title":{"injectables/ApiResourceService.html":{}},"body":{"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"coverage.html":{}}}],["app",{"_index":22,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"index.html":{}}}],["app.component",{"_index":639,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":589,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":588,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":425,"title":{"components/AppComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appealing",{"_index":1680,"title":{},"body":{"index.html":{}}}],["application",{"_index":1685,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":618,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approfondie",{"_index":129,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["approutingmodule",{"_index":626,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aq54",{"_index":1075,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"index.html":{}}}],["aq54httpinterceptor",{"_index":628,"title":{"interceptors/Aq54HttpInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["aquitaine",{"_index":151,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["architecture",{"_index":56,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["args",{"_index":975,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{}}}],["array",{"_index":496,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["async",{"_index":994,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["auto",{"_index":329,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["aux",{"_index":137,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["available",{"_index":1749,"title":{},"body":{"modules.html":{}}}],["avec",{"_index":104,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["await",{"_index":1110,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["backend",{"_index":154,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["background",{"_index":285,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["backgroundcolor:getrandomrgb",{"_index":1185,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["bar",{"_index":1005,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["barbasedchart",{"_index":970,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{}}}],["barbasedchart(...args",{"_index":973,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{}}}],["barbasedchart(...args:any):void",{"_index":744,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["bas",{"_index":177,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["base",{"_index":155,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["baseapi",{"_index":551,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["baseapi:\"https://airqino",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baseapi:string=environment.baseapi",{"_index":571,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["based",{"_index":562,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/variables.html":{}}}],["before",{"_index":1683,"title":{},"body":{"index.html":{}}}],["beginatzero",{"_index":735,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["behaviorsubject",{"_index":1331,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["behaviorsubject(false",{"_index":1332,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["being",{"_index":1430,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["besoins",{"_index":138,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["between",{"_index":587,"title":{},"body":{"components/AppComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["bg:any",{"_index":73,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["black",{"_index":395,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["block",{"_index":357,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["blue",{"_index":1652,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boolean",{"_index":727,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["bootstrap",{"_index":620,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":269,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["bordercolor",{"_index":71,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["bordercolor:getrandomrgb",{"_index":1216,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["both",{"_index":736,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["bottom",{"_index":312,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{}}}],["box",{"_index":267,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["browse",{"_index":1750,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":637,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":641,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":640,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":635,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":961,"title":{},"body":{"components/ChartsComponent.html":{}}}],["build",{"_index":1004,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["builder",{"_index":971,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{}}}],["builder(...args",{"_index":976,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{}}}],["builder(...args:any):any",{"_index":746,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["builder(st",{"_index":1012,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["builder(st:string",{"_index":1106,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["builds",{"_index":1039,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["built",{"_index":1672,"title":{},"body":{"index.html":{}}}],["buttons",{"_index":879,"title":{},"body":{"components/ChartsComponent.html":{}}}],["c",{"_index":227,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["call",{"_index":450,"title":{},"body":{"interfaces/ApiInterface.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{}}}],["called",{"_index":1014,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["calling",{"_index":490,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["calls",{"_index":481,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["cancel",{"_index":880,"title":{},"body":{"components/ChartsComponent.html":{}}}],["candidate",{"_index":23,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate'},{'name",{"_index":424,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["candidate.component",{"_index":649,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["candidate.component.html",{"_index":27,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate.component.scss",{"_index":25,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate.component.ts",{"_index":12,"title":{},"body":{"components/AboutCandidateComponent.html":{},"coverage.html":{}}}],["candidate.component.ts:127",{"_index":35,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate.component.ts:130",{"_index":36,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate.component.ts:14",{"_index":228,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate.component.ts:88",{"_index":76,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate/about",{"_index":11,"title":{},"body":{"components/AboutCandidateComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["canupdate",{"_index":1544,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["canupdate(sessionid",{"_index":1547,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["canupdate(sessionid:number):promise",{"_index":1360,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["capteur",{"_index":877,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["capteurs",{"_index":875,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["capteurs(${d.unit",{"_index":1200,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["capteurs(${d.unit})`,getrandomrgb",{"_index":1232,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["card",{"_index":927,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card):hover",{"_index":946,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card.card",{"_index":942,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card.card.highlight",{"_index":956,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card.highlight",{"_index":954,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card:not(.highlight",{"_index":945,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card:not(:last",{"_index":941,"title":{},"body":{"components/ChartsComponent.html":{}}}],["case",{"_index":1643,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cases.ts",{"_index":1338,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["cases.ts:20",{"_index":1546,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["cases.ts:33",{"_index":1550,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["cases.ts:51",{"_index":1552,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["cases.ts:65",{"_index":1548,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["catch(err:any",{"_index":1128,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["catcherror((error:any",{"_index":710,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["catcherror,finalize",{"_index":699,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["caurrent",{"_index":1369,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["cd",{"_index":1703,"title":{},"body":{"index.html":{}}}],["center",{"_index":311,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["centres",{"_index":261,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["challenge",{"_index":1701,"title":{},"body":{"index.html":{}}}],["change",{"_index":1009,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["changechartbarvisoption",{"_index":995,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["changechartbarvisoption(item",{"_index":1018,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["changechartbarvisoption(item:any",{"_index":1168,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["changed",{"_index":800,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changer",{"_index":873,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changerange",{"_index":761,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changerange(station",{"_index":796,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changerange(station:string='',message",{"_index":885,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changes",{"_index":1731,"title":{},"body":{"index.html":{}}}],["changestation",{"_index":762,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changestation(ev",{"_index":801,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changestation(ev:any",{"_index":864,"title":{},"body":{"components/ChartsComponent.html":{}}}],["charbarp",{"_index":915,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart",{"_index":231,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["chart',{data:this.data,options",{"_index":1447,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart'},{'name",{"_index":431,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart('chart',config):null",{"_index":1224,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart('real",{"_index":1446,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart('sc',scatterconfig",{"_index":1235,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart((document.getelementbyid(this.scatters[sc",{"_index":1456,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart(this.times[index],config",{"_index":1528,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component",{"_index":1278,"title":{},"body":{"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{}}}],["chart.component.html",{"_index":985,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.scss",{"_index":984,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts",{"_index":982,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{}}}],["chart.component.ts:100",{"_index":1396,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:118",{"_index":1026,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:127",{"_index":1022,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:13",{"_index":1001,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:149",{"_index":1415,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:168",{"_index":1019,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:17",{"_index":1390,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:178",{"_index":1031,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:190",{"_index":1046,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:209",{"_index":1409,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:22",{"_index":1060,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:23",{"_index":1066,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:24",{"_index":1058,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:240",{"_index":1405,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:249",{"_index":1002,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:25",{"_index":1397,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:253",{"_index":1391,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:275",{"_index":1411,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:296",{"_index":1418,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:299",{"_index":1032,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:32",{"_index":1422,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:33",{"_index":1421,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:34",{"_index":1067,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:341",{"_index":1407,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:35",{"_index":1074,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:36",{"_index":1065,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:37",{"_index":1071,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:38",{"_index":1070,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:39",{"_index":1068,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:40",{"_index":1069,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:41",{"_index":1064,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:42",{"_index":1424,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:43",{"_index":1420,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:45",{"_index":1076,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:46",{"_index":1061,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:57",{"_index":1419,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:58",{"_index":1050,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:59",{"_index":1072,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:60",{"_index":1073,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:62",{"_index":1028,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:64",{"_index":1401,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:77",{"_index":1027,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:84",{"_index":1392,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:87",{"_index":1013,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.config.data.datasets.find((f:any)=>dd.label===f.label",{"_index":1511,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.config.data.datasets.foreach((dt:any",{"_index":1464,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.config.options",{"_index":1467,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.config.options.plugins=config.options.plugins",{"_index":1507,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.config.options.scales.x.max=dt[0].time",{"_index":1508,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.js",{"_index":1610,"title":{},"body":{"dependencies.html":{}}}],["chart.js/auto",{"_index":232,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["chart.update",{"_index":1475,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart/diferred",{"_index":981,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"coverage.html":{}}}],["chart/real",{"_index":1277,"title":{},"body":{"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{}}}],["chart:chart|any",{"_index":1096,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart='real",{"_index":841,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chartanimation",{"_index":714,"title":{"interfaces/ChartAnimation.html":{}},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["chartbar",{"_index":728,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["chartbardatainterface",{"_index":730,"title":{"interfaces/ChartBarDataInterface.html":{}},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{}}}],["chartbardatasets",{"_index":1425,"title":{},"body":{"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["chartbardatasets(stationdata",{"_index":1642,"title":{},"body":{"miscellaneous/functions.html":{}}}],["chartbarddatasets",{"_index":1077,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["chartbarddatasets(stationdata",{"_index":1645,"title":{},"body":{"miscellaneous/functions.html":{}}}],["chartbarvis",{"_index":766,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chartbarvis:any=null",{"_index":847,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chartbarvischange",{"_index":772,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chartbarvisualisation",{"_index":986,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chartbuilder",{"_index":740,"title":{"interfaces/chartBuilder.html":{}},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{}}}],["chartdata",{"_index":996,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/chartBuilder.html":{}}}],["chartdata():currentvaluesschema[]|any",{"_index":741,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["chartdata(data",{"_index":1021,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chartdata(data:any",{"_index":1132,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chartpagetitle",{"_index":987,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chartpagetitle='visualisation",{"_index":1087,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["charts",{"_index":756,"title":{},"body":{"components/ChartsComponent.html":{},"components/RealTimeChartComponent.html":{},"dependencies.html":{}}}],["charts'},{'name",{"_index":428,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["charts.component.html",{"_index":758,"title":{},"body":{"components/ChartsComponent.html":{}}}],["charts.component.scss",{"_index":757,"title":{},"body":{"components/ChartsComponent.html":{}}}],["charts/charts.component",{"_index":1558,"title":{},"body":{"modules/SharedModule.html":{}}}],["chartscomponent",{"_index":427,"title":{"components/ChartsComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["charttitle",{"_index":720,"title":{"interfaces/chartTitle.html":{}},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["chatbarvischange",{"_index":851,"title":{},"body":{"components/ChartsComponent.html":{}}}],["child",{"_index":377,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["child(2",{"_index":366,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["choice",{"_index":1693,"title":{},"body":{"index.html":{}}}],["cirrent",{"_index":483,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["class",{"_index":236,"title":{},"body":{"components/AboutCandidateComponent.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"modules/SharedModule.html":{}}}],["clean",{"_index":55,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["clear",{"_index":1398,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["clearinterval(this.time",{"_index":1434,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["clearinterval(this.timer",{"_index":1131,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["cleartimer",{"_index":997,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["cli",{"_index":1707,"title":{},"body":{"index.html":{}}}],["clients",{"_index":140,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["clone",{"_index":1697,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":58,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["cluster_appmodule",{"_index":621,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":623,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":625,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":624,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":622,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_featuresmodule",{"_index":1268,"title":{},"body":{"modules/FeaturesModule.html":{},"overview.html":{}}}],["cluster_featuresmodule_declarations",{"_index":1270,"title":{},"body":{"modules/FeaturesModule.html":{},"overview.html":{}}}],["cluster_featuresmodule_imports",{"_index":1269,"title":{},"body":{"modules/FeaturesModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1553,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1555,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1554,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cnv",{"_index":1490,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["code",{"_index":162,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["collaboration",{"_index":124,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["color",{"_index":286,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["color:string",{"_index":723,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["column",{"_index":308,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["columns",{"_index":294,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["common",{"_index":692,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["commonmodule",{"_index":529,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{}}}],["company:\"aladin",{"_index":168,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["company:\"laboratoire",{"_index":184,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["company:\"seewatch",{"_index":148,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["compare",{"_index":1368,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["compenent",{"_index":1313,"title":{},"body":{"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["compenents",{"_index":738,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["competence",{"_index":69,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["competences",{"_index":260,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["complexes",{"_index":123,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["component",{"_index":0,"title":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{}}}],["component:aboutcandidatecomponent",{"_index":668,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:diferreddatachartcomponent",{"_index":1281,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["component:realtimechartcomponent",{"_index":1283,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["component_template",{"_index":422,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["componentis",{"_index":1402,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"overview.html":{}}}],["compose",{"_index":1668,"title":{},"body":{"index.html":{}}}],["compose.yml",{"_index":1720,"title":{},"body":{"index.html":{}}}],["compétences",{"_index":118,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["conception",{"_index":113,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["config",{"_index":1171,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{}}}],["config.data.datasets.foreach((dd:any",{"_index":1510,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["config:any",{"_index":1213,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["configuration",{"_index":527,"title":{},"body":{"modules/ApiProxyModule.html":{},"index.html":{}}}],["configurations",{"_index":1671,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":882,"title":{},"body":{"components/ChartsComponent.html":{}}}],["considered",{"_index":1275,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["console.log(chart.config.data,data",{"_index":1463,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["console.log(error",{"_index":711,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["console.log(item",{"_index":1169,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["console.log(this.timedata,this.chart",{"_index":1172,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["const",{"_index":72,"title":{},"body":{"components/AboutCandidateComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesRoutingModule.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/AboutCandidateComponent.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["constructor(@inject('api",{"_index":1256,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["constructor(activeroute",{"_index":774,"title":{},"body":{"components/ChartsComponent.html":{}}}],["constructor(api",{"_index":1240,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"injectables/RealTimeUseCases.html":{}}}],["constructor(http",{"_index":552,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["constructor(isloading",{"_index":593,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(loader",{"_index":682,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["constructor(private",{"_index":572,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/ChartsComponent.html":{}}}],["constructor(public",{"_index":703,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["constructor(usecases",{"_index":1000,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["contact",{"_index":1740,"title":{},"body":{"index.html":{}}}],["contactinfo",{"_index":343,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["contactinfo.education",{"_index":361,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["contactinfo.language",{"_index":369,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["contacts",{"_index":240,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["container",{"_index":277,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["containers",{"_index":1714,"title":{},"body":{"index.html":{}}}],["contains",{"_index":1310,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["content",{"_index":390,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["core",{"_index":1428,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["correlation",{"_index":1041,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["corresponding",{"_index":664,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cors",{"_index":1612,"title":{},"body":{"dependencies.html":{}}}],["cover",{"_index":327,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["coverage",{"_index":1563,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cssws45",{"_index":408,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["csv",{"_index":1628,"title":{},"body":{"dependencies.html":{}}}],["current",{"_index":1343,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["currentitem",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentvaluesschema",{"_index":486,"title":{"interfaces/CurrentValuesSchema.html":{}},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{}}}],["cursor",{"_index":353,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["custom_elements_schema",{"_index":634,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{}}}],["cv",{"_index":1318,"title":{},"body":{"components/HeaderComponent.html":{}}}],["d",{"_index":1135,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"index.html":{}}}],["d'information",{"_index":208,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["d'un",{"_index":1191,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["d.foreach(item",{"_index":1479,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["d.station",{"_index":1525,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["d.unit",{"_index":1197,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["d.values.map((item:any",{"_index":1523,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["d=!sensor?dt[math.floor(math.random()*(dt.length",{"_index":1178,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["d=data[0].datasets.find((item:any)=>item.label===dt.label",{"_index":1465,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["d=dt[math.floor(math.random()*(dt.length",{"_index":1225,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["d?dt.data=dt.data.concat(d.data):null",{"_index":1466,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["dans",{"_index":109,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["data",{"_index":30,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"components/AppComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data,label:item[0",{"_index":1184,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["data.find((d:any)=>d.station==item.label)?item.data=data.find((d:any)=>d.station==item.label)?.data:this.chart.config.data.datasets.splice(index,1",{"_index":1492,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data.foreach((d:any,index:number",{"_index":1519,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data.length?data=this.scatterdata(d,4):null",{"_index":1454,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data.map((item:any)=>({...item,values:object.entries(item.values).map(e=>e[1",{"_index":1500,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data354",{"_index":1705,"title":{},"body":{"index.html":{}}}],["data354.git",{"_index":1702,"title":{},"body":{"index.html":{}}}],["data:any",{"_index":237,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["data:any=stationdata.map(item=>({time:item.timestamp,station:item.station_name,values:groupby(item.values,(v:any)=>v.unit",{"_index":1498,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data:chartbardatainterface|any",{"_index":1095,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["data:diffrange?data.monthdata:data.daydata",{"_index":1215,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["data=data.map((item:any)=>({...item,values:object.entries(item.values).map(e=>e[1",{"_index":1518,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data[0]?.station",{"_index":1469,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data[0]?.unit",{"_index":1470,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["database",{"_index":1729,"title":{},"body":{"index.html":{}}}],["dataset",{"_index":1664,"title":{},"body":{"miscellaneous/functions.html":{}}}],["datasets",{"_index":65,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["datasets:object.entries(d.dayval).map((item:any",{"_index":1182,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["datasets:this.timedata.filter((f:any)=>f.gunit).map((data:any",{"_index":1214,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["datasets:values.map(s=>({data:[{x:selected.value,y:s.value}],label:`${s.sensor}=f(${selected.sensor",{"_index":1485,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["date",{"_index":822,"title":{},"body":{"components/ChartsComponent.html":{}}}],["datetime",{"_index":1364,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["david",{"_index":87,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{},"index.html":{}}}],["day",{"_index":823,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd",{"_index":817,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["dd')!=moment().subtract(1,'days').format('yyyy",{"_index":868,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd')!=this.today",{"_index":870,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd');this.start=moment(this.start).subtract(math.abs(diff),'days').format('yyyy",{"_index":889,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd')||moment(this.start).format('yyyy",{"_index":869,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd')}&&end=${moment(this.end).format('yyyy",{"_index":893,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd')}`:location.href=`${'/visualisation/diferred?station'}=${this.selected}&&start=${moment(this.start).format('yyyy",{"_index":894,"title":{},"body":{"components/ChartsComponent.html":{}}}],["de",{"_index":68,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["decide",{"_index":693,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["decided",{"_index":1377,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["declarations",{"_index":536,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["declare",{"_index":828,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["declared",{"_index":789,"title":{},"body":{"components/ChartsComponent.html":{}}}],["decoration",{"_index":913,"title":{},"body":{"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["default",{"_index":41,"title":{},"body":{"components/AboutCandidateComponent.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":34,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{}}}],["defines",{"_index":1721,"title":{},"body":{"index.html":{}}}],["degree:\"baccalauréat",{"_index":223,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["degree:\"licence",{"_index":214,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["degree:\"master",{"_index":207,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["dependencies",{"_index":619,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["des",{"_index":125,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["descriptioon",{"_index":153,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["designed",{"_index":1675,"title":{},"body":{"index.html":{}}}],["destroyed",{"_index":1400,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["details",{"_index":1748,"title":{},"body":{"index.html":{}}}],["detected",{"_index":1349,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["deux",{"_index":105,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["developer",{"_index":147,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["development",{"_index":60,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["difered",{"_index":498,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["diferedcomponentinterface",{"_index":743,"title":{"interfaces/DiferedComponentInterface.html":{}},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{}}}],["diferred",{"_index":430,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["diferreddatachartcomponent",{"_index":429,"title":{"components/DiferredDataChartComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["diferredmodeusecases",{"_index":533,"title":{"injectables/DiferredModeUsecases.html":{}},"body":{"modules/ApiProxyModule.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"coverage.html":{}}}],["diff",{"_index":886,"title":{},"body":{"components/ChartsComponent.html":{}}}],["different",{"_index":449,"title":{},"body":{"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["diffrange=moment(this.ranges.end).diff(moment(this.ranges.start),'days')>=30",{"_index":1209,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["diffrange?x0=`${starttime[2]}/${starttime[1]}`:null",{"_index":1212,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["diffrent",{"_index":1423,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["diff{this.end=moment(this.end).add(math.abs(diff),'days').format('yyyy",{"_index":888,"title":{},"body":{"components/ChartsComponent.html":{}}}],["différée",{"_index":1059,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{}}}],["direction",{"_index":307,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["directive",{"_index":420,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["directives",{"_index":439,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["directory",{"_index":1733,"title":{},"body":{"index.html":{}}}],["disbale",{"_index":1372,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["display",{"_index":289,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/chartTitle.html":{},"index.html":{}}}],["display:boolean",{"_index":721,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["display:true",{"_index":1473,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["distribution",{"_index":1006,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["div",{"_index":374,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["django",{"_index":49,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["docker",{"_index":61,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["docs",{"_index":1316,"title":{},"body":{"components/HeaderComponent.html":{}}}],["docsurl:\"http://localhost:8080/docs",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":160,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{},"coverage.html":{}}}],["docurl",{"_index":1304,"title":{},"body":{"components/HeaderComponent.html":{}}}],["docurl=environment.docsurl",{"_index":1315,"title":{},"body":{"components/HeaderComponent.html":{}}}],["doing",{"_index":1352,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["doit",{"_index":900,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["domaine",{"_index":67,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["données",{"_index":156,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["donnés",{"_index":1190,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["dri",{"_index":89,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{}}}],["dt",{"_index":1176,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["dt:any",{"_index":1499,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["dt=chartbarddatasets(d",{"_index":1137,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["dt[0].station",{"_index":1506,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["dt[0].values.map((item:any",{"_index":1503,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["dts.push({data:{y:yd.ydata[key][id].y,x:xd.y},label:`${yd.label}=f(${item.label",{"_index":1161,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["dts:any",{"_index":1157,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["du",{"_index":161,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["duration",{"_index":1650,"title":{},"body":{"miscellaneous/functions.html":{}}}],["duration:number",{"_index":724,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["dynamic",{"_index":1606,"title":{},"body":{"dependencies.html":{}}}],["début",{"_index":908,"title":{},"body":{"components/ChartsComponent.html":{}}}],["développement",{"_index":111,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["d’architectures",{"_index":176,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["d’intérêts",{"_index":262,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["d’un",{"_index":191,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["e.g",{"_index":1694,"title":{},"body":{"index.html":{}}}],["each",{"_index":661,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ease",{"_index":940,"title":{},"body":{"components/ChartsComponent.html":{}}}],["easing",{"_index":725,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["ed",{"_index":274,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["editor",{"_index":1692,"title":{},"body":{"index.html":{}}}],["education",{"_index":246,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["educations",{"_index":203,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["eee",{"_index":934,"title":{},"body":{"components/ChartsComponent.html":{}}}],["efficaces",{"_index":134,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["ejs",{"_index":1614,"title":{},"body":{"dependencies.html":{}}}],["el",{"_index":259,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["element",{"_index":419,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["email1:\"kouame.ndri1998@gmail.com",{"_index":84,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["email2:\"kouame.ndri@supcom.tn",{"_index":85,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["email:\"kouame.ndri1998@gmail.com",{"_index":1290,"title":{},"body":{"components/FooterComponent.html":{}}}],["en",{"_index":101,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["enable",{"_index":695,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["enabled',preloadingstrategy:preloadallmodules",{"_index":674,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":466,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{}}}],["end:moment().format('yyyy",{"_index":1063,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["end:string=moment().format('yyyy",{"_index":856,"title":{},"body":{"components/ChartsComponent.html":{}}}],["end?this.end=end:null",{"_index":862,"title":{},"body":{"components/ChartsComponent.html":{}}}],["endpoint",{"_index":563,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["endpoints",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["engineer",{"_index":82,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["englishw85",{"_index":402,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["entre",{"_index":1189,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["entries",{"_index":1371,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["environment",{"_index":567,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.baseapi",{"_index":561,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["environment.docsurl",{"_index":1308,"title":{},"body":{"components/HeaderComponent.html":{}}}],["error(err.message",{"_index":1130,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["et",{"_index":114,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["etat",{"_index":187,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["ev",{"_index":804,"title":{},"body":{"components/ChartsComponent.html":{}}}],["ev?.target.value",{"_index":865,"title":{},"body":{"components/ChartsComponent.html":{}}}],["event",{"_index":811,"title":{},"body":{"components/ChartsComponent.html":{}}}],["eventemitter",{"_index":793,"title":{},"body":{"components/ChartsComponent.html":{}}}],["example",{"_index":1698,"title":{},"body":{"index.html":{}}}],["exceder",{"_index":902,"title":{},"body":{"components/ChartsComponent.html":{}}}],["exected",{"_index":806,"title":{},"body":{"components/ChartsComponent.html":{}}}],["execute",{"_index":1238,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["execute(start",{"_index":1242,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["execute(start:string,end:string,projectname:string",{"_index":1263,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["executed",{"_index":597,"title":{},"body":{"components/AppComponent.html":{},"components/ChartsComponent.html":{}}}],["experience",{"_index":141,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["export",{"_index":235,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["exports",{"_index":545,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["express",{"_index":1616,"title":{},"body":{"dependencies.html":{}}}],["expérience",{"_index":128,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["extended",{"_index":1631,"title":{},"body":{"dependencies.html":{}}}],["f0f0f0",{"_index":392,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["fa",{"_index":397,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["factorisation",{"_index":195,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["false",{"_index":601,"title":{},"body":{"components/AppComponent.html":{},"injectables/IsLoadingService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":271,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["façon",{"_index":1230,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["features",{"_index":1273,"title":{},"body":{"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{}}}],["featuresmodule",{"_index":1267,"title":{"modules/FeaturesModule.html":{}},"body":{"modules/FeaturesModule.html":{},"modules.html":{},"overview.html":{}}}],["featuresroutingmodule",{"_index":1271,"title":{"modules/FeaturesRoutingModule.html":{}},"body":{"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["fetch",{"_index":1676,"title":{},"body":{"index.html":{}}}],["fetching",{"_index":1244,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["fff",{"_index":287,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"index.html":{}}}],["fill",{"_index":928,"title":{},"body":{"components/ChartsComponent.html":{}}}],["fill:false",{"_index":1218,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["fin",{"_index":909,"title":{},"body":{"components/ChartsComponent.html":{}}}],["finalize",{"_index":708,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["firts",{"_index":1404,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["fit",{"_index":326,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["fixed",{"_index":614,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["flask",{"_index":50,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["flex",{"_index":306,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["following",{"_index":1687,"title":{},"body":{"index.html":{}}}],["font",{"_index":270,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["football",{"_index":96,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["footer",{"_index":1287,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":433,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["footer.component.html",{"_index":1289,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1288,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":1559,"title":{},"body":{"modules/SharedModule.html":{}}}],["footercomponent",{"_index":432,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["for(let",{"_index":74,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["formsmodule",{"_index":642,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["fortes",{"_index":117,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["france",{"_index":152,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["français",{"_index":252,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["frenchw100",{"_index":406,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["fron",{"_index":691,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["function",{"_index":1597,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1640,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":1710,"title":{},"body":{"index.html":{}}}],["gather",{"_index":448,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["generate",{"_index":1646,"title":{},"body":{"miscellaneous/functions.html":{}}}],["genie",{"_index":209,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["gestion",{"_index":170,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["getcurrentvalues",{"_index":452,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getcurrentvalues(stationname",{"_index":457,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getcurrentvalues(stationname:string):observable",{"_index":514,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["gethourlyavg",{"_index":453,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["gethourlyavg(station",{"_index":464,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["gethourlyavg(station:string,start:string,end:string",{"_index":577,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["gethourlyavg(station:string,start:string,end:string):observable",{"_index":517,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["getkey",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getkey(currentitem",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getlatesttransmissionstatus",{"_index":454,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getlatesttransmissionstatus(stationid",{"_index":469,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getlatesttransmissionstatus(stationid:number):observable",{"_index":518,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["getrandomrgb",{"_index":233,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getrange",{"_index":455,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getrange(station",{"_index":473,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getrange(station:string,start:string,end:string",{"_index":581,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["getrange(station:string,start:string,end:string):observable",{"_index":516,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["getsessioninfo",{"_index":456,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getsessioninfo(projectname",{"_index":475,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getsessioninfo(projectname:string):observable",{"_index":515,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["getting",{"_index":482,"title":{"index.html":{}},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"index.html":{}}}],["git",{"_index":1699,"title":{},"body":{"index.html":{}}}],["give",{"_index":1358,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["given",{"_index":508,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["globally",{"_index":1708,"title":{},"body":{"index.html":{}}}],["gp",{"_index":1144,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["gp?gp.values.filter((v:any)=>v.label!=item.label",{"_index":1149,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["gp?gp.values.find((v:any)=>v.label===item.label):null",{"_index":1147,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["grab",{"_index":1662,"title":{},"body":{"miscellaneous/functions.html":{}}}],["graph",{"_index":1049,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"modules.html":{}}}],["graphs",{"_index":1025,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["grid",{"_index":290,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["group",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group=item.group.find((f:any)=>f.unit===item.unit&&!units.find(u=>u==f.unit",{"_index":1143,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["group?.values.foreach((v:any",{"_index":1164,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["groupby",{"_index":1078,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["groupby(ydata,(g:any)=>g.label",{"_index":1152,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["grp",{"_index":1151,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["génie",{"_index":102,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["h2",{"_index":330,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["h4",{"_index":367,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["h4:nth",{"_index":365,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["h5",{"_index":363,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["handle",{"_index":1023,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["handles",{"_index":585,"title":{},"body":{"components/AppComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["header",{"_index":1301,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":435,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["header.component.html",{"_index":1303,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1302,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":1557,"title":{},"body":{"modules/SharedModule.html":{}}}],["headercomponent",{"_index":434,"title":{"components/HeaderComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":284,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["helper",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helps",{"_index":1353,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["here",{"_index":447,"title":{},"body":{"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesRoutingModule.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"miscellaneous/variables.html":{}}}],["hidden",{"_index":323,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["hobbies",{"_index":95,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["html",{"_index":418,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["htmlws30",{"_index":407,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["http",{"_index":555,"title":{},"body":{"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{}}}],["http://localhost:8080",{"_index":1718,"title":{},"body":{"index.html":{}}}],["http:httpclient",{"_index":574,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["http_interceptors",{"_index":644,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":553,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["httpclientmodule",{"_index":645,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":697,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["httphandler",{"_index":687,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["httpinterceptor",{"_index":690,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["httprequest",{"_index":685,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["https://github.com/ndriariel/technical",{"_index":1700,"title":{},"body":{"index.html":{}}}],["i=0;i",{"_index":75,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["i=0;iu.label===s.station).foreach((item:any,index:number",{"_index":1491,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["icon",{"_index":355,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["icon:'error",{"_index":895,"title":{},"body":{"components/ChartsComponent.html":{}}}],["icon:'warning",{"_index":878,"title":{},"body":{"components/ChartsComponent.html":{}}}],["icons",{"_index":923,"title":{},"body":{"components/ChartsComponent.html":{}}}],["icons:not(:last",{"_index":925,"title":{},"body":{"components/ChartsComponent.html":{}}}],["identifier",{"_index":1564,"title":{},"body":{"coverage.html":{}}}],["if(d",{"_index":1180,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["if(data.length",{"_index":1461,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["if(diff",{"_index":890,"title":{},"body":{"components/ChartsComponent.html":{}}}],["if(item",{"_index":1170,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["if(moment(this.end).format('yyyy",{"_index":867,"title":{},"body":{"components/ChartsComponent.html":{}}}],["if(request.url.includes('getrange')||request.url.includes('getsessioninfo",{"_index":705,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["if(resp",{"_index":891,"title":{},"body":{"components/ChartsComponent.html":{}}}],["if(selectedsensor",{"_index":1478,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["if(st",{"_index":1108,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["if(station",{"_index":866,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["if(ydata.length&&xdata",{"_index":1153,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["ilws60",{"_index":414,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["img",{"_index":324,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["imgbx",{"_index":319,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["implementation",{"_index":689,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["implemented",{"_index":739,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["implements",{"_index":18,"title":{},"body":{"components/AboutCandidateComponent.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["implicites",{"_index":197,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["import",{"_index":229,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["important",{"_index":1299,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["imports",{"_index":537,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{}}}],["includes",{"_index":1724,"title":{},"body":{"index.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index:0",{"_index":616,"title":{},"body":{"components/AppComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["infomation",{"_index":1295,"title":{},"body":{"components/FooterComponent.html":{}}}],["information",{"_index":492,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"index.html":{}}}],["informatiques",{"_index":216,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["ingénieur",{"_index":183,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["init",{"_index":1393,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["initchartbar",{"_index":1383,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["initchartbar(...args",{"_index":1530,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["initchartbar(...args:any):chart",{"_index":748,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["initiate",{"_index":1403,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["initiated",{"_index":599,"title":{},"body":{"components/AppComponent.html":{}}}],["initscatter",{"_index":1384,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["initscatter(...args",{"_index":1532,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["initscatter(...args:any):void",{"_index":749,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["initscatter(d",{"_index":1395,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["initscatter(d:currentvaluesschema",{"_index":1452,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["inject",{"_index":777,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["inject('diferred:mode",{"_index":1084,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["inject('realtime:mode",{"_index":1432,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["injectable",{"_index":546,"title":{"injectables/ApiResourceService.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"injectables/RealTimeUseCases.html":{}},"body":{"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["injectable({providedin:'root",{"_index":1255,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["injectables",{"_index":547,"title":{},"body":{"injectables/ApiResourceService.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"injectables/RealTimeUseCases.html":{},"overview.html":{}}}],["inline",{"_index":356,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["input",{"_index":788,"title":{},"body":{"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["input('chart",{"_index":840,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('chartbarvis",{"_index":846,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('scatters",{"_index":836,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('selectedstation",{"_index":842,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('sensors",{"_index":848,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('stations",{"_index":838,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('times",{"_index":834,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('title",{"_index":844,"title":{},"body":{"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["inputs",{"_index":765,"title":{},"body":{"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["install",{"_index":1706,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1688,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1394,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["integrated_sensors",{"_index":495,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["intercept",{"_index":679,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["intercept(request",{"_index":684,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["interceptor",{"_index":675,"title":{"interceptors/Aq54HttpInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptor.interceptor.ts",{"_index":678,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{},"coverage.html":{}}}],["interceptor.interceptor.ts:16",{"_index":683,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["interceptor.interceptor.ts:18",{"_index":696,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["interceptor.interceptor.ts:28",{"_index":688,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["interceptors",{"_index":676,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["interest",{"_index":393,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["interface",{"_index":443,"title":{"interfaces/ApiInterface.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}},"body":{"interfaces/ApiInterface.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":445,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"overview.html":{}}}],["interfonctionnelles",{"_index":127,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["internet",{"_index":98,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["interval",{"_index":1399,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["isloading",{"_index":591,"title":{},"body":{"components/AppComponent.html":{}}}],["isloading:isloadingservice",{"_index":604,"title":{},"body":{"components/AppComponent.html":{}}}],["isloadingservice",{"_index":594,"title":{"injectables/IsLoadingService.html":{}},"body":{"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"injectables/IsLoadingService.html":{},"coverage.html":{}}}],["it's",{"_index":1274,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["item",{"_index":1020,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"miscellaneous/variables.html":{}}}],["item.company",{"_index":257,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item.degree",{"_index":248,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item.group.find((g:any)=>g.unit===item.unit",{"_index":1145,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item.jobtitle",{"_index":258,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item.label",{"_index":911,"title":{},"body":{"components/ChartsComponent.html":{}}}],["item.map((item:any)=>({y:item.value,x:d.time",{"_index":1524,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["item.map((item:any)=>({y:item.value,x:dt[0].time",{"_index":1504,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["item.school",{"_index":249,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item.sensor",{"_index":912,"title":{},"body":{"components/ChartsComponent.html":{}}}],["item.station",{"_index":910,"title":{},"body":{"components/ChartsComponent.html":{}}}],["item.time",{"_index":256,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item.year",{"_index":247,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item['daydata']?item['daydata']=item['daydata'].concat(v.dayvalues):item['daydata']=v.dayvalues",{"_index":1166,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item['dayval']=groupby(dts,(d:any)=>d.label",{"_index":1162,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item['gunit']=v.unit",{"_index":1165,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item['monthdata']?item['monthdata']=item['monthdata'].concat(v.monthdays):item['monthdata']=v.monthdays",{"_index":1167,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item[1].map((dt:any)=>({...dt.data",{"_index":1183,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["items",{"_index":310,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["its&&!its.data.find((t:any)=>t.x===dt[0].time)?its.data.push(...dd.data):false",{"_index":1512,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["javascript/typescript",{"_index":64,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["jobtitle:\"lead",{"_index":167,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["jobtitle:\"remote",{"_index":145,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["jobtitle:\"sofware",{"_index":81,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["jobtitle:\"stage",{"_index":182,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["jours",{"_index":898,"title":{},"body":{"components/ChartsComponent.html":{}}}],["jquery",{"_index":1618,"title":{},"body":{"dependencies.html":{}}}],["jsws70",{"_index":410,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["juin",{"_index":144,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["justify",{"_index":389,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["k",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["know",{"_index":1253,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["kouam",{"_index":79,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["kouame.ndri1998@gmail.com",{"_index":1742,"title":{},"body":{"index.html":{}}}],["l'unit",{"_index":1196,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["la",{"_index":112,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["label",{"_index":66,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["label:\"capteurs",{"_index":1055,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["label:\"unit",{"_index":1051,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["label:`${data.gunit",{"_index":1217,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["label:`(${item[0].unit",{"_index":1505,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["labels",{"_index":43,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ChartBarDataInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{}}}],["labels:string",{"_index":731,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["languages",{"_index":250,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["last",{"_index":505,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["last_transmission_utc",{"_index":510,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["latest",{"_index":1351,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"index.html":{}}}],["latesttransmissionsresponsescema",{"_index":509,"title":{"interfaces/LatestTransmissionsResponseScema.html":{}},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{}}}],["latitude",{"_index":511,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["le",{"_index":110,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["learning",{"_index":54,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["lecture",{"_index":99,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["left",{"_index":291,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["left:0",{"_index":617,"title":{},"body":{"components/AppComponent.html":{}}}],["left_side",{"_index":302,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["legend",{"_index":417,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["les",{"_index":179,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["letter",{"_index":345,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["li",{"_index":348,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["license",{"_index":1743,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1744,"title":{},"body":{"index.html":{}}}],["line",{"_index":338,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["linear",{"_index":1472,"title":{},"body":{"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{}}}],["link",{"_index":967,"title":{},"body":{"components/ChartsComponent.html":{}}}],["linkedin:\"https://linkedin.com/in/kouam",{"_index":1291,"title":{},"body":{"components/FooterComponent.html":{}}}],["linkedin:\"linkedin.com/in/kouam",{"_index":86,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["lis",{"_index":1655,"title":{},"body":{"miscellaneous/functions.html":{}}}],["list",{"_index":349,"title":{},"body":{"components/AboutCandidateComponent.html":{},"miscellaneous/variables.html":{}}}],["list.reduce((previous",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["literal",{"_index":718,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{}}}],["load",{"_index":659,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/IsLoadingService.html":{}}}],["loadchildren:()=>\"import('./features').then(m=>m.featuresmodule",{"_index":671,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":807,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["loader",{"_index":681,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["loader:isloadingservice",{"_index":704,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["loading.service",{"_index":702,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["loading.service.ts",{"_index":1325,"title":{},"body":{"injectables/IsLoadingService.html":{},"coverage.html":{}}}],["loading.service.ts:13",{"_index":1328,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["loading.service.ts:23",{"_index":1330,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["logiciel",{"_index":103,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["logicielles",{"_index":131,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["logiciels",{"_index":116,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["longitude",{"_index":512,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["loop",{"_index":726,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["l’aide",{"_index":196,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["l’approche",{"_index":193,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["l’art",{"_index":188,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["ma",{"_index":1008,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["machine",{"_index":53,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["main",{"_index":584,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["maintainaspectratio",{"_index":1448,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["maintainers",{"_index":1741,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":115,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["make",{"_index":1040,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["makeanimation",{"_index":1427,"title":{},"body":{"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["makeanimation(duration",{"_index":1649,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makes",{"_index":1015,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["maketitle",{"_index":1079,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["maketitle('distribution",{"_index":1449,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["maketitle(`correlation",{"_index":1188,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["maketitle(`distribution",{"_index":1220,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["maketitle(text",{"_index":1651,"title":{},"body":{"miscellaneous/functions.html":{}}}],["making",{"_index":1413,"title":{},"body":{"components/RealTimeChartComponent.html":{},"miscellaneous/variables.html":{}}}],["manner",{"_index":1681,"title":{},"body":{"index.html":{}}}],["map",{"_index":660,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/functions.html":{}}}],["mapdata",{"_index":1598,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapdata(data",{"_index":1653,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdifereddata",{"_index":1080,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapdifereddata(data",{"_index":1656,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdifereddata(raw_data,this.stationsinfo[1].integrated_sensors",{"_index":1116,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["mapping",{"_index":1660,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maps",{"_index":1654,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maptolabels",{"_index":1081,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["maptolabels(data",{"_index":1658,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maptolabels(data,labels",{"_index":1136,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["margin",{"_index":264,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["match",{"_index":1370,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["matching",{"_index":442,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":951,"title":{},"body":{"components/ChartsComponent.html":{}}}],["matrix",{"_index":194,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["max",{"_index":281,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["media",{"_index":398,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["menu",{"_index":1320,"title":{},"body":{"components/HeaderComponent.html":{}}}],["message",{"_index":797,"title":{},"body":{"components/ChartsComponent.html":{}}}],["mesure",{"_index":1052,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["metadata",{"_index":20,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["method",{"_index":1003,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["methode",{"_index":172,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["microservice",{"_index":57,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["microservices",{"_index":202,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["min",{"_index":283,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["min:0",{"_index":1527,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["min:d.time",{"_index":1526,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["min:x0",{"_index":1222,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["miscellaneous",{"_index":1639,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":174,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["mit",{"_index":1746,"title":{},"body":{"index.html":{}}}],["mm",{"_index":816,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["mode",{"_index":499,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["modelisation",{"_index":190,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["moderne",{"_index":219,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["module",{"_index":519,"title":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"components/HeaderComponent.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":521,"title":{"modules.html":{}},"body":{"modules/ApiProxyModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["modèle",{"_index":192,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["moment",{"_index":825,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"dependencies.html":{}}}],["moment().format('yyyy",{"_index":815,"title":{},"body":{"components/ChartsComponent.html":{}}}],["moment().subtract(1,'days').format('yyyy",{"_index":820,"title":{},"body":{"components/ChartsComponent.html":{}}}],["moment(last_transmission_utc",{"_index":1366,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["moment(this.end).diff(moment(this.start),'days",{"_index":887,"title":{},"body":{"components/ChartsComponent.html":{}}}],["mon",{"_index":1317,"title":{},"body":{"components/HeaderComponent.html":{}}}],["morgan",{"_index":1621,"title":{},"body":{"dependencies.html":{}}}],["multi:true",{"_index":652,"title":{},"body":{"modules/AppModule.html":{}}}],["musique",{"_index":97,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["médiatron",{"_index":185,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["n",{"_index":88,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["n'dri",{"_index":80,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["name",{"_index":423,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"miscellaneous/functions.html":{}}}],["name:\"david",{"_index":78,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["native",{"_index":59,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["navigate",{"_index":1717,"title":{},"body":{"index.html":{}}}],["ne",{"_index":899,"title":{},"body":{"components/ChartsComponent.html":{}}}],["needed",{"_index":1248,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["nestjs",{"_index":45,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["networks",{"_index":1722,"title":{},"body":{"index.html":{}}}],["new",{"_index":852,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["next",{"_index":686,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["next.handle(request",{"_index":713,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":707,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["ng",{"_index":1713,"title":{},"body":{"index.html":{}}}],["ng2",{"_index":1623,"title":{},"body":{"dependencies.html":{}}}],["nginx",{"_index":1725,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":528,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngondestroy",{"_index":998,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["ngoninit",{"_index":32,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["ngx",{"_index":1627,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":1673,"title":{},"body":{"index.html":{}}}],["node.js(version",{"_index":1689,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":44,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["nombre",{"_index":897,"title":{},"body":{"components/ChartsComponent.html":{}}}],["none",{"_index":351,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["not(.circle",{"_index":966,"title":{},"body":{"components/ChartsComponent.html":{}}}],["nouvelle",{"_index":150,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["now.diff(transtime,'minutes',true)==0&&last_transmission_utc?true:true",{"_index":1373,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["now=moment",{"_index":1367,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["npm",{"_index":1709,"title":{},"body":{"index.html":{}}}],["null",{"_index":780,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["number",{"_index":470,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["obj=object.entries(grp",{"_index":1155,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["object",{"_index":77,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(xgroup).foreach((key:any",{"_index":1158,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["observable",{"_index":463,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["observable,throwerror",{"_index":698,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["once",{"_index":598,"title":{},"body":{"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["onchartoptionchange",{"_index":763,"title":{},"body":{"components/ChartsComponent.html":{}}}],["onchartoptionchange(event",{"_index":810,"title":{},"body":{"components/ChartsComponent.html":{}}}],["onchartoptionchange(event:event|any",{"_index":904,"title":{},"body":{"components/ChartsComponent.html":{}}}],["onchartsinit",{"_index":1385,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["onchartsinit(...args",{"_index":1534,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["onchartsinit(...args:any):void",{"_index":751,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["ondestroy",{"_index":983,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["one",{"_index":1036,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["oninit",{"_index":19,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["oninit(projectname",{"_index":1549,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["oninit(projectname:string):promise",{"_index":1345,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["oninit,ondestroy,chartbuilder,diferedcomponentinterface",{"_index":1083,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["oninit,ondestroy,chartbuilder,realtimechartcomponent",{"_index":1431,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["oninitresponseschema",{"_index":1335,"title":{"interfaces/OninitResponseSchema.html":{}},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["onsensorchange",{"_index":764,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["onsensorchange(event",{"_index":813,"title":{},"body":{"components/ChartsComponent.html":{}}}],["onsensorchange(event:event|any",{"_index":906,"title":{},"body":{"components/ChartsComponent.html":{}}}],["onsensorchange(item",{"_index":1030,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["onsensorchange(item:any",{"_index":1173,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["ontimeseriechartinit",{"_index":1386,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["ontimeseriechartinit(...args",{"_index":1536,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["ontimeseriechartinit(...args:any):void",{"_index":754,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["ontimeseriechartinit(d",{"_index":1406,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["ontimeseriechartinit(d:currentvaluesschema",{"_index":1514,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["onupdate",{"_index":1545,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["onupdate(station",{"_index":1551,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["onupdate(station:string):promise",{"_index":1355,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["open",{"_index":1715,"title":{},"body":{"index.html":{}}}],["optimising",{"_index":1354,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["option",{"_index":225,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["optional",{"_index":461,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":732,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["order",{"_index":1246,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["others",{"_index":1042,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["oum",{"_index":220,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["out",{"_index":631,"title":{},"body":{"modules/AppModule.html":{},"components/ChartsComponent.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["output",{"_index":824,"title":{},"body":{"components/ChartsComponent.html":{}}}],["output('chartbarvischange",{"_index":850,"title":{},"body":{"components/ChartsComponent.html":{}}}],["output('sensorchange",{"_index":853,"title":{},"body":{"components/ChartsComponent.html":{}}}],["outputs",{"_index":771,"title":{},"body":{"components/ChartsComponent.html":{}}}],["overflow",{"_index":322,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["overview",{"_index":1669,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":379,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["package",{"_index":1602,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":266,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["paiement",{"_index":159,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["par",{"_index":1451,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["parallel",{"_index":1254,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["parallelexecution",{"_index":1239,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["parallelexecution(stationname",{"_index":1251,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["parallelexecution(stationname:string='',start:string,end:string,projectname:string",{"_index":1258,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["param",{"_index":575,"title":{},"body":{"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["parameter",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parameters",{"_index":460,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":1629,"title":{},"body":{"dependencies.html":{}}}],["pas",{"_index":901,"title":{},"body":{"components/ChartsComponent.html":{}}}],["path",{"_index":665,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{}}}],["path:'david",{"_index":669,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:'diferred",{"_index":1282,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["path:'real",{"_index":1284,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["path:'visualisation",{"_index":670,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch:'full",{"_index":667,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pau",{"_index":149,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["pdf",{"_index":1624,"title":{},"body":{"dependencies.html":{}}}],["percent",{"_index":370,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["phone:\"+216",{"_index":91,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["photo",{"_index":328,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["photo:\"assets/david.png",{"_index":83,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["phws40",{"_index":412,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["pick",{"_index":1247,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["place",{"_index":175,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["placed",{"_index":1296,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["placeholder",{"_index":1728,"title":{},"body":{"index.html":{}}}],["plage",{"_index":874,"title":{},"body":{"components/ChartsComponent.html":{}}}],["please",{"_index":1739,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":1187,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["pointer",{"_index":354,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["poppins",{"_index":272,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["position",{"_index":275,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["position:'bottom",{"_index":1204,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["position:'left",{"_index":1201,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["position:relative",{"_index":916,"title":{},"body":{"components/ChartsComponent.html":{}}}],["pour",{"_index":135,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["pratique",{"_index":108,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["preload",{"_index":1326,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["preloadallmodules",{"_index":656,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloader/is",{"_index":701,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["prerequisites",{"_index":1682,"title":{},"body":{"index.html":{}}}],["previous",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["previous[group",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["previous[group].push(currentitem",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primary",{"_index":962,"title":{},"body":{"components/ChartsComponent.html":{}}}],["principes",{"_index":180,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["pris",{"_index":1192,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["private",{"_index":1085,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["problèmes",{"_index":120,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["production",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["professionnel",{"_index":254,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["profil",{"_index":253,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["profile:`ingénieur",{"_index":100,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["profiletext",{"_index":305,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["project",{"_index":1712,"title":{},"body":{"index.html":{}}}],["projectname",{"_index":477,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["projet",{"_index":171,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["promise",{"_index":1029,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["promise.all",{"_index":1260,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["promise.all(sessioninfo.map(async(station:sessioninfoschema)=>await",{"_index":1346,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["promise.all(this.stations.map(async(s:sessioninfoschema)=>await",{"_index":1516,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["properties",{"_index":29,"title":{"properties.html":{}},"body":{"components/AboutCandidateComponent.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartTitle.html":{},"properties.html":{}}}],["property",{"_index":1294,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{}}}],["provide:\"diferred:mode",{"_index":541,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["provide:'api",{"_index":539,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["provide:'realtime:mode",{"_index":543,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["provide:http_interceptors",{"_index":651,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":569,"title":{},"body":{"injectables/ApiResourceService.html":{},"injectables/IsLoadingService.html":{}}}],["providers",{"_index":538,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["proxy",{"_index":525,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["proxy.module.ts",{"_index":524,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["proxy/api",{"_index":523,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["public",{"_index":590,"title":{},"body":{"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"injectables/IsLoadingService.html":{}}}],["purpose",{"_index":15,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["python",{"_index":48,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["quality",{"_index":1678,"title":{},"body":{"index.html":{}}}],["queryparams",{"_index":809,"title":{},"body":{"components/ChartsComponent.html":{}}}],["quipes",{"_index":126,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["radius",{"_index":320,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["random",{"_index":1647,"title":{},"body":{"miscellaneous/functions.html":{}}}],["randomly",{"_index":1035,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{}}}],["range",{"_index":799,"title":{},"body":{"components/ChartsComponent.html":{}}}],["rangedataschema",{"_index":501,"title":{"interfaces/RangeDataSchema.html":{}},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{}}}],["ranges",{"_index":988,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["raw_data",{"_index":1379,"title":{},"body":{"interfaces/RangeDataSchema.html":{}}}],["raw_data,station",{"_index":1264,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["raw_data,station,sessioninfo",{"_index":1118,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{}}}],["raw_data,station,sessioninfo:stationinfo",{"_index":1109,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["raw_data,station},sessioninfo",{"_index":1259,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["raw_data:array",{"_index":502,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["reactjs",{"_index":47,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["readonly",{"_index":573,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["real",{"_index":437,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["realtime",{"_index":1342,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["realtimechartcomponent",{"_index":436,"title":{"components/RealTimeChartComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["realtimechartcomponentinterface",{"_index":747,"title":{"interfaces/RealTimeChartComponentInterface.html":{}},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{}}}],["realtimeusecases",{"_index":534,"title":{"injectables/RealTimeUseCases.html":{}},"body":{"modules/ApiProxyModule.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["rebuild",{"_index":1734,"title":{},"body":{"index.html":{}}}],["recomandation",{"_index":189,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["recommendation",{"_index":200,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["recommender",{"_index":51,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["record",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirectto:'/visualisation/real",{"_index":666,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["relative",{"_index":276,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["repeat(1",{"_index":399,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["repeat(2",{"_index":400,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["repeat(4",{"_index":394,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["repository",{"_index":1670,"title":{},"body":{"index.html":{}}}],["represents",{"_index":504,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["request",{"_index":663,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"injectables/DiferredModeUsecases.html":{}}}],["require",{"_index":829,"title":{},"body":{"components/ChartsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require:any",{"_index":830,"title":{},"body":{"components/ChartsComponent.html":{}}}],["required",{"_index":1016,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["requirements",{"_index":729,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["res?location.href=`${'/visualisation/diferred?station'}=${station}`:null",{"_index":884,"title":{},"body":{"components/ChartsComponent.html":{}}}],["reseaux",{"_index":215,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["reset",{"_index":630,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resource",{"_index":549,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["resources",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":1339,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["response=await",{"_index":1361,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["responsive:true",{"_index":1186,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["restart",{"_index":1735,"title":{},"body":{"index.html":{}}}],["reste",{"_index":1194,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["results",{"_index":441,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resum",{"_index":17,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["retrieve",{"_index":491,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["retrieving",{"_index":500,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["retrive",{"_index":1357,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["return",{"_index":480,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":37,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"miscellaneous/functions.html":{}}}],["rgb",{"_index":1648,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rgb(105",{"_index":952,"title":{},"body":{"components/ChartsComponent.html":{}}}],["rgb(75",{"_index":936,"title":{},"body":{"components/ChartsComponent.html":{}}}],["rgba(0",{"_index":300,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["rgba(255",{"_index":316,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["right",{"_index":383,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["right_side",{"_index":375,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["robustes",{"_index":132,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["root",{"_index":570,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"injectables/IsLoadingService.html":{}}}],["root'},{'name",{"_index":426,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["route",{"_index":662,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule",{"_index":646,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{}}}],["routermodule.forchild(routes",{"_index":1285,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":672,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":657,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/FeaturesRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":658,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"modules/FeaturesRoutingModule.html":{}}}],["routing.module",{"_index":638,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{}}}],["routing.module.ts",{"_index":655,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FeaturesRoutingModule.html":{}}}],["row",{"_index":380,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["run",{"_index":1350,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["running",{"_index":1684,"title":{},"body":{"index.html":{}}}],["russianw90",{"_index":404,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["rxjs",{"_index":478,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/CurrentValuesSchema.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":700,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["réel",{"_index":791,"title":{},"body":{"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["répondre",{"_index":136,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["résolution",{"_index":119,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["s",{"_index":1412,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["same",{"_index":1044,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"miscellaneous/functions.html":{}}}],["sansserif",{"_index":273,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["sc=0;scthis.scatterchart.push({config,chart:new",{"_index":1455,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["scales",{"_index":733,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["scatter",{"_index":1033,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["scatterbasedchart",{"_index":972,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{}}}],["scatterbasedchart(...args",{"_index":978,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{}}}],["scatterbasedchart(...args:any):void",{"_index":745,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["scatterchart",{"_index":989,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["scatterchart:any",{"_index":1437,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["scatterchart:chart|any=null",{"_index":1091,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["scatterconfig:any",{"_index":1181,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["scatterdata",{"_index":1387,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["scatterdata(...args",{"_index":1538,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["scatterdata(...args:any):any",{"_index":750,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["scatterdata(d",{"_index":1408,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["scatterdata(d:currentvaluesschema[],n:any=null",{"_index":1476,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["scatters",{"_index":767,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["scatters:any",{"_index":837,"title":{},"body":{"components/ChartsComponent.html":{}}}],["scatters:string",{"_index":1088,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["scattersensor",{"_index":918,"title":{},"body":{"components/ChartsComponent.html":{}}}],["scattersensors",{"_index":990,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["scattersensors:any",{"_index":1089,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["schemas",{"_index":633,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{}}}],["schemas:[custom_elements_schema",{"_index":650,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{}}}],["school:\"esatic",{"_index":210,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["school:\"lycée",{"_index":218,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["school:\"sup'com",{"_index":204,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["scientifique",{"_index":224,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["screen",{"_index":964,"title":{},"body":{"components/ChartsComponent.html":{}}}],["scrollpositionrestoration",{"_index":673,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["scrum/up",{"_index":63,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["see",{"_index":1747,"title":{},"body":{"index.html":{}}}],["select",{"_index":969,"title":{},"body":{"components/ChartsComponent.html":{}}}],["selecte",{"_index":1047,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["selected",{"_index":1483,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["selected:false",{"_index":1057,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["selected:true",{"_index":1054,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["selected='smart188",{"_index":843,"title":{},"body":{"components/ChartsComponent.html":{}}}],["selected=item.values.find(v=>v.sensor.tolowercase()===selectedsensor.type.tolowercase",{"_index":1482,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["selectedoption",{"_index":759,"title":{},"body":{"components/ChartsComponent.html":{}}}],["selectedoption:any=null",{"_index":854,"title":{},"body":{"components/ChartsComponent.html":{}}}],["selectedsensor",{"_index":1381,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["selectedsensor:any",{"_index":1435,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["selectedsensor=this.selectedsensor?this.selectedsensor:this.sensors[n||math.floor(math.random()*(this.sensors.length",{"_index":1477,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["selectedstation",{"_index":768,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["selectedstation:string='smart188",{"_index":1093,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["selector",{"_index":21,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["selon",{"_index":1195,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["sensor",{"_index":1038,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["sensor:false",{"_index":1053,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["sensor:selected.sensor",{"_index":1488,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["sensor:true",{"_index":1056,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["sensorchange",{"_index":773,"title":{},"body":{"components/ChartsComponent.html":{}}}],["sensors",{"_index":769,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/functions.html":{}}}],["sensors:any",{"_index":1094,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["sensors:any=null",{"_index":849,"title":{},"body":{"components/ChartsComponent.html":{}}}],["sensors:array",{"_index":1436,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["sensors:values.map(s=>s.sensor",{"_index":1489,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["serie",{"_index":226,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["server",{"_index":1726,"title":{},"body":{"index.html":{}}}],["service",{"_index":550,"title":{},"body":{"injectables/ApiResourceService.html":{},"injectables/IsLoadingService.html":{},"index.html":{}}}],["services",{"_index":201,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["serving",{"_index":1727,"title":{},"body":{"index.html":{}}}],["sessiond_id",{"_index":494,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["sessionid",{"_index":1359,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["sessioninfo",{"_index":1120,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["sessioninfo:sessioninfoschema",{"_index":1341,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["sessioninfoschema",{"_index":493,"title":{"interfaces/SessionInfoSchema.html":{}},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{}}}],["sessions",{"_index":1245,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["set",{"_index":1280,"title":{},"body":{"modules/FeaturesRoutingModule.html":{},"components/RealTimeChartComponent.html":{}}}],["setinterval",{"_index":1125,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["setinterval(async",{"_index":1443,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["setloading",{"_index":1327,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["setloading(value",{"_index":1329,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["setloading(value=false",{"_index":1333,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["setted",{"_index":608,"title":{},"body":{"components/AppComponent.html":{}}}],["settimeout",{"_index":609,"title":{},"body":{"components/AppComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["setting",{"_index":613,"title":{},"body":{"components/AppComponent.html":{}}}],["setup",{"_index":526,"title":{},"body":{"modules/ApiProxyModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"injectables/IsLoadingService.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["shadow",{"_index":297,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["shared",{"_index":648,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{}}}],["sharedmodule",{"_index":627,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":1010,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{}}}],["showcases",{"_index":16,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["size",{"_index":331,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["sizing",{"_index":268,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["skills",{"_index":387,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["small",{"_index":943,"title":{},"body":{"components/ChartsComponent.html":{}}}],["smart188",{"_index":783,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["software",{"_index":146,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["solid",{"_index":315,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["solutions",{"_index":130,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"index.html":{}}}],["spacer",{"_index":1319,"title":{},"body":{"components/HeaderComponent.html":{}}}],["spacing",{"_index":346,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["span",{"_index":340,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["spinner",{"_index":680,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{},"injectables/IsLoadingService.html":{}}}],["spinning",{"_index":592,"title":{},"body":{"components/AppComponent.html":{}}}],["spinning=false",{"_index":603,"title":{},"body":{"components/AppComponent.html":{}}}],["src",{"_index":1732,"title":{},"body":{"index.html":{}}}],["src/.../charts.component.ts",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1641,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/@core",{"_index":602,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DiferredDataChartComponent.html":{}}}],["src/@core/api",{"_index":522,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["src/@core/api/api.resource.service.ts",{"_index":548,"title":{},"body":{"injectables/ApiResourceService.html":{},"coverage.html":{}}}],["src/@core/api/api.resource.service.ts:16",{"_index":554,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/api/api.resource.service.ts:24",{"_index":558,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/api/api.resource.service.ts:34",{"_index":557,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/api/api.resource.service.ts:42",{"_index":556,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/api/api.resource.service.ts:50",{"_index":560,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/api/api.resource.service.ts:61",{"_index":559,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/interceptor/http",{"_index":677,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{},"coverage.html":{}}}],["src/@core/preloader/is",{"_index":1324,"title":{},"body":{"injectables/IsLoadingService.html":{},"coverage.html":{}}}],["src/app/about",{"_index":10,"title":{},"body":{"components/AboutCandidateComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":654,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":583,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":595,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":600,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":596,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":632,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/features/diferred",{"_index":980,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{}}}],["src/app/features/features",{"_index":1279,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["src/app/features/features.module.ts",{"_index":1272,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["src/app/features/real",{"_index":1380,"title":{},"body":{"components/RealTimeChartComponent.html":{},"coverage.html":{}}}],["src/app/shared/charts/charts.component.ts",{"_index":755,"title":{},"body":{"components/ChartsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/charts/charts.component.ts:110",{"_index":798,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:142",{"_index":812,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:147",{"_index":814,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:35",{"_index":787,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:36",{"_index":782,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:37",{"_index":786,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:38",{"_index":779,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:39",{"_index":784,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:40",{"_index":792,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:41",{"_index":781,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:42",{"_index":785,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:43",{"_index":794,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:44",{"_index":795,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:45",{"_index":819,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:49",{"_index":821,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:53",{"_index":818,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:57",{"_index":776,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:70",{"_index":805,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:84",{"_index":802,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":1286,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:18",{"_index":1292,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":1300,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts:20",{"_index":1305,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:24",{"_index":1309,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1556,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/domain",{"_index":565,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["src/domain/api/api.interface.ts",{"_index":446,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{}}}],["src/domain/api/api.interface.ts:72",{"_index":459,"title":{},"body":{"interfaces/ApiInterface.html":{}}}],["src/domain/api/api.interface.ts:73",{"_index":476,"title":{},"body":{"interfaces/ApiInterface.html":{}}}],["src/domain/api/api.interface.ts:74",{"_index":474,"title":{},"body":{"interfaces/ApiInterface.html":{}}}],["src/domain/api/api.interface.ts:75",{"_index":467,"title":{},"body":{"interfaces/ApiInterface.html":{}}}],["src/domain/api/api.interface.ts:76",{"_index":471,"title":{},"body":{"interfaces/ApiInterface.html":{}}}],["src/domain/chart.ts",{"_index":715,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{}}}],["src/domain/chart.ts:56",{"_index":1560,"title":{},"body":{"interfaces/chartBuilder.html":{}}}],["src/domain/chart.ts:57",{"_index":1562,"title":{},"body":{"interfaces/chartBuilder.html":{}}}],["src/domain/chart.ts:64",{"_index":974,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{}}}],["src/domain/chart.ts:65",{"_index":979,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{}}}],["src/domain/chart.ts:66",{"_index":977,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{}}}],["src/domain/chart.ts:75",{"_index":1531,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/domain/chart.ts:76",{"_index":1533,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/domain/chart.ts:77",{"_index":1539,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/domain/chart.ts:78",{"_index":1535,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/domain/chart.ts:79",{"_index":1543,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/domain/chart.ts:80",{"_index":1541,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/domain/chart.ts:81",{"_index":1537,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/environments/environment.prod",{"_index":568,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/HeaderComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":1593,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1594,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/usecases",{"_index":535,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["src/usecases/diferred",{"_index":1236,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"coverage.html":{}}}],["src/usecases/real",{"_index":1336,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["src/utils",{"_index":234,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["src/utils.ts",{"_index":1596,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["st",{"_index":1017,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["staion",{"_index":803,"title":{},"body":{"components/ChartsComponent.html":{}}}],["staions",{"_index":1344,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["start",{"_index":465,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"index.html":{}}}],["start,end,station}=param",{"_index":860,"title":{},"body":{"components/ChartsComponent.html":{}}}],["start:moment().subtract(1,'days').format('yyyy",{"_index":1062,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["start:string=moment().subtract(1,'days').format('yyyy",{"_index":855,"title":{},"body":{"components/ChartsComponent.html":{}}}],["start?this.start=start:null",{"_index":861,"title":{},"body":{"components/ChartsComponent.html":{}}}],["started",{"_index":1666,"title":{"index.html":{}},"body":{"index.html":{}}}],["starttime=moment(this.ranges.start).tolocalestring().split",{"_index":1210,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["statements",{"_index":1565,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["station",{"_index":468,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"miscellaneous/functions.html":{}}}],["station,start,end}=param",{"_index":1100,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["station:d.station",{"_index":1522,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["station:item.station_name",{"_index":1486,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["station:string",{"_index":503,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["station?location.href=`${'/visualisation/diferred?station'}=${station}&&start=${moment(this.start).format('yyyy",{"_index":892,"title":{},"body":{"components/ChartsComponent.html":{}}}],["station?this.builder(station):this.builder",{"_index":1104,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["station?this.selected=station:null",{"_index":863,"title":{},"body":{"components/ChartsComponent.html":{}}}],["station_id",{"_index":513,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["station_name",{"_index":487,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["stationdata",{"_index":1644,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stationdata:currentvaluesschema",{"_index":1497,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["stationdata:currentvaluesschema[]=d",{"_index":1515,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["stationdatalabels",{"_index":1082,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stationdatalabels(stations",{"_index":1661,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stationdatalabels(this.stationsinfo",{"_index":1133,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["stationid",{"_index":472,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["stationinfo",{"_index":1114,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["stationname",{"_index":462,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"injectables/DiferredModeUsecases.html":{}}}],["stations",{"_index":484,"title":{},"body":{"interfaces/ApiInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"miscellaneous/functions.html":{}}}],["stations,sessioninfo",{"_index":1348,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["stations:any",{"_index":839,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["stations:currentvaluesschema",{"_index":1340,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["stations:sessioninfoschema",{"_index":1440,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["stationsinfo",{"_index":991,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["stationsinfo:sessioninfoschema",{"_index":1092,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["stationval:currentvaluesschema[]=v",{"_index":1459,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["status",{"_index":507,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["string",{"_index":458,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/HeaderComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["structure",{"_index":1024,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"index.html":{}}}],["studio",{"_index":1696,"title":{},"body":{"index.html":{}}}],["style",{"_index":350,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["styleurls",{"_index":24,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["sub",{"_index":1312,"title":{},"body":{"components/HeaderComponent.html":{}}}],["submodule",{"_index":1276,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["subscibe",{"_index":808,"title":{},"body":{"components/ChartsComponent.html":{}}}],["support",{"_index":1737,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sup’com",{"_index":186,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["sur",{"_index":178,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["sure",{"_index":1686,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1751,"title":{},"body":{"modules.html":{}}}],["svg.material",{"_index":922,"title":{},"body":{"components/ChartsComponent.html":{}}}],["swagger",{"_index":164,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["swal",{"_index":831,"title":{},"body":{"components/ChartsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["swal:sweetalert",{"_index":832,"title":{},"body":{"components/ChartsComponent.html":{}}}],["swal=require('sweetalert",{"_index":833,"title":{},"body":{"components/ChartsComponent.html":{}}}],["sweetalert",{"_index":826,"title":{},"body":{"components/ChartsComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["sweetalert/typings/core",{"_index":827,"title":{},"body":{"components/ChartsComponent.html":{}}}],["swimlane/ngx",{"_index":1607,"title":{},"body":{"dependencies.html":{}}}],["system",{"_index":52,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["système",{"_index":199,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["systèmes",{"_index":122,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["t",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":1601,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1600,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1306,"title":{},"body":{"components/HeaderComponent.html":{}}}],["takes",{"_index":1034,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["technical",{"_index":1704,"title":{},"body":{"index.html":{}}}],["technologies,abidjan",{"_index":169,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["telecom",{"_index":217,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["temporelle",{"_index":1221,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["temps",{"_index":790,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{}}}],["tension",{"_index":717,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["tension:0.8",{"_index":1219,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["term",{"_index":1043,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["text",{"_index":333,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["text:'le",{"_index":896,"title":{},"body":{"components/ChartsComponent.html":{}}}],["text:'vous",{"_index":876,"title":{},"body":{"components/ChartsComponent.html":{}}}],["text:`${data[0].sensor}(${data[0].unit",{"_index":1474,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["text:string",{"_index":722,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["then(res",{"_index":883,"title":{},"body":{"components/ChartsComponent.html":{}}}],["things",{"_index":607,"title":{},"body":{"components/AppComponent.html":{}}}],["this.activeroute.queryparams.subscribe((param:any",{"_index":859,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.activeroute.queryparams.subscribe(async(param:any",{"_index":1099,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.api.getcurrentvalues(station).topromise",{"_index":1356,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["this.api.getcurrentvalues(station.station).topromise",{"_index":1347,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["this.api.getlatesttransmissionstatus(sessionid).topromise",{"_index":1362,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["this.api.getrange(sessioninfo[math.floor(math.random()*(sessioninfo.length",{"_index":1265,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["this.api.getrange(stationname,start,end).topromise",{"_index":1261,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["this.api.getsessioninfo(projectname).topromise",{"_index":1262,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["this.barbasedchart",{"_index":1122,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.builder(station",{"_index":1103,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.changerange(station,'vous",{"_index":871,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.chart.update",{"_index":1493,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.chart?this.chart=new",{"_index":1223,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.chartdata(data",{"_index":1117,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.chatbarvischange.emit(event.target?.value",{"_index":905,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.cleartimer",{"_index":1105,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.data.datasets=dt",{"_index":1138,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.data.labels=labels",{"_index":1134,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.http.get(`${this.baseapi}${'getstationstatus'}/${stationid",{"_index":576,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["this.http.get(`${this.baseapi}gethourlyavg/${station}/${start}/${end}?pivot=${true",{"_index":578,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["this.http.get(this.baseapi+`getcurrentvalues/${stationname",{"_index":579,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["this.http.get(this.baseapi+`getrange/${station}/${start}/${end",{"_index":582,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["this.http.get(this.baseapi+`getsessioninfo/${projectname",{"_index":580,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["this.isloading.load.subscribe((res:boolean",{"_index":610,"title":{},"body":{"components/AppComponent.html":{}}}],["this.load.next(value",{"_index":1334,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["this.loader.setloading(false",{"_index":709,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["this.loader.setloading(true",{"_index":706,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["this.onchartsinit",{"_index":1441,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.ranges.end=end",{"_index":1101,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.ranges.start=start",{"_index":1102,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterbasedchart",{"_index":1123,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterchart",{"_index":1234,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterchart.data=scatterconfig.data",{"_index":1207,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterchart.find((sc:any)=>sc.config.station===station",{"_index":1462,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.scatterchart.options=scatterconfig.options",{"_index":1206,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterchart.update",{"_index":1208,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterdata(d",{"_index":1453,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.scatterdata(stationval",{"_index":1460,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.scatters.push('sc",{"_index":1233,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scattersensors.push({sensor:d.label,selected:true",{"_index":1227,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scattersensors=this.scattersensors.concat(dt.filter((f:any)=>f.label!=d.label).map((sc:any)=>({sensor:sc.label,selected:false",{"_index":1228,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.selectedstation",{"_index":1193,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.selectedstation=station",{"_index":1112,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.sensorchange.emit(event.target.value",{"_index":907,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.spinning=res",{"_index":611,"title":{},"body":{"components/AppComponent.html":{}}}],["this.stations.foreach(async(s:any",{"_index":1444,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.stations=this.stationsinfo.map((item:sessioninfoschema)=>({station:item.station,selected:item.station==this.selectedstation?true:false",{"_index":1115,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.stations=this.stationsinfo.map((item:sessioninfoschema,index:number)=>({station:item.station,selected:index==0",{"_index":1121,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.stationsinfo",{"_index":1113,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.stattioncurrentval.execute(s.station).topromise",{"_index":1517,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.time",{"_index":1442,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.timedata.filter((item:any)=>item.dayval",{"_index":1177,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.timedata.foreach((item:any,index:any",{"_index":1142,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.timedata=dt",{"_index":1139,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.timedata=this.timedata.map((item:any)=>({...item,group:object.entries(groupby(this.timedata,(t:any)=>t.unit)).map((e:any)=>({unit:e[0],values:e[1],label:item.label",{"_index":1140,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.timer",{"_index":1124,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.times.push(index+\"times\"+date.now",{"_index":1520,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.timescahrt.find((c:any)=>c.config.station===station",{"_index":1501,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.timescahrt.push({chart,config",{"_index":1529,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.updatescatter",{"_index":1126,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.updatescatter([stationdata],s.station",{"_index":1495,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.updatescatter(item",{"_index":1174,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.updatetimeseries(stationdata,s.station",{"_index":1494,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.usecases.canupdate(s.sessiond_id)?this.updatedata(s):null",{"_index":1445,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.usecases.execute(this.ranges.start,this.ranges.end,this.title",{"_index":1119,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.usecases.parallelexecution(st,this.ranges.start,this.ranges.end,this.title",{"_index":1111,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["throw",{"_index":1129,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["throwerror(error",{"_index":712,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["ticks",{"_index":1202,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["time",{"_index":438,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["time:\"depuis",{"_index":165,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["time:\"février",{"_index":181,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["time:\"mars",{"_index":142,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["time:any",{"_index":1439,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["time:d.time",{"_index":1521,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["time:dt[0].time",{"_index":1502,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["timedata",{"_index":992,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["timedata:any",{"_index":1097,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["timer",{"_index":993,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["timer:any=null",{"_index":1098,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["times",{"_index":770,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["times:any",{"_index":835,"title":{},"body":{"components/ChartsComponent.html":{}}}],["times:string",{"_index":1090,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["timescahrt",{"_index":1382,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["timescahrt:any",{"_index":1438,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["timestamp",{"_index":488,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["title",{"_index":344,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["title2",{"_index":378,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["title:maketitle(`${d.label}(${d.unit})`,getrandomrgb",{"_index":1205,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["title:maketitle(`${data[0].sensors.join(',')}(${data[0].unit})`,getrandomrgb",{"_index":1471,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["title:maketitle(`autres",{"_index":1199,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["title:maketitle(`correlation",{"_index":1229,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["title=\"aq54",{"_index":1314,"title":{},"body":{"components/HeaderComponent.html":{}}}],["title='visualisation",{"_index":845,"title":{},"body":{"components/ChartsComponent.html":{}}}],["today",{"_index":760,"title":{},"body":{"components/ChartsComponent.html":{}}}],["today=moment().format('yyyy",{"_index":857,"title":{},"body":{"components/ChartsComponent.html":{}}}],["toolbar",{"_index":1322,"title":{},"body":{"components/HeaderComponent.html":{}}}],["top",{"_index":325,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["top:60px",{"_index":293,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["transform",{"_index":334,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["transition",{"_index":586,"title":{},"body":{"components/AppComponent.html":{},"components/ChartsComponent.html":{}}}],["translatey",{"_index":947,"title":{},"body":{"components/ChartsComponent.html":{}}}],["transmission",{"_index":506,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["transtime",{"_index":1365,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["true",{"_index":881,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1107,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["tslib",{"_index":1635,"title":{},"body":{"dependencies.html":{}}}],["tunis",{"_index":205,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["tunisie",{"_index":94,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type:'linear",{"_index":1198,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["types",{"_index":1450,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["typicaly",{"_index":497,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["ul",{"_index":347,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["uml",{"_index":62,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["under",{"_index":1745,"title":{},"body":{"index.html":{}}}],["underline",{"_index":914,"title":{},"body":{"components/ChartsComponent.html":{}}}],["unfortunately",{"_index":1374,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["unit",{"_index":1011,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"miscellaneous/functions.html":{}}}],["unit:selected?.unit",{"_index":1487,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["units.push(group?.unit",{"_index":1163,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["units:any",{"_index":1141,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["unknown",{"_index":1250,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"components/RealTimeChartComponent.html":{}}}],["unset",{"_index":932,"title":{},"body":{"components/ChartsComponent.html":{}}}],["up",{"_index":173,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/RealTimeChartComponent.html":{},"index.html":{}}}],["update",{"_index":1048,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["update=false",{"_index":1509,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["update?chart.update():null",{"_index":1513,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatechartbardata",{"_index":1599,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatechartbardata(stationdata",{"_index":1663,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updatechartbardata,groupby",{"_index":1426,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updated",{"_index":1736,"title":{},"body":{"index.html":{}}}],["updatedata",{"_index":1388,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["updatedata(...args",{"_index":1540,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["updatedata(...args:any):any",{"_index":753,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["updatedata(s",{"_index":1410,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatescatter",{"_index":999,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/chartBuilder.html":{}}}],["updatescatter(...args",{"_index":1561,"title":{},"body":{"interfaces/chartBuilder.html":{}}}],["updatescatter(...args:any):void",{"_index":742,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["updatescatter(sensor",{"_index":1045,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["updatescatter(sensor:string",{"_index":1175,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["updatescatter(v",{"_index":1414,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatescatter(v:currentvaluesschema[]=[],station:string",{"_index":1458,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatetimeseries",{"_index":1389,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["updatetimeseries(...args",{"_index":1542,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["updatetimeseries(...args:any):any",{"_index":752,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["updatetimeseries(d",{"_index":1417,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatetimeseries(d:currentvaluesschema,station:string",{"_index":1496,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updating",{"_index":1665,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uppercase",{"_index":335,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["url",{"_index":564,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/HeaderComponent.html":{}}}],["url(\"https://fonts.googleapis.com/css2?family=poppins:wght@200;300;400;500;600;700;800;900&display=swap",{"_index":263,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["use",{"_index":1337,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["usecase",{"_index":1249,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["usecases",{"_index":451,"title":{},"body":{"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/SessionInfoSchema.html":{}}}],["usecases.ts",{"_index":1237,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"coverage.html":{}}}],["usecases.ts:26",{"_index":1252,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["usecases.ts:47",{"_index":1243,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["usecases.ts:9",{"_index":1241,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["usecases:diferredmodeusecases",{"_index":1086,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["usecases:realtimeusecases",{"_index":1433,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["useclass:apiresourceservice",{"_index":540,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["useclass:aq54httpinterceptor",{"_index":653,"title":{},"body":{"modules/AppModule.html":{}}}],["useclass:diferredmodeusecases",{"_index":542,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["useclass:realtimeusecases",{"_index":544,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["used",{"_index":479,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":14,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{},"index.html":{}}}],["user.address",{"_index":245,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.email1",{"_index":242,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.email2",{"_index":243,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.email|lowercase",{"_index":1298,"title":{},"body":{"components/FooterComponent.html":{}}}],["user.jobtitle",{"_index":239,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.linkedin",{"_index":244,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.name",{"_index":238,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.phone",{"_index":241,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.profile",{"_index":255,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["using",{"_index":1293,"title":{},"body":{"components/FooterComponent.html":{}}}],["utc",{"_index":1363,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["utilisateurs",{"_index":139,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["utilisation",{"_index":157,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["utility",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uvre",{"_index":198,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["v",{"_index":1416,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["v.sensor!=selectedsensor.type",{"_index":1481,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["v.unit===item.unit",{"_index":1150,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["valid",{"_index":1376,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["value",{"_index":42,"title":{},"body":{"components/AboutCandidateComponent.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":485,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["values.length?data.push",{"_index":1484,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["values:array",{"_index":489,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["values=item.values.filter(v=>!v.unit?null:v.unit.tolowercase()===selectedsensor.unit?.tolowercase",{"_index":1480,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["var",{"_index":421,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1037,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1757,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1690,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":163,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["viewer",{"_index":1625,"title":{},"body":{"dependencies.html":{}}}],["visual",{"_index":1695,"title":{},"body":{"index.html":{}}}],["visualisation",{"_index":737,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["visualization",{"_index":1667,"title":{},"body":{"index.html":{}}}],["visually",{"_index":1679,"title":{},"body":{"index.html":{}}}],["void",{"_index":39,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{}}}],["volumes",{"_index":1723,"title":{},"body":{"index.html":{}}}],["volutives",{"_index":133,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["wait",{"_index":605,"title":{},"body":{"components/AppComponent.html":{}}}],["web",{"_index":1716,"title":{},"body":{"index.html":{}}}],["website",{"_index":1307,"title":{},"body":{"components/HeaderComponent.html":{}}}],["weight",{"_index":336,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["well",{"_index":1429,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["wether",{"_index":694,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["white",{"_index":931,"title":{},"body":{"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["width",{"_index":279,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["work",{"_index":1311,"title":{},"body":{"components/HeaderComponent.html":{}}}],["workflow",{"_index":1730,"title":{},"body":{"index.html":{}}}],["wrap",{"_index":930,"title":{},"body":{"components/ChartsComponent.html":{}}}],["x",{"_index":1203,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["x0=`${starttime[1]}/${starttime[3",{"_index":1211,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["xdata",{"_index":1146,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["xgroup:any=groupby(xdata.dayvalues,(d:any)=>d.x",{"_index":1154,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["xgroup[key].foreach((xd:any,id:number",{"_index":1160,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["y",{"_index":734,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["y.foreach((yd:any",{"_index":1159,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["y:any=obj.map((yd:any)=>({label:yd[0],ydata:groupby(yd[1][0].dayvalues,(f:any)=>f.x",{"_index":1156,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["ydata",{"_index":1148,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["year:\"2010",{"_index":221,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["year:\"2017",{"_index":212,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["year:\"2021",{"_index":206,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["year_company",{"_index":381,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["z",{"_index":615,"title":{},"body":{"components/AppComponent.html":{}}}],["zone.js",{"_index":1637,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":629,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutCandidateComponent.html":{"url":"components/AboutCandidateComponent.html","title":"component - AboutCandidateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutCandidateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about-candidate/about-candidate.component.ts\n\n\n\n    \n        Description\n    \n    \n        *About user component\nits for my own purpose and just showcases my Resumé\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about-candidate\n            \n\n\n\n            \n                styleUrls\n                ./about-candidate.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about-candidate.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/about-candidate/about-candidate.component.ts:127\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/about-candidate/about-candidate.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  labels: [\n    'Nodejs',\n    \"Nestjs\",\n    \"Angular\",\n    \"Reactjs\",\n    \"Python\",\n    \"Django\",\n    \"Flask\",\n    \"Recommender system\",\n    \"Machine learning\",\n    \"Clean Architecture\",\n    \"Microservice Architecture\",\n    'Cloud native app development',\n    \"Docker\",\n    \"UML\",\n    \"SCRUM/UP\",\n    \"JavaScript/TypeScript\"\n  ],\n  datasets: [{\n    label: 'Domaine de competence.',\n    data: [4.5,4.5,4.5,2.5,4,3,3,3,2.5,4,3,3,2.8,3,2.3,4.5],\n    borderColor: (()=>{\n      const bg:any=[]\n      for(let i=0;i{\n      const bg:any=[]\n      for(let i=0;i\n                    \n                \n                    \n                        \n                                Defined in src/app/about-candidate/about-candidate.component.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  name:\"David Kouamé N'DRI\",\n  jobTitle:\"Sofware Engineer\",\n  photo:\"assets/david.png\",\n  email1:\"kouame.ndri1998@gmail.com\",\n  email2:\"kouame.ndri@supcom.tn\",\n  linkedIn:\"linkedin.com/in/kouamé-david-n-dri-1615a5186\",\n  phone:\"+216 27999299\",\n  address:\"Ariana, Tunisie\",\n  hobbies:[\n    'Football',\n    \"Musique\",\n    \"Internet\",\n    \"Lecture\"\n  ],\n  profile:`Ingénieur en génie logiciel avec deux (02) années de pratique dans le développement, la conception et la maintenance de logiciels.\n  Fortes compétences en résolution de problèmes, analyse de systèmes complexes et collaboration avec des équipes interfonctionnelles.\n  Expérience approfondie dans le développement de solutions logicielles robustes, évolutives et efficaces pour répondre aux besoins des utilisateurs et des clients.`,\n  experience:[\n    {\n      time:\"Mars 2023-Juin 2023\",\n      jobTitle:\"Remote software Developer\",\n      company:\"SeeWatch, Pau, Nouvelle Aquitaine France\",\n      descriptioon:[\n        \" Développement Backend avec Nodejs\",\n        \"conception de la base de données\",\n        \"\tUtilisation des API de paiement\",\n        \"\tdocumentation du code via Swagger.\",\n        ]\n    },\n    {\n      time:\"Depuis Juin 2022\",\n      jobTitle:\"Lead Developer\",\n      company:\"Aladin Technologies,Abidjan\",\n      descriptioon:[\n        \"Conception et développement\",\n        \"gestion de projet avec la methode UP\",\n        \"mise en place d’architectures logicielles robustes\",\n        \"développement basé sur les principes de Clean Architecture\"\n        ]\n    },\n    {\n      time:\"Février 2022- Juin 2022\",\n      jobTitle:\"Stage Ingénieur génie logiciel\",\n      company:\"Laboratoire Médiatron Sup’Com Tunisie\",\n      descriptioon:[\n        \"Conception et développement\",\n        \"Etat de l’art des systèmes de recomandation\",\n        \"modelisation d’un modèle basé sur l’approche Matrix Factorisation à l’aide des données implicites pour la mise en œuvre d’un système de recommendation de services \",\n        \"architecture microservices.\"\n        ]\n    }\n\n  ],\neducations:[\n\n  {\n   school:\"Sup'com Tunis\",\n   year:\"2021-2022\",\n   degree:\"Master systèmes d'information et  genie Logiciel \"\n  },\n  {\n    school:\"ESATIC, Abidjan\",\n    year:\"2017-2020\",\n    degree:\"Licence systèmes reseaux informatiques et telecom \"\n   },\n   {\n    school:\"Lycée Moderne Oumé.\",\n    year:\"2010-2017\",\n    degree:\"Baccalauréat scientifique option serie C. \"\n   }\n  ]\n}\n                    \n                \n                    \n                        \n                                Defined in src/app/about-candidate/about-candidate.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport Chart from 'chart.js/auto';\nimport { getRandomRgb } from 'src/utils';\n/**\n * *About user component\n * its for my own purpose and just showcases my Resumé\n */\n@Component({\n  selector: 'app-about-candidate',\n  templateUrl: './about-candidate.component.html',\n  styleUrls: ['./about-candidate.component.scss']\n})\nexport class AboutCandidateComponent implements OnInit {\nuser={\n  name:\"David Kouamé N'DRI\",\n  jobTitle:\"Sofware Engineer\",\n  photo:\"assets/david.png\",\n  email1:\"kouame.ndri1998@gmail.com\",\n  email2:\"kouame.ndri@supcom.tn\",\n  linkedIn:\"linkedin.com/in/kouamé-david-n-dri-1615a5186\",\n  phone:\"+216 27999299\",\n  address:\"Ariana, Tunisie\",\n  hobbies:[\n    'Football',\n    \"Musique\",\n    \"Internet\",\n    \"Lecture\"\n  ],\n  profile:`Ingénieur en génie logiciel avec deux (02) années de pratique dans le développement, la conception et la maintenance de logiciels.\n  Fortes compétences en résolution de problèmes, analyse de systèmes complexes et collaboration avec des équipes interfonctionnelles.\n  Expérience approfondie dans le développement de solutions logicielles robustes, évolutives et efficaces pour répondre aux besoins des utilisateurs et des clients.`,\n  experience:[\n    {\n      time:\"Mars 2023-Juin 2023\",\n      jobTitle:\"Remote software Developer\",\n      company:\"SeeWatch, Pau, Nouvelle Aquitaine France\",\n      descriptioon:[\n        \" Développement Backend avec Nodejs\",\n        \"conception de la base de données\",\n        \"\tUtilisation des API de paiement\",\n        \"\tdocumentation du code via Swagger.\",\n        ]\n    },\n    {\n      time:\"Depuis Juin 2022\",\n      jobTitle:\"Lead Developer\",\n      company:\"Aladin Technologies,Abidjan\",\n      descriptioon:[\n        \"Conception et développement\",\n        \"gestion de projet avec la methode UP\",\n        \"mise en place d’architectures logicielles robustes\",\n        \"développement basé sur les principes de Clean Architecture\"\n        ]\n    },\n    {\n      time:\"Février 2022- Juin 2022\",\n      jobTitle:\"Stage Ingénieur génie logiciel\",\n      company:\"Laboratoire Médiatron Sup’Com Tunisie\",\n      descriptioon:[\n        \"Conception et développement\",\n        \"Etat de l’art des systèmes de recomandation\",\n        \"modelisation d’un modèle basé sur l’approche Matrix Factorisation à l’aide des données implicites pour la mise en œuvre d’un système de recommendation de services \",\n        \"architecture microservices.\"\n        ]\n    }\n\n  ],\neducations:[\n\n  {\n   school:\"Sup'com Tunis\",\n   year:\"2021-2022\",\n   degree:\"Master systèmes d'information et  genie Logiciel \"\n  },\n  {\n    school:\"ESATIC, Abidjan\",\n    year:\"2017-2020\",\n    degree:\"Licence systèmes reseaux informatiques et telecom \"\n   },\n   {\n    school:\"Lycée Moderne Oumé.\",\n    year:\"2010-2017\",\n    degree:\"Baccalauréat scientifique option serie C. \"\n   }\n  ]\n}\n\ndata:any = {\n  labels: [\n    'Nodejs',\n    \"Nestjs\",\n    \"Angular\",\n    \"Reactjs\",\n    \"Python\",\n    \"Django\",\n    \"Flask\",\n    \"Recommender system\",\n    \"Machine learning\",\n    \"Clean Architecture\",\n    \"Microservice Architecture\",\n    'Cloud native app development',\n    \"Docker\",\n    \"UML\",\n    \"SCRUM/UP\",\n    \"JavaScript/TypeScript\"\n  ],\n  datasets: [{\n    label: 'Domaine de competence.',\n    data: [4.5,4.5,4.5,2.5,4,3,3,3,2.5,4,3,3,2.8,3,2.3,4.5],\n    borderColor: (()=>{\n      const bg:any=[]\n      for(let i=0;i{\n      const bg:any=[]\n      for(let i=0;i{\n          const bg:any=[]\n          for(let i=0;i{\n          const bg:any=[]\n          for(let i=0;i\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n                \n            \n            \n            {{user.name}} {{user.jobTitle}} \n        \n\n        \n            Contacts\n            \n                \n                    \n                    {{user.phone}}\n                \n                \n                    \n                    {{user.email1}}\n                \n                \n                  \n                  {{user.email2}}\n              \n                \n                    \n                    \n                    \n                      {{user.linkedIn}}\n                    \n                \n                \n                    \n                    {{user.address}}\n                \n            \n        \n        \n            Education\n            \n                \n                    {{item.year}}\n                    {{item.degree}}\n                    {{item.school}}\n                \n\n            \n        \n        \n            Languages\n            \n                \n                    Anglais\n                    \n                        \n                    \n                \n            \n\n\n            \n                \n                    Français\n                    \n                        \n                    \n                \n            \n          \n\n        \n    \n        \n            Profil professionnel\n            \n              {{user.profile}}\n            \n        \n        \n            Experience\n            \n                \n                    {{item.time}}\n                    {{item.company}}\n                \n                \n                    {{item.jobTitle}}\n                    \n                      \n                            {{el}}\n                      \n                    \n                \n            \n\n\n        \n        \n            Competences\n            \n        \n        \n            Centres d’intérêts\n            \n\n        \n\n\n    \n    -->\n\n\n\n\n    \n\n    \n                \n                    ./about-candidate.component.scss\n                \n                @import url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700;800;900&display=swap\");\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: \"Poppins\", SansSerif;\n}\n\n.ed{\n  position: relative;\n  padding: 0%;\n}\n\n\n.container {\n  position: absolute;\n  width: 100%;\n  max-width: 1000px;\n  min-height: 1000px;\n  background-color: #fff;\n  margin: 50px;\n  display: grid;\n  left: 200px;\n  top:60px;\n  grid-template-columns: 1fr 2fr;\n  box-shadow: 0 35px 55px rgba(0, 0, 0, 0.1);\n}\n.container .left_Side {\n  position: relative;\n  background-color: #003147;\n  padding: 40px;\n}\n.profileText {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 20px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n}\n.profileText .imgBx {\n  position: relative;\n  width: 200px;\n  height: 200px;\n  border-radius: 50%;\n  overflow: hidden;\n}\n.profileText .imgBx img {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n.photo {\n  width: 100%;\n  height: auto;\n}\n.profileText h2 {\n  color: #fff;\n  font-size: 1.5em;\n  margin-top: 20px;\n  text-transform: uppercase;\n  text-align: center;\n  font-weight: 600;\n  line-height: 1.4em;\n}\n.profileText h2 span {\n  font-size: 0.8em;\n  font-weight: 300;\n}\n.contactInfo {\n  padding-top: 20px;\n}\n.title {\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: 600;\n  letter-spacing: 1px;\n  margin-bottom: 20px;\n}\n.contactInfo ul {\n  position: relative;\n}\n.contactInfo ul li {\n  list-style: none;\n  position: relative;\n  margin: 10px 0;\n  cursor: pointer;\n}\n.contactInfo ul li .icon {\n  display: inline-block;\n  width: 30px;\n  font-size: 18px;\n  color: #03a9f4;\n}\n.contactInfo ul li span {\n  color: #fff;\n  font-weight: 300;\n}\n.contactInfo.education li {\n  margin-bottom: 15px;\n}\n.contactInfo.education h5 {\n  color: #03a9f4;\n  font-weight: 400;\n}\n.contactInfo.education h4:nth-child(2) {\n  color: #fff;\n  font-weight: 300;\n}\n.contactInfo.education h4 {\n  color: #fff;\n  font-weight: 200;\n}\n.contactInfo.language .percent {\n  position: relative;\n  width: 100%;\n  height: 6px;\n  background-color: #081921;\n  display: block;\n  margin-top: 5px;\n}\n.contactInfo.language .percent div {\n  position: relative;\n  top: 0;\n  left: 0;\n  height: 100%;\n  background-color: #03a9f4;\n}\n.container .right_Side {\n  position: relative;\n  background-color: #fff;\n  padding: 40px;\n}\n.about {\n  margin-bottom: 50px;\n}\n.about:last-child {\n  margin-bottom: 0;\n}\n.title2 {\n  color: #003147;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  margin-bottom: 10px;\n}\np {\n  color: #081921;\n}\n.about .box {\n  display: flex;\n  flex-direction: row;\n  margin: 10px 0;\n}\n.about .box .year_company {\n  min-width: 350px;\n  margin-right: 10px;\n}\n.about .box .year_company h5 {\n  text-transform: uppercase;\n  color: #080fe1;\n  font-weight: 350;\n}\n.about .box .text h4 {\n  text-transform: uppercase;\n  color: #080fe1;\n  font-size: 16px;\n}\n.skills .box {\n  position: relative;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 150px 1fr;\n  justify-content: center;\n  align-items: center;\n}\n.skills .box h4 {\n  text-transform: uppercase;\n  color: #848c90;\n  font-weight: 300;\n}\n.skills .box .percent {\n  position: relative;\n  width: 100%;\n  height: 10px;\n  background-color: #f0f0f0;\n}\n.skills .box .percent div {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  background-color: #03a9f4;\n}\n.interest ul {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n}\n.interest ul li {\n  list-style: none;\n  color: black;\n  font-weight: 500;\n  margin: 10px 0;\n}\n.interest ul li .fa {\n  color: #03a9f4;\n  font-size: 18px;\n  width: 20px;\n}\n@media (max-width: 1000px) {\n  .container {\n    margin: 10px;\n    grid-template-columns: repeat(1, 1fr);\n  }\n  .interest ul {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n@media (max-width: 600px) {\n  .about .box {\n    flex-direction: column;\n  }\n  .about .box .year_company {\n    margin-bottom: 5px;\n  }\n  .interest ul {\n    grid-template-columns: repeat(1, 1fr);\n  }\n  .skills .box {\n    grid-template-columns: repeat(1, 1fr);\n  }\n}\n.englishw85 {\n  width: 85%;\n}\n.russianw90 {\n  width: 90%;\n}\n.frenchw100 {\n  width: 100%;\n}\n.htmlws30 {\n  width: 50%;\n}\n.cssws45 {\n  width: 45%;\n}\n.jsws70 {\n  width: 70%;\n}\n.phws40 {\n  width: 40%;\n}\n.ilws60 {\n  width: 60%;\n}\n.adw70 {\n  width: 70%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{user.name}} {{user.jobTitle}}                             Contacts                                                                    {{user.phone}}                                                                        {{user.email1}}                                                                    {{user.email2}}                                                                                                                {{user.linkedIn}}                                                                                            {{user.address}}                                                        Education                                                {{item.year}}                    {{item.degree}}                    {{item.school}}                                                        Languages                                                Anglais                                                                                                                                            Français                                                                                                                                      Profil professionnel                          {{user.profile}}                                        Experience                                                {{item.time}}                    {{item.company}}                                                    {{item.jobTitle}}                                                                      {{el}}                                                                                                  Competences                                        Centres d’intérêts                            -->'\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutCandidateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiInterface.html":{"url":"interfaces/ApiInterface.html","title":"interface - ApiInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/api/api.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Here is the api interface\nwe gather here all the different api call usecases\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getCurrentValues\n                                    \n                                \n                                \n                                    \n                                        getHourlyAvg\n                                    \n                                \n                                \n                                    \n                                        getLatestTransmissionStatus\n                                    \n                                \n                                \n                                    \n                                        getRange\n                                    \n                                \n                                \n                                    \n                                        getSessionInfo\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentValues\n                        \n                    \n                \n            \n            \n                \ngetCurrentValues(stationName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/api/api.interface.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHourlyAvg\n                        \n                    \n                \n            \n            \n                \ngetHourlyAvg(station: string, start: string, end: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/api/api.interface.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLatestTransmissionStatus\n                        \n                    \n                \n            \n            \n                \ngetLatestTransmissionStatus(stationId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/api/api.interface.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stationId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRange\n                        \n                    \n                \n            \n            \n                \ngetRange(station: string, start: string, end: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/api/api.interface.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSessionInfo\n                        \n                    \n                \n            \n            \n                \ngetSessionInfo(projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/api/api.interface.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\n/**\n * used as return type of api calls for getting cirrent stations values\n */\nexport interface CurrentValuesSchema{\n    station_name: string,\n    timestamp: string,\n    values:Array\n\n}\n/**\n * used as type of the return values of calling api to retrieve stations' information\n */\nexport interface SessionInfoSchema{\n  station: string,\n  description: string,\n  sessiond_id: number,\n  integrated_sensors: Array\n}\n\n/**\n * this is typicaly for difered mode data retrieving the api call should return data as type this interface.\n */\nexport interface RangeDataSchema{\n  raw_data:Array\n  station:string\n}\n\n/**\n * this interface represents data type of api calls to retrieve the last transmission status of given station\n */\nexport interface LatestTransmissionsResponseScema\n  {\n    last_transmission_utc: string,\n    latitude: string,\n    longitude: number,\n    station_id: number,\n    station_name: string\n  }\n\n  /**\n   * Here is the api interface\n   * we gather here all the different api call usecases\n   */\nexport interface ApiInterface {\n  getCurrentValues(stationName:string):Observable\n  getSessionInfo(projectName:string):Observable>\n  getRange(station:string,start:string,end:string):Observable\n  getHourlyAvg(station:string,start:string,end:string):Observable\n  getLatestTransmissionStatus(stationId:number):Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiProxyModule.html":{"url":"modules/ApiProxyModule.html","title":"module - ApiProxyModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiProxyModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/@core/api-proxy/api-proxy.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Api proxy module\nhere we setup configuration of the different api usecases\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {  NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ApiResourceService } from '../api/api.resource.service';\nimport { DiferredModeUsecases } from '..';\nimport { RealTimeUseCases } from 'src/UseCases';\n/**\n * Api proxy module\n * here we setup configuration of the different api usecases\n *\n */    \n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers:[\n\n  {\n    provide:'api',\n    useClass:ApiResourceService\n  },\n\n  {\n    provide:\"diferred:mode\",\n    useClass:DiferredModeUsecases\n  },\n  {\n    provide:'realTime:mode',\n    useClass:RealTimeUseCases\n  }\n\n],\nexports:[]\n})\nexport class ApiProxyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiResourceService.html":{"url":"injectables/ApiResourceService.html","title":"injectable - ApiResourceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiResourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/api/api.resource.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Api resource service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentValues\n                            \n                            \n                                getHourlyAvg\n                            \n                            \n                                getLatestTransmissionStatus\n                            \n                            \n                                getRange\n                            \n                            \n                                getSessionInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/@core/api/api.resource.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentValues\n                        \n                    \n                \n            \n            \n                \ngetCurrentValues(stationName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/api/api.resource.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHourlyAvg\n                        \n                    \n                \n            \n            \n                \ngetHourlyAvg(station: string, start: string, end: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/api/api.resource.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLatestTransmissionStatus\n                        \n                    \n                \n            \n            \n                \ngetLatestTransmissionStatus(stationId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/api/api.resource.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stationId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRange\n                        \n                    \n                \n            \n            \n                \ngetRange(station: string, start: string, end: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/api/api.resource.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSessionInfo\n                        \n                    \n                \n            \n            \n                \ngetSessionInfo(projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/api/api.resource.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.baseApi\n                    \n                \n                    \n                        \n                                Defined in src/@core/api/api.resource.service.ts:16\n                        \n                    \n\n            \n                \n                    based api endpoint url\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiInterface, CurrentValuesSchema, LatestTransmissionsResponseScema, RangeDataSchema, SessionInfoSchema } from 'src/domain';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\n/**\n * Api resource service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiResourceService implements ApiInterface {\n  /**\n   * based api endpoint url\n   */\n  baseApi:string=environment.baseApi;\n  constructor(private readonly http:HttpClient) { }\n/**\n *\n * @param stationId\n * @returns\n */\n\n  getLatestTransmissionStatus(stationId: number): Observable {\n    return this.http.get(`${this.baseApi}${'getStationStatus'}/${stationId}`)\n  }\n/**\n *\n * @param station\n * @param start\n * @param end\n * @returns\n */\n  getHourlyAvg(station:string,start:string,end:string): Observable {\n    return this.http.get(`${this.baseApi}getHourlyAvg/${station}/${start}/${end}?pivot=${true}`)\n  }\n/**\n *\n * @param stationName\n * @returns\n */\n  getCurrentValues(stationName: string): Observable {\n    return this.http.get(this.baseApi+`getCurrentValues/${stationName}`)\n  }\n/**\n *\n * @param projectName\n * @returns\n */\n  getSessionInfo(projectName: string): Observable {\n    return this.http.get(this.baseApi+`getSessionInfo/${projectName}`)\n  }\n\n/**\n *\n * @param station\n * @param start\n * @param end\n * @returns\n */\n  getRange(station:string,start:string,end:string): Observable {\n    return this.http.get(this.baseApi+`getRange/${station}/${start}/${end}`)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        the main component that handles the transition between different components and modules\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isLoading\n                            \n                            \n                                spinning\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(isLoading: IsLoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isLoading\n                                                  \n                                                        \n                                                                        IsLoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n            \n                \n                        executed once the component got initiated\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IsLoadingService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spinning\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { IsLoadingService } from 'src/@core';\n\n/**\n * the main component that handles the transition between different components and modules\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  spinning=false\n  constructor( public isLoading:IsLoadingService){}\n  /**\n   * executed once the component got initiated\n   */\n  ngOnInit(): void {\n    /**\n     * we wait a 1ms for things to be setted up.\n     */\n    setTimeout(()=>{\n      this.isLoading.load.subscribe((res:boolean)=>{\n        this.spinning=res\n      })\n    },1000)\n\n  }\n\n\n}\n\n    \n\n    \n        \n\n \n  \n \n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n\n\n.setting{\n  position: fixed;\n  z-index:0;\n  left:0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  text-align: center;\n  img{\n    position: relative;\n    top: 50%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAboutCandidateComponent\n\nAboutCandidateComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutCandidateComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApiProxyModule\n\nApiProxyModule\n\nAppModule -->\n\nApiProxyModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAq54HttpInterceptor\n\nAq54HttpInterceptor\n\nAppModule -->\n\nAq54HttpInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            main module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutCandidateComponent\n                        \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            Aq54HttpInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiProxyModule\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http'\nimport { ApiProxyModule, Aq54HttpInterceptor } from 'src/@core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from './shared';\nimport { AboutCandidateComponent } from './about-candidate/about-candidate.component';\n/**\n * main module \n */\n@NgModule({\n  declarations: [\n    AppComponent,\n    AboutCandidateComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    ApiProxyModule,\n    RouterModule,\n    SharedModule\n  ],\n  bootstrap: [AppComponent],\n  schemas:[CUSTOM_ELEMENTS_SCHEMA],\n  providers:[\n    {\n      provide:HTTP_INTERCEPTORS,\n      multi:true,\n      useClass:Aq54HttpInterceptor\n    }\n  ]\n})\n\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AboutCandidateComponent } from './about-candidate/about-candidate.component';\n/**\n * App routing\n * this module should load all the different routing module\n * and map each route request to the corresponding route\n */\nconst routes: Routes = [\n   {\n    path:'',\n    redirectTo:'/visualisation/real-time',\n    pathMatch:'full'\n   },\n\n   {\n    component:AboutCandidateComponent,\n    path:'david'\n   },\n\n  {\n    path:'visualisation',\n    loadChildren:()=>\"import('./features').then(m=>m.FeaturesModule)\"\n  },\n  {\n    path:'**',\n    redirectTo:'/visualisation/real-time',\n    pathMatch:'full'\n   },\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{ scrollPositionRestoration: 'enabled',preloadingStrategy:PreloadAllModules})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/Aq54HttpInterceptor.html":{"url":"interceptors/Aq54HttpInterceptor.html","title":"interceptor - Aq54HttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  Aq54HttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/Interceptor/http-interceptor.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                We intercept every api call to setup the spinner\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loader: IsLoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/@core/Interceptor/http-interceptor.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        IsLoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/Interceptor/http-interceptor.interceptor.ts:28\n                        \n                    \n\n\n            \n                \n                        \nintercept\nis an implementation of\nHttpInterceptor fron Angular common http\nwe intercept every request and decide wether to enable spinner or not\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IsLoadingService\n\n                    \n                \n                    \n                        \n                                Defined in src/@core/Interceptor/http-interceptor.interceptor.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable,throwError } from 'rxjs';\nimport { catchError,finalize } from 'rxjs/operators';\n\nimport { IsLoadingService } from '../Preloader/is-loading.service';\n/**\n * We intercept every api call to setup the spinner\n */\n@Injectable()\nexport class Aq54HttpInterceptor implements HttpInterceptor {\n\n  constructor(public loader:IsLoadingService) {}\n/**\n ** intercept\n is an implementation of\n ** HttpInterceptor fron Angular common http\n we intercept every request and decide wether to enable spinner or not\n * @param request\n * @param next\n * @returns\n */\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n   if(request.url.includes('getRange')||request.url.includes('getSessionInfo')){\n      this.loader.setLoading(true)\n      return next.handle(request).pipe(\n        finalize(()=>{\n            this.loader.setLoading(false);\n        }),\n        catchError((error:any)=>{\n          this.loader.setLoading(false);\n          //console.log(error)\n          return throwError(error)\n        })\n        )\n   }else{\n    return next.handle(request)\n   }\n\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartAnimation.html":{"url":"interfaces/ChartAnimation.html","title":"interface - ChartAnimation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartAnimation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/chart.ts\n        \n\n\n            \n                Description\n            \n            \n                used as type of chart animation option\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tension\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tension:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Chart } from \"chart.js/auto\"\nimport { CurrentValuesSchema } from \"./api/api.interface\"\n/**\n * used as type  of chart title\n */\nexport\ninterface chartTitle{\n  display:boolean\n  text:string\n  color:string\n}\n/**\n * used as type of chart animation option\n */\nexport interface ChartAnimation{\n    tension: {\n      duration:number,\n      easing: string,\n      from: number,\n      to: number,\n      loop: boolean\n    }\n\n}\n/**\n * chartbar data requirements type\n */\nexport interface ChartBarDataInterface{\n\n    labels:string[]\n    datasets: Array\n  options: {\n    scales: {\n      y: {\n        beginAtZero: boolean,\n        min: number,\n        max: number\n      }\n    }\n  }\n\n\n}\n\n/**\n * Used in both diferred mode data visualisation and real time data\n * visualisation compenents as interface of methods to be implemented.\n */\nexport interface chartBuilder{\n  chartData():CurrentValuesSchema[]|any\n  updateScatter(...args:any):void\n}\n/**\n * Should be implemented in diferred mode data visualisation\n * to setup data requirements\n */\nexport interface DiferedComponentInterface{\n  barBasedChart(...args:any):void\n  scatterBasedChart(...args:any):void\n  builder(...args:any):any\n}\n\n\n/**\n *  Should be implemented in real time mode data visualisation\n * to setup data requirements\n */\nexport interface RealTimeChartComponentInterface{\n  initChartBar(...args:any):Chart\n  initScatter(...args:any):void\n  scatterData(...args:any):any\n  onChartsInit(...args:any):void\n  updateTimeSeries(...args:any):any\n  updateData(...args:any):any\n  OntimeSerieChartInit(...args:any):void\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartBarDataInterface.html":{"url":"interfaces/ChartBarDataInterface.html","title":"interface - ChartBarDataInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartBarDataInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/chart.ts\n        \n\n\n            \n                Description\n            \n            \n                chartbar data requirements type\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            datasets\n                                        \n                                \n                                \n                                        \n                                            labels\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        datasets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        datasets:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labels:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Chart } from \"chart.js/auto\"\nimport { CurrentValuesSchema } from \"./api/api.interface\"\n/**\n * used as type  of chart title\n */\nexport\ninterface chartTitle{\n  display:boolean\n  text:string\n  color:string\n}\n/**\n * used as type of chart animation option\n */\nexport interface ChartAnimation{\n    tension: {\n      duration:number,\n      easing: string,\n      from: number,\n      to: number,\n      loop: boolean\n    }\n\n}\n/**\n * chartbar data requirements type\n */\nexport interface ChartBarDataInterface{\n\n    labels:string[]\n    datasets: Array\n  options: {\n    scales: {\n      y: {\n        beginAtZero: boolean,\n        min: number,\n        max: number\n      }\n    }\n  }\n\n\n}\n\n/**\n * Used in both diferred mode data visualisation and real time data\n * visualisation compenents as interface of methods to be implemented.\n */\nexport interface chartBuilder{\n  chartData():CurrentValuesSchema[]|any\n  updateScatter(...args:any):void\n}\n/**\n * Should be implemented in diferred mode data visualisation\n * to setup data requirements\n */\nexport interface DiferedComponentInterface{\n  barBasedChart(...args:any):void\n  scatterBasedChart(...args:any):void\n  builder(...args:any):any\n}\n\n\n/**\n *  Should be implemented in real time mode data visualisation\n * to setup data requirements\n */\nexport interface RealTimeChartComponentInterface{\n  initChartBar(...args:any):Chart\n  initScatter(...args:any):void\n  scatterData(...args:any):any\n  onChartsInit(...args:any):void\n  updateTimeSeries(...args:any):any\n  updateData(...args:any):any\n  OntimeSerieChartInit(...args:any):void\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChartsComponent.html":{"url":"components/ChartsComponent.html","title":"component - ChartsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChartsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/charts/charts.component.ts\n\n\n\n    \n        Description\n    \n    \n        \nChart component\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-charts\n            \n\n\n\n            \n                styleUrls\n                ./charts.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./charts.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                end\n                            \n                            \n                                selectedOption\n                            \n                            \n                                start\n                            \n                            \n                                today\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRange\n                            \n                            \n                                changeStation\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onchartOptionChange\n                            \n                            \n                                onSensorChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                chartBarVis\n                            \n                            \n                                scatters\n                            \n                            \n                                selectedStation\n                            \n                            \n                                sensors\n                            \n                            \n                                stations\n                            \n                            \n                                times\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                chartBarVisChange\n                            \n                            \n                                sensorChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/charts/charts.component.ts:57\n                            \n                        \n\n                \n                    \n                            We inject the\n*activatedRoute of Angular in our component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        activeRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                We inject the\n*activatedRoute of Angular in our component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chart\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'real-time-chart'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        chartBarVis\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scatters\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedStation\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SMART188'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sensors\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stations\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        times\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:35\n                            \n                        \n                \n                    \n                        \ninput properties are declared here\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'visualisation temps réel.'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:40\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        chartBarVisChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sensorChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:44\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeRange\n                        \n                    \n                \n            \n            \n                \nchangeRange(station: string, message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/charts/charts.component.ts:110\n                        \n                    \n\n\n            \n                \n                        executed when range got changed\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeStation\n                        \n                    \n                \n            \n            \n                \nchangeStation(ev: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/charts/charts.component.ts:84\n                        \n                    \n\n\n            \n                \n                        executed when staion got changed\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ev\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/charts/charts.component.ts:70\n                        \n                    \n\n\n            \n                \n                        exected once the component is loaded and subscibe to routing\n\nAngular queryParams\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onchartOptionChange\n                        \n                    \n                \n            \n            \n                \nonchartOptionChange(event: Event | any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/charts/charts.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSensorChange\n                        \n                    \n                \n            \n            \n                \nonSensorChange(event: Event | any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/charts/charts.component.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : moment().format('YYYY-MM-DD')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/charts/charts.component.ts:53\n                        \n                    \n\n            \n                \n                    the range end string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOption\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/charts/charts.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : moment().subtract(1,'days').format('YYYY-MM-DD')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/charts/charts.component.ts:49\n                        \n                    \n\n            \n                \n                    the range start string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Default value : moment().format('YYYY-MM-DD')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/charts/charts.component.ts:57\n                        \n                    \n\n            \n                \n                    the date of the day\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport * as moment from 'moment';\nimport { SweetAlert } from 'sweetalert/typings/core';\n/**\n * Declare require as a const and type any\n */\ndeclare const require:any\n/**\n * we declare swal as var and type\n * *SweetAlert\n */\ndeclare var swal:SweetAlert\n/**\n * then we require swal\n */\nswal=require('sweetalert')\n/**\n ** Chart component\n *\n */\n@Component({\n  selector: 'app-charts',\n  templateUrl: './charts.component.html',\n  styleUrls: ['./charts.component.scss']\n})\n/**\n * The chart component\n * is call in both real time mode and diferred mode data visualisation component.\n */\nexport class ChartsComponent implements OnInit {\n/**\n ** input properties are declared here\n */\n@Input('times') times:any[]=[];\n@Input('scatters') scatters:any[]=[];\n@Input('stations') stations:any[]=[];\n@Input('chart') chart='real-time-chart'\n@Input('selectedStation') selected='SMART188'\n@Input('title') title='visualisation temps réel.'\n@Input('chartBarVis') chartBarVis:any=null\n@Input('sensors') sensors:any=null\n@Output('chartBarVisChange') chatBarVisChange= new EventEmitter()\n@Output('sensorChange') sensorChange = new EventEmitter()\nselectedOption:any=null\n/**\n * the range start string\n */\nstart:string=moment().subtract(1,'days').format('YYYY-MM-DD')\n/**\n *the range end string\n */\nend:string=moment().format('YYYY-MM-DD')\n/**\n * the date of the day\n */\ntoday=moment().format('YYYY-MM-DD')\n/**\n *\n * @param activeRoute\n * We inject the\n * *activatedRoute of Angular in our component\n */\nconstructor(private readonly activeRoute:ActivatedRoute) { }\n\n/**\n * exected once the component is loaded and subscibe to routing\n * * Angular queryParams\n */\n  ngOnInit(): void {\n    this.activeRoute.queryParams.subscribe((param:any)=>{\n      const {start,end,station}=param\n      start?this.start=start:null;\n      end?this.end=end:null;\n      station?this.selected=station:null\n    })\n  }\n\n\n/**\n *executed when staion got changed\n * @param ev\n */\n  changeStation(ev:any){\n  const station =ev?.target.value;\n  if(station){\n    if(moment(this.end).format('YYYY-MM-DD')!=moment().subtract(1,'days').format('YYYY-MM-DD')||moment(this.start).format('YYYY-MM-DD')!=this.today){\n     this.changeRange(station,'vous allez changer la plage de temps et la station des capteurs.')\n    }else{\n\n      swal({\n        text:'vous allez changer de station de capteur',\n        icon:'warning',\n        buttons: {\n         cancel: true,\n         confirm: true,\n       }\n     }).then(res=>{\n     res?location.href=`${'/visualisation/diferred?station'}=${station}`:null\n     })\n    }\n  }\n}\n\n/**\n *executed when range got changed\n * @param station\n * @param message\n */\nchangeRange(station:string='',message=''){\n  if(moment(this.end).format('YYYY-MM-DD')!=moment().subtract(1,'days').format('YYYY-MM-DD')||moment(this.start).format('YYYY-MM-DD')!=this.today){\n\n    const diff= moment(this.end).diff(moment(this.start),'days')\n\n    diff{this.end=moment(this.end).add(Math.abs(diff),'days').format('YYYY-MM-DD');this.start=moment(this.start).subtract(Math.abs(diff),'days').format('YYYY-MM-DD') })():null\n\n    if(diff{\n      if(resp){\n       station?location.href=`${'/visualisation/diferred?station'}=${station}&&start=${moment(this.start).format('YYYY-MM-DD')}&&end=${moment(this.end).format('YYYY-MM-DD')}`:location.href=`${'/visualisation/diferred?station'}=${this.selected}&&start=${moment(this.start).format('YYYY-MM-DD')}&&end=${moment(this.end).format('YYYY-MM-DD')}`\n      }\n    })\n  }else{\n    swal({\n      icon:'error',\n      text:'le nombre de jours ne doit pas exceder 30 jours.'\n    })\n  }\n\n  }\n}\n\n\nonchartOptionChange(event:Event|any)\n{\n this.chatBarVisChange.emit(event.target?.value)\n}\n\nonSensorChange(event:Event|any){\n   this.sensorChange.emit(event.target.value)\n}\n}\n\n    \n\n    \n        \n  {{title}}\n\n  \n    \n      \n        Début\n       \n      \n      \n    \n\n    \n      \n        Fin\n     \n\n      \n      \n    \n\n    \n      \n        Stations\n        \n          {{item.station}}\n        \n      \n      \n    \n\n\n  \n   \n   \n    \n      {{item.label}}\n    \n  \n  \n\n    \n   \n\n   \n     \n    \n\n    \n\n    \n      \n        {{item.sensor}}\n      \n     \n\n    \n\n      \n     \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./charts.component.scss\n                \n                \n.title{\n  position: relative;\n  top: 6px;\n  left: auto;\n  text-transform: uppercase;\n  margin-bottom: 10px;\n  text-align: center;\n  text-decoration: underline;\n\n}\n\n\n#charbarp{\n  position:relative;\n  background-color: #105192;\n\n}\n#scattersensor{\n  position:relative;\n // background-color: #105192;\n\n}\n\n.content {\n  margin: 82px auto 32px;\n  padding: 0 1px;\n  max-width: 980px;\n  align-items: center;\n}\n\nsvg.material-icons {\n  height: 24px;\n  width: auto;\n}\n\nsvg.material-icons:not(:last-child) {\n  margin-right: 8px;\n}\n\n.card svg.material-icons path {\n  fill: #888;\n}\n\n.card-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: 16px;\n}\n\n\n.card a{\n  color: white;\n}\n\n.card {\n  all: unset;\n  border-radius: 4px;\n  border: 1px solid #eee;\n // background-color: #280df5;\n  color: rgb(75, 9, 207);\n  height: 40px;\n  width: 200px;\n  margin: 0 8px 16px;\n  padding: 16px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  transition: all 0.2s ease-in-out;\n  line-height: 24px;\n}\n\n.card-container .card:not(:last-child) {\n  margin-right: 0;\n}\n\n.card.card-small {\n  height: 16px;\n  width: 168px;\n}\n\n.card-container .card:not(.highlight-card) {\n  cursor: pointer;\n}\n\n.card-container .card:not(.highlight-card):hover {\n  transform: translateY(-3px);\n  box-shadow: 0 4px 17px rgba(0, 0, 0, 0.35);\n}\n\n.card-container .card:not(.highlight-card):hover .material-icons path {\n  fill: rgb(105, 103, 103);\n}\n\n.card.highlight-card {\n  background-color: #1976d2;\n  color: white;\n  font-weight: 600;\n  border: none;\n  width: auto;\n  min-width: 30%;\n  position: relative;\n}\n\n.card.card.highlight-card span {\n  margin-left: 60px;\n}\n\n\n\na,\na:visited,\na:hover {\n  color: #1976d2;\n  text-decoration: none;\n}\n\na:hover {\n  color: #125699;\n}\n\n\n.btn-primary{\nbackground-color: #0b043f;\nborder-radius: none;\n}\n\n.btn{\nborder-radius: none;\n}\n\n\n@media screen and (max-width: 767px) {\n  .card-container > *:not(.circle-link) ,\n\n\n  .card:not(.highlight-card) {\n    height: 16px;\n    margin: 8px 0;\n  }\n\n  .card.highlight-card span {\n    margin-left: 72px;\n  }\n\n\n}\n\nselect{\n  background-color: #0b043f;\n  color: white;\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{title}}                    Début                                         Fin                                       Stations                  {{item.station}}                                          {{item.label}}                                                 {{item.sensor}}                          '\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChartsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurrentValuesSchema.html":{"url":"interfaces/CurrentValuesSchema.html","title":"interface - CurrentValuesSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CurrentValuesSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/api/api.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                used as return type of api calls for getting cirrent stations values\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            station_name\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                        \n                                            values\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        station_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        values:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\n/**\n * used as return type of api calls for getting cirrent stations values\n */\nexport interface CurrentValuesSchema{\n    station_name: string,\n    timestamp: string,\n    values:Array\n\n}\n/**\n * used as type of the return values of calling api to retrieve stations' information\n */\nexport interface SessionInfoSchema{\n  station: string,\n  description: string,\n  sessiond_id: number,\n  integrated_sensors: Array\n}\n\n/**\n * this is typicaly for difered mode data retrieving the api call should return data as type this interface.\n */\nexport interface RangeDataSchema{\n  raw_data:Array\n  station:string\n}\n\n/**\n * this interface represents data type of api calls to retrieve the last transmission status of given station\n */\nexport interface LatestTransmissionsResponseScema\n  {\n    last_transmission_utc: string,\n    latitude: string,\n    longitude: number,\n    station_id: number,\n    station_name: string\n  }\n\n  /**\n   * Here is the api interface\n   * we gather here all the different api call usecases\n   */\nexport interface ApiInterface {\n  getCurrentValues(stationName:string):Observable\n  getSessionInfo(projectName:string):Observable>\n  getRange(station:string,start:string,end:string):Observable\n  getHourlyAvg(station:string,start:string,end:string):Observable\n  getLatestTransmissionStatus(stationId:number):Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiferedComponentInterface.html":{"url":"interfaces/DiferedComponentInterface.html","title":"interface - DiferedComponentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DiferedComponentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/chart.ts\n        \n\n\n            \n                Description\n            \n            \n                Should be implemented in diferred mode data visualisation\nto setup data requirements\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        barBasedChart\n                                    \n                                \n                                \n                                    \n                                        builder\n                                    \n                                \n                                \n                                    \n                                        scatterBasedChart\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        barBasedChart\n                        \n                    \n                \n            \n            \n                \nbarBasedChart(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        builder\n                        \n                    \n                \n            \n            \n                \nbuilder(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterBasedChart\n                        \n                    \n                \n            \n            \n                \nscatterBasedChart(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Chart } from \"chart.js/auto\"\nimport { CurrentValuesSchema } from \"./api/api.interface\"\n/**\n * used as type  of chart title\n */\nexport\ninterface chartTitle{\n  display:boolean\n  text:string\n  color:string\n}\n/**\n * used as type of chart animation option\n */\nexport interface ChartAnimation{\n    tension: {\n      duration:number,\n      easing: string,\n      from: number,\n      to: number,\n      loop: boolean\n    }\n\n}\n/**\n * chartbar data requirements type\n */\nexport interface ChartBarDataInterface{\n\n    labels:string[]\n    datasets: Array\n  options: {\n    scales: {\n      y: {\n        beginAtZero: boolean,\n        min: number,\n        max: number\n      }\n    }\n  }\n\n\n}\n\n/**\n * Used in both diferred mode data visualisation and real time data\n * visualisation compenents as interface of methods to be implemented.\n */\nexport interface chartBuilder{\n  chartData():CurrentValuesSchema[]|any\n  updateScatter(...args:any):void\n}\n/**\n * Should be implemented in diferred mode data visualisation\n * to setup data requirements\n */\nexport interface DiferedComponentInterface{\n  barBasedChart(...args:any):void\n  scatterBasedChart(...args:any):void\n  builder(...args:any):any\n}\n\n\n/**\n *  Should be implemented in real time mode data visualisation\n * to setup data requirements\n */\nexport interface RealTimeChartComponentInterface{\n  initChartBar(...args:any):Chart\n  initScatter(...args:any):void\n  scatterData(...args:any):any\n  onChartsInit(...args:any):void\n  updateTimeSeries(...args:any):any\n  updateData(...args:any):any\n  OntimeSerieChartInit(...args:any):void\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DiferredDataChartComponent.html":{"url":"components/DiferredDataChartComponent.html","title":"component - DiferredDataChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DiferredDataChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/diferred-data-chart/diferred-data-chart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                    chartBuilder\n                    DiferedComponentInterface\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-diferred-data-chart\n            \n\n\n\n            \n                styleUrls\n                ./diferred-data-chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./diferred-data-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                chartbarvisualisation\n                            \n                            \n                                chartPageTitle\n                            \n                            \n                                data\n                            \n                            \n                                ranges\n                            \n                            \n                                scatterChart\n                            \n                            \n                                scatters\n                            \n                            \n                                scatterSensors\n                            \n                            \n                                selectedStation\n                            \n                            \n                                sensors\n                            \n                            \n                                stations\n                            \n                            \n                                stationsInfo\n                            \n                            \n                                timeData\n                            \n                            \n                                timer\n                            \n                            \n                                times\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                barBasedChart\n                            \n                            \n                                    Async\n                                builder\n                            \n                            \n                                changeChartBarVisOption\n                            \n                            \n                                chartData\n                            \n                            \n                                clearTimer\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onSensorChange\n                            \n                            \n                                scatterBasedChart\n                            \n                            \n                                updateScatter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usecases: DiferredModeUsecases, activeRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usecases\n                                                  \n                                                        \n                                                                        DiferredModeUsecases\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activeRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        barBasedChart\n                        \n                    \n                \n            \n            \n                \nbarBasedChart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:249\n                        \n                    \n\n\n            \n                \n                        this method is used to build the chart bar\nthat showcases the distribution of data according to different sensors.\nYou ma change it to show the distribution of sensors' data according  to unit and timeStamp\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                        \n                    builder(st: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:87\n                        \n                    \n\n\n            \n                \n                        this method is called once the component is loaded\nit makes an api call to retrieve required data according to given parameters\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                st\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeChartBarVisOption\n                        \n                    \n                \n            \n            \n                \nchangeChartBarVisOption(item: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartData\n                        \n                    \n                \n            \n            \n                \nchartData(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:127\n                        \n                    \n\n\n            \n                \n                        when it calls it handle data structure required for the different graphs\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearTimer\n                        \n                    \n                \n            \n            \n                \nclearTimer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSensorChange\n                        \n                    \n                \n            \n            \n                \nonSensorChange(item: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterBasedChart\n                        \n                    \n                \n            \n            \n                \nscatterBasedChart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:299\n                        \n                    \n\n\n            \n                \n                        Here we have the scatter based chart.\nIt takes randomly one variable (sensor) and builds a scatter chart.\nIt make the a correlation between the given sensor and the others in term of value\nalign with the same unit and data transmission timeStamp\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateScatter\n                        \n                    \n                \n            \n            \n                \nupdateScatter(sensor: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:190\n                        \n                    \n\n\n            \n                \n                        this method selecte randomly a sensor to update the scatter graph\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                sensor\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart | any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartbarvisualisation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [{\n      label:\"Unité de mesure des capteurs\",\n      sensor:false,\n      selected:true\n    },\n     {\n       label:\"Capteurs\",\n       sensor:true,\n       selected:false\n    }]\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartPageTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Visualisation différée.'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:22\n                        \n                    \n\n            \n                \n                    class properties\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChartBarDataInterface | any\n\n                    \n                \n                \n                    \n                        Default value : {\n      labels: [],\n      datasets: [],\n    options: {\n      scales: {\n        y: {\n          beginAtZero: true,\n          min: 0,\n        }\n      }\n    }\n    }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n      start:moment().subtract(1,'days').format('YYYY-MM-DD'),\n      end:moment().format('YYYY-MM-DD')\n    }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterChart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart | any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatters\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterSensors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedStation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SMART188'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sensors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stationsInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SessionInfoSchema[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        times\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AQ54'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit ,Inject, OnDestroy} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport Chart from 'chart.js/auto';\nimport * as moment from 'moment';\nimport { DiferredModeUsecases, chartBardDataSets, getRandomRgb, groupBy, makeTitle, mapDiferedData, mapToLabels, stationDataLabels } from 'src/@core';\nimport {  ChartBarDataInterface, DiferedComponentInterface, SessionInfoSchema, chartBuilder } from 'src/domain';\n\n@Component({\n  selector: 'app-diferred-data-chart',\n  templateUrl: './diferred-data-chart.component.html',\n  styleUrls: ['./diferred-data-chart.component.scss']\n})\nexport class DiferredDataChartComponent implements OnInit,OnDestroy,chartBuilder,DiferedComponentInterface {\n\n    constructor(\n      @Inject('diferred:mode') private readonly usecases:DiferredModeUsecases,\n      private readonly activeRoute:ActivatedRoute,\n    ) { }\n/**\n * class properties\n */\n   chartPageTitle='Visualisation différée.'\n    scatters:string[]=[]\n    chartbarvisualisation=[{\n      label:\"Unité de mesure des capteurs\",\n      sensor:false,\n      selected:true\n    },\n     {\n       label:\"Capteurs\",\n       sensor:true,\n       selected:false\n    }]\n    scatterSensors:any=[];\n    times:string[]=[]\n    scatterChart:Chart|any=null\n    stationsInfo:SessionInfoSchema[]=[];\n    stations:any[]=[]\n    selectedStation:string='SMART188'\n    sensors:any=[]\n    ranges={\n      start:moment().subtract(1,'days').format('YYYY-MM-DD'),\n      end:moment().format('YYYY-MM-DD')\n    }\n    title = 'AQ54';\n    data:ChartBarDataInterface|any = {\n      labels: [],\n      datasets: [],\n    options: {\n      scales: {\n        y: {\n          beginAtZero: true,\n          min: 0,\n        }\n      }\n    }\n    }\n    chart:Chart|any;\n    timeData:any=[];\n    timer:any=null\n\n    async ngOnInit(): Promise{\n      this.activeRoute.queryParams.subscribe(async(param:any)=>{\n        const {station,start,end}=param\n        if(station && start && end){\n          this.ranges.end=end\n          this.ranges.start=start\n        this.builder(station)\n        }else{\n        station?this.builder(station):this.builder()\n        }\n      })\n\n\n    }\n\n    ngOnDestroy(): void {\n    this.clearTimer()\n    }\n\n  /**\n   *this method is called once the component is loaded\n  it makes an api call to retrieve required data according to given parameters\n  * @param st\n  */\n\n    async builder(st:string=''){\n    try{\n      if(st){\n        const {raw_data,station,sessionInfo:stationInfo} = await this.usecases.parallelExecution(st,this.ranges.start,this.ranges.end,this.title)\n        this.selectedStation=station;\n        this.stationsInfo =stationInfo;\n        this.stations=this.stationsInfo.map((item:SessionInfoSchema)=>({station:item.station,selected:item.station==this.selectedStation?true:false}));\n        const data:any= mapDiferedData(raw_data,this.stationsInfo[1].integrated_sensors);\n        this.chartData(data)\n      }else{\n        const {raw_data,station,sessionInfo}= await this.usecases.execute(this.ranges.start,this.ranges.end,this.title)\n        this.stationsInfo = sessionInfo\n        this.stations=this.stationsInfo.map((item:SessionInfoSchema,index:number)=>({station:item.station,selected:index==0}));\n        this.selectedStation=station;\n        const data:any= mapDiferedData(raw_data,this.stationsInfo[1].integrated_sensors);\n        this.chartData(data)\n      }\n\n      this.barBasedChart()\n      this.scatterBasedChart()\n        this.timer = setInterval(()=>{\n        this.updateScatter()\n      },50000)\n    }catch(err:any){\n      throw new Error(err.message)\n    }\n\n\n\n  }\n\nclearTimer(){\n  clearInterval(this.timer)\n\n}\n  /**\n   *when it calls it handle data structure required for the different graphs\n  * @param data\n  */\n\n  chartData(data:any=[]){\n\n    const labels= stationDataLabels(this.stationsInfo);\n    this.data.labels=labels;\n    const d= mapToLabels(data,labels);\n    const dt=chartBardDataSets(d);\n    this.data.datasets=dt;\n    this.timeData=dt;\n    this.timeData=this.timeData.map((item:any)=>({...item,group:Object.entries(groupBy(this.timeData,(t:any)=>t.unit)).map((e:any)=>({unit:e[0],values:e[1],label:item.label}))}))\n    const units:any[]=[];\n    this.timeData.forEach((item:any,index:any)=>{\n    const group=item.group.find((f:any)=>f.unit===item.unit&&!units.find(u=>u==f.unit))\n    const gp = item.group.find((g:any)=>g.unit===item.unit);\n    const xdata= gp?gp.values.find((v:any)=>v.label===item.label):null\n    const ydata = gp?gp.values.filter((v:any)=>v.label!=item.label && v.unit===item.unit):[]\n    const grp =groupBy(ydata,(g:any)=>g.label);\n  if(ydata.length&&xdata){\n  let xgroup:any=groupBy(xdata.dayValues,(d:any)=>d.x)\n  const obj=Object.entries(grp)\n  let y:any=obj.map((yd:any)=>({label:yd[0],ydata:groupBy(yd[1][0].dayValues,(f:any)=>f.x)}))\n  let dts:any=[]\n  Object.keys(xgroup).forEach((key:any)=>{\n    y.forEach((yd:any)=>{\n      xgroup[key].forEach((xd:any,id:number)=>{\n        dts.push({data:{y:yd.ydata[key][id].y,x:xd.y},label:`${yd.label}=f(${item.label})`})\n      })\n    })\n\n  })\n  item['dayVal']=groupBy(dts,(d:any)=>d.label)\n  }\n  units.push(group?.unit)\n  group?.values.forEach((v:any)=>{\n  item['gunit']=v.unit\n  item['dayData']?item['dayData']=item['dayData'].concat(v.dayValues):item['dayData']=v.dayValues;\n  item['monthData']?item['monthData']=item['monthData'].concat(v.monthDays):item['monthData']=v.monthDays\n  })\n  })\n\n  }\n\nchangeChartBarVisOption(item:any){\n // console.log(item)\n  if(item){\n //const config=  this.barBasedChart()\n\n  }\n // console.log(this.timeData,this.chart)\n}\n\n\nonSensorChange(item:any){\nif(item){\nthis.updateScatter(item)\nthis.clearTimer()\n }\n}\n\n\n  /**\n   * this method selecte randomly a sensor to update the scatter graph\n   *\n   */\n  updateScatter(sensor:string=''){\n    const dt = this.timeData.filter((item:any)=>item.dayVal)\n    const d=!sensor?dt[Math.floor(Math.random()*(dt.length-1))]:dt.find((s:any)=>s.label==sensor)\n    if(d){\n      const scatterConfig:any= {\n        type: 'scatter',\n        data:{\n          datasets:Object.entries(d.dayVal).map((item:any)=>{\n              const data= item[1].map((dt:any)=>({...dt.data}))\n              return {data,label:item[0]}\n          }),\n          backgroundColor:getRandomRgb(),\n        },\n        options: {\n          responsive:true,\n          plugins:{\n            legend: {\n              position: 'top',\n            },\n            title: makeTitle(`Correlation entre les donnés d'un capteur pris dans ${this.selectedStation} et le reste des capteurs selon l'unité de mesure ${d.unit}. et le temps de transmission des données.`)\n          },\n          scales:{\n            y:{\n              type:'linear',\n              beginAtZero: true,\n              title:makeTitle(`autres capteurs(${d.unit})`, getRandomRgb()),\n              position:'left',\n              ticks: {\n                color: getRandomRgb()\n              },\n\n            },\n            x:{\n              type:'linear',\n              position:'bottom',\n              beginAtZero: true,\n              title:makeTitle(`${d.label}(${d.unit})`,getRandomRgb()),\n              ticks: {\n                color: getRandomRgb()\n              },\n            },\n\n          }\n      }\n      }\n      this.scatterChart.options=scatterConfig.options\n      this.scatterChart.data=scatterConfig.data\n      this.scatterChart.update()\n    }\n\n\n    }\n\n  /**\n   * this method is used to build the chart bar\n   * that showcases the distribution of data according to different sensors.\n   * You ma change it to show the distribution of sensors' data according  to unit and timeStamp\n   *\n   */\n  barBasedChart(){\n  try{\n    const diffRange=moment(this.ranges.end).diff(moment(this.ranges.start),'days')>=30\n    const startTime=moment(this.ranges.start).toLocaleString().split(' ')\n    var x0=`${startTime[1]}/${startTime[3]}`\n    !diffRange?x0=`${startTime[2]}/${startTime[1]}`:null\n    const config:any=\n    {\n    type: 'bar',\n    data: {\n        datasets:this.timeData.filter((f:any)=>f.gunit).map((data:any)=>(\n          {\n            data:diffRange?data.monthData:data.dayData,\n            backgroundColor:getRandomRgb(),\n            borderColor:getRandomRgb(),\n            label:`${data.gunit}`,\n            fill:false,\n            tension:0.8\n        }\n        ))\n    },\n    options: {\n      responsive:true,\n      plugins:{\n        legend: {\n          position: 'top',\n        },\n        title: makeTitle(`Distribution temporelle des données selon le type de capteur  dans la station ${this.selectedStation}`)\n      },\n      scales: {\n          x: {\n              min:x0\n          }\n      }\n  }\n  }\n  !this.chart?this.chart=new Chart('chart',config):null\n  return config\n  }catch(err:any){\n  throw new Error(err.message)\n  }\n\n  }\n\n  /**\n   * Here we have the scatter based chart.\n   * It takes randomly one variable (sensor) and builds a scatter chart.\n   * It make the a correlation between the given sensor and the others in term of value\n   * align with the same unit and data transmission timeStamp\n   */\n  scatterBasedChart(){\n    const dt = this.timeData.filter((item:any)=>item.dayVal)\n    const d=dt[Math.floor(Math.random()*(dt.length-1))]\n    this.scatterSensors.push({sensor:d.label,selected:true})\n    this.scatterSensors=this.scatterSensors.concat(dt.filter((f:any)=>f.label!=d.label).map((sc:any)=>({sensor:sc.label,selected:false})))\n    if(d){\n      const scatterConfig:any= {\n        type: 'scatter',\n        data:{\n          datasets:Object.entries(d.dayVal).map((item:any)=>{\n              const data= item[1].map((dt:any)=>({...dt.data}))\n              return {data,label:item[0]}\n          }),\n\n          backgroundColor:getRandomRgb(),\n\n        },\n        options: {\n          responsive:true,\n          plugins:{\n            legend: {\n              position: 'top',\n            },\n\n            title:makeTitle(`Correlation entre les donnés d'un capteur pris de façon aleatoire dans ${this.selectedStation} et le reste des capteurs selon l'unité de mesure ${d.unit}. et le temps de transmission des données.`)\n          },\n          scales:{\n            y:{\n              type:'linear',\n              beginAtZero: true,\n              title:makeTitle(`autres capteurs(${d.unit})`,getRandomRgb()),\n              position:'left',\n              ticks: {\n                color: getRandomRgb()\n              },\n\n            },\n            x:{\n              type:'linear',\n              position:'bottom',\n              beginAtZero: true,\n              title:makeTitle(`${d.label}(${d.unit})`,getRandomRgb()),\n              ticks: {\n                color: getRandomRgb()\n              },\n            },\n\n          }\n      }\n      }\n      this.scatters.push('sc')\n      setTimeout(()=>{\n      this.scatterChart= new Chart('sc',scatterConfig)\n      },1000)\n    }\n  }\n\n\n\n\n\n\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n                \n                    ./diferred-data-chart.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DiferredDataChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiferredModeUsecases.html":{"url":"injectables/DiferredModeUsecases.html","title":"injectable - DiferredModeUsecases","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiferredModeUsecases\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/UseCases/diferred-mode-usecases.ts\n        \n\n\n            \n                Description\n            \n            \n                This class handles api calls for diferred mode data visualisation\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Async\n                                parallelExecution\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiInterface)\n                    \n                \n                        \n                            \n                                Defined in src/UseCases/diferred-mode-usecases.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(start: string, end: string, projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/diferred-mode-usecases.ts:47\n                        \n                    \n\n\n            \n                \n                        Here we are fetching the sessions information in order to pick randomly a station and request needed data for the  usecase.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Here we are fetching the sessions information in order to pick randomly a station and request needed data for the  usecase.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        parallelExecution\n                        \n                    \n                \n            \n            \n                \n                        \n                    parallelExecution(stationName: string, start: string, end: string, projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/diferred-mode-usecases.ts:26\n                        \n                    \n\n\n            \n                \n                         we know the station so we can make api call in parallel to retrieve needed information for that usecase.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                stationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                     we know the station so we can make api call in parallel to retrieve needed information for that usecase.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { ApiInterface } from \"src/domain\";\n\n/**\n * This class handles api calls for diferred mode data visualisation\n *\n */\n@Injectable({providedIn:'root'})\nexport class DiferredModeUsecases {\n  \n  /**\n   *\n   * @param api\n   */\n  constructor(@Inject('api') private readonly api:ApiInterface){}\n  /**\n   *\n   * @param stationName\n   * @param start\n   * @param end\n   * @param projectName\n   *  we know the station so we can make api call in parallel to retrieve needed information for that usecase.\n   * @returns\n   */\n\n async parallelExecution(stationName:string='',start:string,end:string,projectName:string){\n    try{\n      const [{raw_data,station},sessionInfo] = await Promise.all([\n        await this.api.getRange(stationName,start,end).toPromise(),\n        await this.api.getSessionInfo(projectName).toPromise()\n      ])\n    return {raw_data,station,sessionInfo}\n    }catch(err:any){\n     throw new Error(err.message)\n    }\n  }\n\n\n  /**\n   *\n   * @param start\n   * @param end\n   * @param projectName\n   * Here we are fetching the sessions information in order to pick randomly a station and request needed data for the  usecase.\n   */\n\n  async execute(start:string,end:string,projectName:string){\n    try{\n    const sessionInfo = await this.api.getSessionInfo(projectName).toPromise()\n    const {raw_data,station} = await this.api.getRange(sessionInfo[Math.floor(Math.random()*(sessionInfo.length-1))].station,start,end).toPromise()\n    return {raw_data,station,sessionInfo}\n\n  }catch(err:any){\n      throw new Error(err.message)\n    }\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeaturesModule.html":{"url":"modules/FeaturesModule.html","title":"module - FeaturesModule","body":"\n                   \n\n\n\n\n    Modules\n    FeaturesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeaturesModule\n\n\n\ncluster_FeaturesModule_imports\n\n\n\ncluster_FeaturesModule_declarations\n\n\n\n\nDiferredDataChartComponent\n\nDiferredDataChartComponent\n\n\n\nFeaturesModule\n\nFeaturesModule\n\nFeaturesModule -->\n\nDiferredDataChartComponent->FeaturesModule\n\n\n\n\n\nRealTimeChartComponent\n\nRealTimeChartComponent\n\nFeaturesModule -->\n\nRealTimeChartComponent->FeaturesModule\n\n\n\n\n\nFeaturesRoutingModule\n\nFeaturesRoutingModule\n\nFeaturesModule -->\n\nFeaturesRoutingModule->FeaturesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nFeaturesModule -->\n\nSharedModule->FeaturesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/features.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Features Module\nit's considered as submodule of the main module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DiferredDataChartComponent\n                        \n                        \n                            RealTimeChartComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeaturesRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RealTimeChartComponent } from './real-time-chart/real-time-chart.component';\nimport { DiferredDataChartComponent } from './diferred-data-chart/diferred-data-chart.component';\nimport { FeaturesRoutingModule } from './features-routing.module';\nimport { SharedModule } from '../shared';\n\n/**\n * Features Module\n * it's considered as submodule of the main module\n */\n@NgModule({\n    declarations: [\n        RealTimeChartComponent,\n        DiferredDataChartComponent\n    ],\n    imports: [\n        CommonModule,\n        FeaturesRoutingModule,\n        SharedModule\n    ],\n    schemas:[CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class FeaturesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeaturesRoutingModule.html":{"url":"modules/FeaturesRoutingModule.html","title":"module - FeaturesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FeaturesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/features-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DiferredDataChartComponent } from './diferred-data-chart/diferred-data-chart.component';\nimport { RealTimeChartComponent } from './real-time-chart/real-time-chart.component';\n\n/**\n * Here we set routing for features' components\n */\nconst routes: Routes = [\n{\n  component:DiferredDataChartComponent,\n  path:'diferred'\n},\n{\n  component:RealTimeChartComponent,\n  path:'real-time'\n}\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FeaturesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        *Footer component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  email:\"kouame.ndri1998@gmail.com\",\n  linkedIn:\"https://linkedin.com/in/kouamé-david-n-dri-1615a5186\"\n}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/footer/footer.component.ts:18\n                        \n                    \n\n            \n                \n                    We are just using that property to show user infomation in the footer component\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n/**\n * *Footer component\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\n/**\n * The footer component is placed at the bottom of the\n * main component and is aivaibled for every other components\n */\nexport class FooterComponent {\n/**\n * We are just using that property to show user infomation in the footer component\n */\nuser={\n  email:\"kouame.ndri1998@gmail.com\",\n  linkedIn:\"https://linkedin.com/in/kouamé-david-n-dri-1615a5186\"\n}\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n      {{user.email|lowercase}}\n  \n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                footer {\n  margin-top: 8px;\n  display: flex;\n  align-items: center;\n  line-height: 20px;\n  bottom: 0%;\n  position: fixed;\n  background: white !important;\n}\n\nfooter a {\n  display: flex;\n  align-items: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{user.email|lowercase}}  '\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        \nHeader component\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                docUrl\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"AQ54\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/header/header.component.ts:20\n                            \n                        \n                \n                    \n                        take the title of the website as input\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        docUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.docsURL\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/header/header.component.ts:24\n                        \n                    \n\n            \n                \n                    property that contains the url to documentation website\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input} from '@angular/core';\nimport { environment } from 'src/environments/environment.prod';\n/**\n ** Header component\n */\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\n/**\n * Header component\n * is placed in the main component and work\n * for every sub component or sub module compenent\n */\nexport class HeaderComponent {\n/**\n * take the title of the website as input\n */\n@Input('title') title=\"AQ54\"\n/**\n * property that contains the url to documentation website\n */\ndocUrl=environment.docsURL\n}\n\n    \n\n    \n        \n  \n  {{title}}\n   \n   \n    Différée\n    Temps Réel\n    Docs\n   \n    \n    Mon CV\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .spacer {\n  flex: 1;\n}\n\n\na{\n  text-decoration: none;\n  margin: 6px;\n}\n\n\n.menu{\n  width: 800px;\n  position: relative;\n  left: 30px;\n}\n.toolbar {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  background: #010f1d !important;\n  color: white;\n  font-weight: 500;\n  padding-right: 15px;\n  margin-right: 15px;\n}\n\n.toolbar img {\n  margin: 0 16px;\n}\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{title}}          Différée    Temps Réel    Docs           Mon CV'\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IsLoadingService.html":{"url":"injectables/IsLoadingService.html","title":"injectable - IsLoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IsLoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/Preloader/is-loading.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Here the preload spinner service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                load\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/@core/Preloader/is-loading.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setLoading\n                        \n                    \n                \n            \n            \n                \nsetLoading(value)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/Preloader/is-loading.service.ts:23\n                        \n                    \n\n\n            \n                \n                        setup spinner value\n\ntrue\nor\nfalse\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        load\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/@core/Preloader/is-loading.service.ts:13\n                        \n                    \n\n            \n                \n                    Property used to setup spinner\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n/**\n * Here the preload spinner service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsLoadingService {\n/**\n * Property used to setup spinner\n */\npublic load : BehaviorSubject= new BehaviorSubject(false)\n\n  constructor() { }\n/**\n *setup spinner value\n ** true\n or\n ** false\n * @param value\n */\n  setLoading(value=false){\n    this.load.next(value)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LatestTransmissionsResponseScema.html":{"url":"interfaces/LatestTransmissionsResponseScema.html","title":"interface - LatestTransmissionsResponseScema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LatestTransmissionsResponseScema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/api/api.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                this interface represents data type of api calls to retrieve the last transmission status of given station\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            last_transmission_utc\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                                \n                                        \n                                            station_id\n                                        \n                                \n                                \n                                        \n                                            station_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        last_transmission_utc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_transmission_utc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        station_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        station_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\n/**\n * used as return type of api calls for getting cirrent stations values\n */\nexport interface CurrentValuesSchema{\n    station_name: string,\n    timestamp: string,\n    values:Array\n\n}\n/**\n * used as type of the return values of calling api to retrieve stations' information\n */\nexport interface SessionInfoSchema{\n  station: string,\n  description: string,\n  sessiond_id: number,\n  integrated_sensors: Array\n}\n\n/**\n * this is typicaly for difered mode data retrieving the api call should return data as type this interface.\n */\nexport interface RangeDataSchema{\n  raw_data:Array\n  station:string\n}\n\n/**\n * this interface represents data type of api calls to retrieve the last transmission status of given station\n */\nexport interface LatestTransmissionsResponseScema\n  {\n    last_transmission_utc: string,\n    latitude: string,\n    longitude: number,\n    station_id: number,\n    station_name: string\n  }\n\n  /**\n   * Here is the api interface\n   * we gather here all the different api call usecases\n   */\nexport interface ApiInterface {\n  getCurrentValues(stationName:string):Observable\n  getSessionInfo(projectName:string):Observable>\n  getRange(station:string,start:string,end:string):Observable\n  getHourlyAvg(station:string,start:string,end:string):Observable\n  getLatestTransmissionStatus(stationId:number):Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OninitResponseSchema.html":{"url":"interfaces/OninitResponseSchema.html","title":"interface - OninitResponseSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OninitResponseSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/UseCases/real-time-use-cases.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface that is use as type for api call response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sessionInfo\n                                        \n                                \n                                \n                                        \n                                            stations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sessionInfo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionInfo:         SessionInfoSchema[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SessionInfoSchema[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stations:         CurrentValuesSchema[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CurrentValuesSchema[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport * as moment from \"moment\";\nimport { ApiInterface, CurrentValuesSchema, SessionInfoSchema } from \"src/domain\";\n\n/**\n * Interface that is use as type for api call response\n */\nexport interface OninitResponseSchema{\n  stations:CurrentValuesSchema[],\n  sessionInfo:SessionInfoSchema[]\n}\n\n\n/**\n * This class handles api calls for real time mode data visualisation\n *\n */\n\n@Injectable({providedIn:'root'})\nexport class RealTimeUseCases {\n  /**\n   *\n   * @param api\n   */\n  constructor(@Inject('api') private readonly api:ApiInterface){}\n/**\n *\n * @param projectName\n * @returns\n *   we retrieve needed data to start the realtime visualisation by fetching the current values of different sensors from all staions.\n\n */\n async Oninit(projectName:string):Promise{\ntry{\n  const sessionInfo= await this.api.getSessionInfo(projectName).toPromise();\n  const stations = await Promise.all(sessionInfo.map(async(station:SessionInfoSchema)=>await this.api.getCurrentValues(station.station).toPromise()));\n  return {stations,sessionInfo};\n}catch(err:any)\n{\n  throw new Error(err.message)\n}\n\n  }\n\n  /**\n   *Once a change is detected in a station we run api  call to get the latest values of the sensors in that station.\n    Doing that helps us in optimising the api calls.\n   * @param station\n    @returns\n   */\n async OnUpdate(station:string):Promise{\n  try{\n   return await this.api.getCurrentValues(station).toPromise()\n  }catch(err:any){\n   throw new Error(err.message)\n  }\n  }\n\n/**\n *we are fetching the latest transmission time in order to retrive the data of the give station.\n * @param sessionId\n * @returns\n */\n\n async canUpdate(sessionId:number):Promise{\n  try{\n    const response=await this.api.getLatestTransmissionStatus(sessionId).toPromise()\n\n      /** Here we retrieve the last transmission utc datetime */\n    const {last_transmission_utc} = response\n    const transTime= moment(last_transmission_utc);\n    const now=moment()\n    /**\n     * we compare that datetime to the caurrent datetime if both match then we enable api call for new entries then we disbale the call\n     */\n    const value= now.diff(transTime,'minutes',true)==0&&last_transmission_utc?true:true // unfortunately this will allways be true because the api does not return valid data so we decided to make it always true.\n    return value\n  }catch(err:any){\n    throw new Error(err.message)\n  }\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RangeDataSchema.html":{"url":"interfaces/RangeDataSchema.html","title":"interface - RangeDataSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RangeDataSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/api/api.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                this is typicaly for difered mode data retrieving the api call should return data as type this interface.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            raw_data\n                                        \n                                \n                                \n                                        \n                                            station\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        raw_data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        raw_data:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        station\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\n/**\n * used as return type of api calls for getting cirrent stations values\n */\nexport interface CurrentValuesSchema{\n    station_name: string,\n    timestamp: string,\n    values:Array\n\n}\n/**\n * used as type of the return values of calling api to retrieve stations' information\n */\nexport interface SessionInfoSchema{\n  station: string,\n  description: string,\n  sessiond_id: number,\n  integrated_sensors: Array\n}\n\n/**\n * this is typicaly for difered mode data retrieving the api call should return data as type this interface.\n */\nexport interface RangeDataSchema{\n  raw_data:Array\n  station:string\n}\n\n/**\n * this interface represents data type of api calls to retrieve the last transmission status of given station\n */\nexport interface LatestTransmissionsResponseScema\n  {\n    last_transmission_utc: string,\n    latitude: string,\n    longitude: number,\n    station_id: number,\n    station_name: string\n  }\n\n  /**\n   * Here is the api interface\n   * we gather here all the different api call usecases\n   */\nexport interface ApiInterface {\n  getCurrentValues(stationName:string):Observable\n  getSessionInfo(projectName:string):Observable>\n  getRange(station:string,start:string,end:string):Observable\n  getHourlyAvg(station:string,start:string,end:string):Observable\n  getLatestTransmissionStatus(stationId:number):Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RealTimeChartComponent.html":{"url":"components/RealTimeChartComponent.html","title":"component - RealTimeChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RealTimeChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/real-time-chart/real-time-chart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Real time data visualisation compenent\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                    chartBuilder\n                    RealTimeChartComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-real-time-chart\n            \n\n\n\n            \n                styleUrls\n                ./real-time-chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./real-time-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                data\n                            \n                            \n                                scatterChart\n                            \n                            \n                                scatters\n                            \n                            \n                                scatterSensors\n                            \n                            \n                                selectedSensor\n                            \n                            \n                                sensors\n                            \n                            \n                                stations\n                            \n                            \n                                time\n                            \n                            \n                                timeData\n                            \n                            \n                                times\n                            \n                            \n                                timesCahrt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                chartData\n                            \n                            \n                                initChartBar\n                            \n                            \n                                initScatter\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                onChartsInit\n                            \n                            \n                                    Async\n                                OntimeSerieChartInit\n                            \n                            \n                                scatterData\n                            \n                            \n                                    Async\n                                updateData\n                            \n                            \n                                    Async\n                                updateScatter\n                            \n                            \n                                    Async\n                                updateTimeSeries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usecases: RealTimeUseCases)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usecases\n                                                  \n                                                        \n                                                                        RealTimeUseCases\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        chartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    chartData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:253\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                set up data requirements for charts' config\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initChartBar\n                        \n                    \n                \n            \n            \n                \ninitChartBar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:84\n                        \n                    \n\n\n            \n                \n                        init chart bar chart config\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                ***chartbar instance\ninit chart bar chart config\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initScatter\n                        \n                    \n                \n            \n            \n                \ninitScatter(d: CurrentValuesSchema[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:100\n                        \n                    \n\n\n            \n                \n                        init the scatter chart config\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            CurrentValuesSchema[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:25\n                        \n                    \n\n\n            \n                \n                        clear the time interval once the component is destroyed\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:64\n                        \n                    \n\n\n            \n                \n                        call once the componentis loaded to initiate firts visualisation requirements.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onChartsInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onChartsInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:240\n                        \n                    \n\n\n            \n                \n                        init all  the charts\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        OntimeSerieChartInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    OntimeSerieChartInit(d: CurrentValuesSchema[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:341\n                        \n                    \n\n\n            \n                \n                        init time based chart config\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            CurrentValuesSchema[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterData\n                        \n                    \n                \n            \n            \n                \nscatterData(d: CurrentValuesSchema[], n: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:209\n                        \n                    \n\n\n            \n                \n                        build scatter data requirements\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            CurrentValuesSchema[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                n\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateData\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateData(s: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:275\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                s\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    update data by making api call\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateScatter\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateScatter(v: CurrentValuesSchema[], station: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                v\n                                            \n                                                            CurrentValuesSchema[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                            \n                                                    update scatter chart\n\n                                            \n                                        \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTimeSeries\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTimeSeries(d: CurrentValuesSchema, station: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:296\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            CurrentValuesSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    update time based chart config\n\n                                            \n                                        \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart | any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChartBarDataInterface | any\n\n                    \n                \n                \n                    \n                        Default value : {\n      labels: [],\n      datasets: [],\n      options: {\n      scales: {\n        y: {\n          beginAtZero: true,\n          min: 0,\n          max: 100\n        }\n      }\n    }\n\n    }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterChart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatters\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterSensors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedSensor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:32\n                        \n                    \n\n            \n                \n                    diffrent properties of the class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sensors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SessionInfoSchema[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        times\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timesCahrt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AQ54'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport Chart from 'chart.js/auto';\nimport {  chartBarDataSets, getRandomRgb, stationDataLabels, updateChartBarData,groupBy, RealTimeUseCases, makeTitle, makeAnimation } from '../../../@core';\nimport {  ChartBarDataInterface, CurrentValuesSchema, SessionInfoSchema, chartBuilder } from 'src/domain';\n\n/**\n * Real time data visualisation compenent\n */\n@Component({\n  selector: 'app-real-time-chart',\n  templateUrl: './real-time-chart.component.html',\n  styleUrls: ['./real-time-chart.component.scss']\n})\n/**\n *we implemented the different interfaces for the well being of this component.\n */\nexport class RealTimeChartComponent implements OnInit,OnDestroy,chartBuilder,RealTimeChartComponent {\n\n  constructor(\n    @Inject('realTime:mode') private readonly usecases:RealTimeUseCases,\n    ){}\n/**\n * clear the time interval once the component is destroyed\n */\n  ngOnDestroy(): void {\n    clearInterval(this.time)\n  }\n\n  /**\n   * diffrent properties of the class\n   */\n    selectedSensor:any\n    scatterSensors:any=[];\n    sensors:Array=[]\n\n    scatters:string[]=[]\n    scatterChart:any[]=[];\n    times:string[]=[]\n    timeData:any=[]\n    timesCahrt:any=[]\n    title = 'AQ54';\n    time:any=''\n    data:ChartBarDataInterface|any = {\n      labels: [],\n      datasets: [],\n      options: {\n      scales: {\n        y: {\n          beginAtZero: true,\n          min: 0,\n          max: 100\n        }\n      }\n    }\n\n    }\n    chart:Chart|any;\n    stations:SessionInfoSchema[]=[]\n\n/**\n * call once the componentis loaded to initiate firts visualisation requirements.\n */\n\n    async ngOnInit(): Promise {\n      try{\n        await  this.onChartsInit()\n       this.time= setInterval(async()=>{\n        this.stations.forEach(async(s:any)=>{\n          await this.usecases.canUpdate(s.sessiond_id)?this.updateData(s):null\n        })\n        },1000)\n      }catch(err:any){\n        throw new Error(err.message)\n      }\n\n    }\n\n    /**\n     *\n     * @returns ***chartbar instance\n     * init chart bar chart config\n     */\n\n    initChartBar(){\n      return new Chart('real-time-chart',{data:this.data,options:{\n        responsive:true,\n        maintainAspectRatio: true,\n        plugins:{\n          legend: {\n            position: 'top',\n          },\n          title: makeTitle('Distribution des données selon les types de capteurs par station.')\n        },\n      }})\n    }\n/**\n *init the scatter chart config\n * @param d\n */\n    initScatter(d:CurrentValuesSchema[]=[]){\n      var data =this.scatterData(d)\n      !data.length?data=this.scatterData(d,4):null\n     for(let sc=0;scthis.scatterChart.push({config,chart:new Chart((document.getElementById(this.scatters[sc]) as any),config)}),100)\n     }\n    }\n/**\n *\n * @param v update scatter chart\n * @param station\n */\n    async updateScatter(v:CurrentValuesSchema[]=[],station:string=''){\n     try{\n      let stationVal:CurrentValuesSchema[]=v\n      const data:any =this.scatterData(stationVal)\n    if(data.length){\n      const {chart}= this.scatterChart.find((sc:any)=>sc.config.station===station)\n      //console.log(chart.config.data,data)\n       chart.config.data.datasets.forEach((dt:any)=>{\n        const d=data[0].datasets.find((item:any)=>item.label===dt.label)\n        d?dt.data=dt.data.concat(d.data):null\n       });\n       chart.config.options=  {\n        responsive:true,\n        animations:makeAnimation(),\n        plugins:{\n          legend: {\n            position: 'top',\n          },\n          title:makeTitle(`Correlation entre les donnés d'un capteur pris de façon aleatoire dans ${data[0]?.station} et le reste des capteurs selon l'unité de mesure (${data[0]?.unit}).`)\n        },\n        scales:{\n          y:{\n            type:'linear',\n            position:'left',\n            beginAtZero: true,\n            title:makeTitle(`${data[0].sensors.join(',')}(${data[0].unit})`,getRandomRgb()),\n             ticks: {\n              color: getRandomRgb()\n            },\n\n          },\n          x:{\n            type: 'linear',\n             title:{\n               display:true,\n               text:`${data[0].sensor}(${data[0].unit})`\n             },\n            beginAtZero: true,\n            position:'bottom',\n            ticks: {\n              color: getRandomRgb()\n            },\n          },\n\n        }\n    }\n     chart.update()\n    }\n     }catch(err:any){\n      throw new Error(err.message)\n     }\n\n  }\n\n/**\n *build scatter data requirements\n * @param d\n * @param n\n * @returns\n */\n    scatterData(d:CurrentValuesSchema[],n:any=null){\n    let data:any=[]\n      const selectedSensor=this.selectedSensor?this.selectedSensor:this.sensors[n||Math.floor(Math.random()*(this.sensors.length-1))]\n\n        \n      if(selectedSensor)\n      d.forEach(item=>{\n        const values=item.values.filter(v=>!v.unit?null:v.unit.toLowerCase()===selectedSensor.unit?.toLowerCase() && v.sensor!=selectedSensor.type)\n        const selected=item.values.find(v=>v.sensor.toLowerCase()===selectedSensor.type.toLowerCase())\n        selected && values.length?data.push({\n          datasets:values.map(s=>({data:[{x:selected.value,y:s.value}],label:`${s.sensor}=f(${selected.sensor})`\n        })),\n        backgroundColor:getRandomRgb(),\n        station:item.station_name,\n        unit:selected?.unit,\n        sensor:selected.sensor,\n        sensors:values.map(s=>s.sensor)\n        }):null\n      })\n      let cnv=[]\n      for(let i=0;iu.label===s.station).forEach((item:any,index:number) => {\n         data.find((d:any)=>d.station==item.label)?item.data=data.find((d:any)=>d.station==item.label)?.data:this.chart.config.data.datasets.splice(index,1)\n        });\n        this.chart.update()\n        this.updateTimeSeries(stationData,s.station)\n        this.updateScatter([stationData],s.station)\n        }\n        catch(err:any){\n        throw new Error(err.message)\n      }\n    }\n\n    /**\n     *\n     * @param d update time based chart config\n     * @param station\n     */\n  async updateTimeSeries(d:CurrentValuesSchema,station:string){\n   const stationData:CurrentValuesSchema[]= [d]\n   let data:any=stationData.map(item=>({time:item.timestamp,station:item.station_name,values:groupBy(item.values,(v:any)=>v.unit)}));\n   const dt:any= data.map((item:any)=>({...item,values:Object.entries(item.values).map(e=>e[1])}))\n   const {chart} = this.timesCahrt.find((c:any)=>c.config.station===station)\n   const config:any=\n          {\n          type: 'bar',\n          time:dt[0].time,\n          data: {\n              datasets: dt[0].values.map((item:any)=>({\n                data:\n                  item.map((item:any)=>({y:item.value,x:dt[0].time})),\n                  label:`(${item[0].unit})`,\n                  backgroundColor:getRandomRgb(),\n\n              })\n              )\n          },\n          options: {\n            responsive:true,\n            plugins:{\n              legend: {\n                position: 'top',\n              },\n              title: makeTitle(`Distribution temporelle des données selon l'unité de mesure dans la station ${dt[0].station}`)\n\n            }\n\n        }\n        }\n          chart.config.options.plugins=config.options.plugins\n          //chart.config.options.scales.x.max=dt[0].time,\n         var update=false\n          config.data.datasets.forEach((dd:any)=>{\n           const its= chart.config.data.datasets.find((f:any)=>dd.label===f.label)\n           update= its&&!its.data.find((t:any)=>t.x===dt[0].time)?its.data.push(...dd.data):false\n          })\n          update?chart.update():null;\n  }\n\n  /**\n   *init time based chart config\n   * @param d\n   */\n   async OntimeSerieChartInit(d:CurrentValuesSchema[]){\n   const stationData:CurrentValuesSchema[]=d// await Promise.all(this.stations.map(async(s:SessionInfoSchema)=>await this.stattionCurrentVal.execute(s.station).toPromise()))\n\n   let data:any=stationData.map(item=>({time:item.timestamp,station:item.station_name,values:groupBy(item.values,(v:any)=>v.unit)}));\n\n   data=data.map((item:any)=>({...item,values:Object.entries(item.values).map(e=>e[1])}))\n\n   data.forEach((d:any,index:number)=>{\n   this.times.push(index+\"times\"+Date.now())\n    const config:any=\n      {\n      type: 'line',\n      time:d.time,\n      station:d.station,\n      data: {\n          datasets: d.values.map((item:any)=>({\n            data:\n              item.map((item:any)=>({y:item.value,x:d.time})),\n              label:`(${item[0].unit})`,\n              backgroundColor:getRandomRgb(),\n              borderColor:getRandomRgb(),\n              fill:false,\n              tension:0.8\n          })\n          )\n      },\n      options: {\n        responsive:true,\n        animations:makeAnimation(),\n        plugins:{\n          legend: {\n            position: 'top',\n          },\n          title: makeTitle(`Distribution temporelle des données selon l'unité de mesure dans la station ${d.station}`)\n        },\n        scales: {\n            x: {\n                min:d.time,\n            },\n            y:{\n              min:0\n            }\n        }\n    }\n\n    }\n    setTimeout(()=>{\n      let chart = new Chart(this.times[index],config);\n      this.timesCahrt.push({chart,config})\n        },1000)\n   })\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n\n\n    \n\n    \n                \n                    ./real-time-chart.component.scss\n                \n                \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RealTimeChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RealTimeChartComponentInterface.html":{"url":"interfaces/RealTimeChartComponentInterface.html","title":"interface - RealTimeChartComponentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RealTimeChartComponentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/chart.ts\n        \n\n\n            \n                Description\n            \n            \n                 Should be implemented in real time mode data visualisation\nto setup data requirements\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        initChartBar\n                                    \n                                \n                                \n                                    \n                                        initScatter\n                                    \n                                \n                                \n                                    \n                                        onChartsInit\n                                    \n                                \n                                \n                                    \n                                        OntimeSerieChartInit\n                                    \n                                \n                                \n                                    \n                                        scatterData\n                                    \n                                \n                                \n                                    \n                                        updateData\n                                    \n                                \n                                \n                                    \n                                        updateTimeSeries\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initChartBar\n                        \n                    \n                \n            \n            \n                \ninitChartBar(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Chart\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initScatter\n                        \n                    \n                \n            \n            \n                \ninitScatter(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChartsInit\n                        \n                    \n                \n            \n            \n                \nonChartsInit(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OntimeSerieChartInit\n                        \n                    \n                \n            \n            \n                \nOntimeSerieChartInit(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterData\n                        \n                    \n                \n            \n            \n                \nscatterData(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTimeSeries\n                        \n                    \n                \n            \n            \n                \nupdateTimeSeries(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Chart } from \"chart.js/auto\"\nimport { CurrentValuesSchema } from \"./api/api.interface\"\n/**\n * used as type  of chart title\n */\nexport\ninterface chartTitle{\n  display:boolean\n  text:string\n  color:string\n}\n/**\n * used as type of chart animation option\n */\nexport interface ChartAnimation{\n    tension: {\n      duration:number,\n      easing: string,\n      from: number,\n      to: number,\n      loop: boolean\n    }\n\n}\n/**\n * chartbar data requirements type\n */\nexport interface ChartBarDataInterface{\n\n    labels:string[]\n    datasets: Array\n  options: {\n    scales: {\n      y: {\n        beginAtZero: boolean,\n        min: number,\n        max: number\n      }\n    }\n  }\n\n\n}\n\n/**\n * Used in both diferred mode data visualisation and real time data\n * visualisation compenents as interface of methods to be implemented.\n */\nexport interface chartBuilder{\n  chartData():CurrentValuesSchema[]|any\n  updateScatter(...args:any):void\n}\n/**\n * Should be implemented in diferred mode data visualisation\n * to setup data requirements\n */\nexport interface DiferedComponentInterface{\n  barBasedChart(...args:any):void\n  scatterBasedChart(...args:any):void\n  builder(...args:any):any\n}\n\n\n/**\n *  Should be implemented in real time mode data visualisation\n * to setup data requirements\n */\nexport interface RealTimeChartComponentInterface{\n  initChartBar(...args:any):Chart\n  initScatter(...args:any):void\n  scatterData(...args:any):any\n  onChartsInit(...args:any):void\n  updateTimeSeries(...args:any):any\n  updateData(...args:any):any\n  OntimeSerieChartInit(...args:any):void\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RealTimeUseCases.html":{"url":"injectables/RealTimeUseCases.html","title":"injectable - RealTimeUseCases","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RealTimeUseCases\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/UseCases/real-time-use-cases.ts\n        \n\n\n            \n                Description\n            \n            \n                This class handles api calls for real time mode data visualisation\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canUpdate\n                            \n                            \n                                    Async\n                                Oninit\n                            \n                            \n                                    Async\n                                OnUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiInterface)\n                    \n                \n                        \n                            \n                                Defined in src/UseCases/real-time-use-cases.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canUpdate(sessionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/real-time-use-cases.ts:65\n                        \n                    \n\n\n            \n                \n                        we are fetching the latest transmission time in order to retrive the data of the give station.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        Oninit\n                        \n                    \n                \n            \n            \n                \n                        \n                    Oninit(projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/real-time-use-cases.ts:33\n                        \n                    \n\n\n            \n                \n                          we retrieve needed data to start the realtime visualisation by fetching the current values of different sensors from all staions.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                  we retrieve needed data to start the realtime visualisation by fetching the current values of different sensors from all staions.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        OnUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    OnUpdate(station: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/real-time-use-cases.ts:51\n                        \n                    \n\n\n            \n                \n                        Once a change is detected in a station we run api  call to get the latest values of the sensors in that station.\nDoing that helps us in optimising the api calls.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport * as moment from \"moment\";\nimport { ApiInterface, CurrentValuesSchema, SessionInfoSchema } from \"src/domain\";\n\n/**\n * Interface that is use as type for api call response\n */\nexport interface OninitResponseSchema{\n  stations:CurrentValuesSchema[],\n  sessionInfo:SessionInfoSchema[]\n}\n\n\n/**\n * This class handles api calls for real time mode data visualisation\n *\n */\n\n@Injectable({providedIn:'root'})\nexport class RealTimeUseCases {\n  /**\n   *\n   * @param api\n   */\n  constructor(@Inject('api') private readonly api:ApiInterface){}\n/**\n *\n * @param projectName\n * @returns\n *   we retrieve needed data to start the realtime visualisation by fetching the current values of different sensors from all staions.\n\n */\n async Oninit(projectName:string):Promise{\ntry{\n  const sessionInfo= await this.api.getSessionInfo(projectName).toPromise();\n  const stations = await Promise.all(sessionInfo.map(async(station:SessionInfoSchema)=>await this.api.getCurrentValues(station.station).toPromise()));\n  return {stations,sessionInfo};\n}catch(err:any)\n{\n  throw new Error(err.message)\n}\n\n  }\n\n  /**\n   *Once a change is detected in a station we run api  call to get the latest values of the sensors in that station.\n    Doing that helps us in optimising the api calls.\n   * @param station\n    @returns\n   */\n async OnUpdate(station:string):Promise{\n  try{\n   return await this.api.getCurrentValues(station).toPromise()\n  }catch(err:any){\n   throw new Error(err.message)\n  }\n  }\n\n/**\n *we are fetching the latest transmission time in order to retrive the data of the give station.\n * @param sessionId\n * @returns\n */\n\n async canUpdate(sessionId:number):Promise{\n  try{\n    const response=await this.api.getLatestTransmissionStatus(sessionId).toPromise()\n\n      /** Here we retrieve the last transmission utc datetime */\n    const {last_transmission_utc} = response\n    const transTime= moment(last_transmission_utc);\n    const now=moment()\n    /**\n     * we compare that datetime to the caurrent datetime if both match then we enable api call for new entries then we disbale the call\n     */\n    const value= now.diff(transTime,'minutes',true)==0&&last_transmission_utc?true:true // unfortunately this will allways be true because the api does not return valid data so we decided to make it always true.\n    return value\n  }catch(err:any){\n    throw new Error(err.message)\n  }\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SessionInfoSchema.html":{"url":"interfaces/SessionInfoSchema.html","title":"interface - SessionInfoSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SessionInfoSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/api/api.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                used as type of the return values of calling api to retrieve stations' information\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            integrated_sensors\n                                        \n                                \n                                \n                                        \n                                            sessiond_id\n                                        \n                                \n                                \n                                        \n                                            station\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        integrated_sensors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        integrated_sensors:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessiond_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessiond_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        station\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\n/**\n * used as return type of api calls for getting cirrent stations values\n */\nexport interface CurrentValuesSchema{\n    station_name: string,\n    timestamp: string,\n    values:Array\n\n}\n/**\n * used as type of the return values of calling api to retrieve stations' information\n */\nexport interface SessionInfoSchema{\n  station: string,\n  description: string,\n  sessiond_id: number,\n  integrated_sensors: Array\n}\n\n/**\n * this is typicaly for difered mode data retrieving the api call should return data as type this interface.\n */\nexport interface RangeDataSchema{\n  raw_data:Array\n  station:string\n}\n\n/**\n * this interface represents data type of api calls to retrieve the last transmission status of given station\n */\nexport interface LatestTransmissionsResponseScema\n  {\n    last_transmission_utc: string,\n    latitude: string,\n    longitude: number,\n    station_id: number,\n    station_name: string\n  }\n\n  /**\n   * Here is the api interface\n   * we gather here all the different api call usecases\n   */\nexport interface ApiInterface {\n  getCurrentValues(stationName:string):Observable\n  getSessionInfo(projectName:string):Observable>\n  getRange(station:string,start:string,end:string):Observable\n  getHourlyAvg(station:string,start:string,end:string):Observable\n  getLatestTransmissionStatus(stationId:number):Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nChartsComponent\n\nChartsComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nChartsComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nChartsComponent \n\nChartsComponent \n\nChartsComponent  -->\n\nSharedModule->ChartsComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Shared module\ncall in the needed module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChartsComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ChartsComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { ChartsComponent } from './charts/charts.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n/**\n * Shared module\n * call in the needed module\n */\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    ChartsComponent,\n    FooterComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule\n  ],\n  exports:[\n    HeaderComponent,\n    ChartsComponent,\n    FooterComponent\n  ]\n})\n\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/chartBuilder.html":{"url":"interfaces/chartBuilder.html","title":"interface - chartBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  chartBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/chart.ts\n        \n\n\n            \n                Description\n            \n            \n                Used in both diferred mode data visualisation and real time data\nvisualisation compenents as interface of methods to be implemented.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        chartData\n                                    \n                                \n                                \n                                    \n                                        updateScatter\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chartData\n                        \n                    \n                \n            \n            \n                \nchartData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     [] | any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateScatter\n                        \n                    \n                \n            \n            \n                \nupdateScatter(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Chart } from \"chart.js/auto\"\nimport { CurrentValuesSchema } from \"./api/api.interface\"\n/**\n * used as type  of chart title\n */\nexport\ninterface chartTitle{\n  display:boolean\n  text:string\n  color:string\n}\n/**\n * used as type of chart animation option\n */\nexport interface ChartAnimation{\n    tension: {\n      duration:number,\n      easing: string,\n      from: number,\n      to: number,\n      loop: boolean\n    }\n\n}\n/**\n * chartbar data requirements type\n */\nexport interface ChartBarDataInterface{\n\n    labels:string[]\n    datasets: Array\n  options: {\n    scales: {\n      y: {\n        beginAtZero: boolean,\n        min: number,\n        max: number\n      }\n    }\n  }\n\n\n}\n\n/**\n * Used in both diferred mode data visualisation and real time data\n * visualisation compenents as interface of methods to be implemented.\n */\nexport interface chartBuilder{\n  chartData():CurrentValuesSchema[]|any\n  updateScatter(...args:any):void\n}\n/**\n * Should be implemented in diferred mode data visualisation\n * to setup data requirements\n */\nexport interface DiferedComponentInterface{\n  barBasedChart(...args:any):void\n  scatterBasedChart(...args:any):void\n  builder(...args:any):any\n}\n\n\n/**\n *  Should be implemented in real time mode data visualisation\n * to setup data requirements\n */\nexport interface RealTimeChartComponentInterface{\n  initChartBar(...args:any):Chart\n  initScatter(...args:any):void\n  scatterData(...args:any):any\n  onChartsInit(...args:any):void\n  updateTimeSeries(...args:any):any\n  updateData(...args:any):any\n  OntimeSerieChartInit(...args:any):void\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/chartTitle.html":{"url":"interfaces/chartTitle.html","title":"interface - chartTitle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  chartTitle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/chart.ts\n        \n\n\n            \n                Description\n            \n            \n                used as type  of chart title\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            display\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Chart } from \"chart.js/auto\"\nimport { CurrentValuesSchema } from \"./api/api.interface\"\n/**\n * used as type  of chart title\n */\nexport\ninterface chartTitle{\n  display:boolean\n  text:string\n  color:string\n}\n/**\n * used as type of chart animation option\n */\nexport interface ChartAnimation{\n    tension: {\n      duration:number,\n      easing: string,\n      from: number,\n      to: number,\n      loop: boolean\n    }\n\n}\n/**\n * chartbar data requirements type\n */\nexport interface ChartBarDataInterface{\n\n    labels:string[]\n    datasets: Array\n  options: {\n    scales: {\n      y: {\n        beginAtZero: boolean,\n        min: number,\n        max: number\n      }\n    }\n  }\n\n\n}\n\n/**\n * Used in both diferred mode data visualisation and real time data\n * visualisation compenents as interface of methods to be implemented.\n */\nexport interface chartBuilder{\n  chartData():CurrentValuesSchema[]|any\n  updateScatter(...args:any):void\n}\n/**\n * Should be implemented in diferred mode data visualisation\n * to setup data requirements\n */\nexport interface DiferedComponentInterface{\n  barBasedChart(...args:any):void\n  scatterBasedChart(...args:any):void\n  builder(...args:any):any\n}\n\n\n/**\n *  Should be implemented in real time mode data visualisation\n * to setup data requirements\n */\nexport interface RealTimeChartComponentInterface{\n  initChartBar(...args:any):Chart\n  initScatter(...args:any):void\n  scatterData(...args:any):any\n  onChartsInit(...args:any):void\n  updateTimeSeries(...args:any):any\n  updateData(...args:any):any\n  OntimeSerieChartInit(...args:any):void\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/@core/Interceptor/http-interceptor.interceptor.ts\n            \n            interceptor\n            Aq54HttpInterceptor\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/@core/Preloader/is-loading.service.ts\n            \n            injectable\n            IsLoadingService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/@core/api/api.resource.service.ts\n            \n            injectable\n            ApiResourceService\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/UseCases/diferred-mode-usecases.ts\n            \n            injectable\n            DiferredModeUsecases\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/UseCases/real-time-use-cases.ts\n            \n            injectable\n            RealTimeUseCases\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/UseCases/real-time-use-cases.ts\n            \n            interface\n            OninitResponseSchema\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/about-candidate/about-candidate.component.ts\n            \n            component\n            AboutCandidateComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/features/diferred-data-chart/diferred-data-chart.component.ts\n            \n            component\n            DiferredDataChartComponent\n            \n                21 %\n                (6/28)\n            \n        \n        \n            \n                \n                src/app/features/real-time-chart/real-time-chart.component.ts\n            \n            component\n            RealTimeChartComponent\n            \n                34 %\n                (9/26)\n            \n        \n        \n            \n                \n                src/app/shared/charts/charts.component.ts\n            \n            component\n            ChartsComponent\n            \n                42 %\n                (9/21)\n            \n        \n        \n            \n                \n                src/app/shared/charts/charts.component.ts\n            \n            variable\n            require\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/charts/charts.component.ts\n            \n            variable\n            swal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/domain/api/api.interface.ts\n            \n            interface\n            ApiInterface\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/domain/api/api.interface.ts\n            \n            interface\n            CurrentValuesSchema\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/domain/api/api.interface.ts\n            \n            interface\n            LatestTransmissionsResponseScema\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/domain/api/api.interface.ts\n            \n            interface\n            RangeDataSchema\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/domain/api/api.interface.ts\n            \n            interface\n            SessionInfoSchema\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/domain/chart.ts\n            \n            interface\n            ChartAnimation\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/domain/chart.ts\n            \n            interface\n            ChartBarDataInterface\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/domain/chart.ts\n            \n            interface\n            chartBuilder\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/domain/chart.ts\n            \n            interface\n            chartTitle\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/domain/chart.ts\n            \n            interface\n            DiferedComponentInterface\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/domain/chart.ts\n            \n            interface\n            RealTimeChartComponentInterface\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            chartBarDataSets\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            chartBardDataSets\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getRandomRgb\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            makeAnimation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            makeTitle\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            mapData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            mapDiferedData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            mapToLabels\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            stationDataLabels\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            updateChartBarData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            variable\n            groupBy\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.0\n        \n            @angular/common : ~12.2.0\n        \n            @angular/compiler : ~12.2.0\n        \n            @angular/core : ~12.2.0\n        \n            @angular/forms : ~12.2.0\n        \n            @angular/platform-browser : ~12.2.0\n        \n            @angular/platform-browser-dynamic : ~12.2.0\n        \n            @angular/router : ~12.2.0\n        \n            @swimlane/ngx-charts : ^20.5.0\n        \n            bootstrap : ^5.3.2\n        \n            chart.js : ^4.4.1\n        \n            cors : ^2.8.5\n        \n            ejs : ^3.1.9\n        \n            express : ^4.18.2\n        \n            jquery : ^3.7.1\n        \n            moment : ^2.30.1\n        \n            morgan : ^1.10.0\n        \n            ng2-pdf-viewer : ^10.0.0\n        \n            ngx-csv-parser : ^1.3.1\n        \n            ngx-extended-pdf-viewer : ^19.0.3\n        \n            rxjs : ~6.6.0\n        \n            sweetalert : ^2.1.2\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            chartBarDataSets   (src/.../utils.ts)\n                        \n                        \n                            chartBardDataSets   (src/.../utils.ts)\n                        \n                        \n                            getRandomRgb   (src/.../utils.ts)\n                        \n                        \n                            makeAnimation   (src/.../utils.ts)\n                        \n                        \n                            makeTitle   (src/.../utils.ts)\n                        \n                        \n                            mapData   (src/.../utils.ts)\n                        \n                        \n                            mapDiferedData   (src/.../utils.ts)\n                        \n                        \n                            mapToLabels   (src/.../utils.ts)\n                        \n                        \n                            stationDataLabels   (src/.../utils.ts)\n                        \n                        \n                            updateChartBarData   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        chartBarDataSets\n                        \n                    \n                \n            \n            \n                \nchartBarDataSets(stationData, labels)\n                \n            \n\n\n\n\n            \n                \n                        we build datasets for chartbar config in case of\n\nreal time mode data visualisation\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                stationData\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                labels\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartBardDataSets\n                        \n                    \n                \n            \n            \n                \nchartBardDataSets(stationData)\n                \n            \n\n\n\n\n            \n                \n                        we build datasets for chartbar config in case of\n\ndiferred mode data visualisation\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                stationData\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomRgb\n                        \n                    \n                \n            \n            \n                \ngetRandomRgb()\n                \n            \n\n\n\n\n            \n                \n                        We generate a random RGB value from this function\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeAnimation\n                        \n                    \n                \n            \n            \n                \nmakeAnimation(duration: number, easing: string, from: number, to: number, loop)\n                \n            \n\n\n\n\n            \n                \n                        config animation option for given chart\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1000\n                                            \n\n                                        \n                                        \n                                                easing\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'linear'\n                                            \n\n                                        \n                                        \n                                                from\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                to\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                        \n                                                loop\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ChartAnimation\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTitle\n                        \n                    \n                \n            \n            \n                \nmakeTitle(text: string, color: string)\n                \n            \n\n\n\n\n            \n                \n                        make chart title according to given parameters\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'blue'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         chartTitle\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapData\n                        \n                    \n                \n            \n            \n                \nmapData(data, labels)\n                \n            \n\n\n\n\n            \n                \n                        this function maps the labels to the given lis of data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labels\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapDiferedData\n                        \n                    \n                \n            \n            \n                \nmapDiferedData(data, sensors)\n                \n            \n\n\n\n\n            \n                \n                        we map data acording to the unit of sensors\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sensors\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapToLabels\n                        \n                    \n                \n            \n            \n                \nmapToLabels(data: any, labels: any)\n                \n            \n\n\n\n\n            \n                \n                        this function do almost the same with 2\n*mapData\nbut is used for mapping data in case of diferred mode data visualisation\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                labels\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stationDataLabels\n                        \n                    \n                \n            \n            \n                \nstationDataLabels(stations)\n                \n            \n\n\n\n\n            \n                \n                        we grab station labels\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stations\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateChartBarData\n                        \n                    \n                \n            \n            \n                \nupdateChartBarData(stationData, labels)\n                \n            \n\n\n\n\n            \n                \n                        build dataset for updating chartbar in case of\n\nreal time mode data visualisation\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                stationData\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                labels\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAQ54 Data Visualization App with Angular and Docker-Compose and Nodejs\nOverview\nThis repository contains the source code and configurations for AQ54 data visualization app built with Angular, Docker-Compose,\n Node.js, and the AirQuino API. The app is designed to fetch and display air quality data in a visually appealing manner.\nPrerequisites\nBefore running the application, make sure you have the following software installed on your machine:\n\nDocker\nDocker-Compose\nNode.js(version 16 or latest)\nAngular (version 12.2.18)\nCode editor of your choice (e.g., Visual Studio Code)\n\nGetting Started\n\nClone the repository:\nExample :git clone https://github.com/NdriAriel/technical-challenge-data354.git\ncd technical-challenge-data354\nInstall Angular CLI globally:\nExample :npm install -g @angular/cli@12\nInstall project dependencies:\nExample :cd technical-challenge-data354\nnpm install\nBuild the Angular app:\nExample :ng build\nStart the Docker containers:\nExample :docker-compose up -d\nOpen your web browser and navigate to http://localhost:8080 to access the Data Visualization App.\n\n\nProject Structure\n\n  \n\n\nAQ54 Data visualisation app user interface\n\n  \nDocker-Compose Configuration\nThe docker-compose.yml file defines the services, networks, and volumes needed for the application. It includes the following services:\n\nweb-app: Angular app service.\nnginx: Nginx web server for serving the Angular app.\napi: Placeholder for any backend API service.\ndatabase: Placeholder for any backend database service.\n\nDevelopment Workflow\n\nMake changes to the Angular app source code in the src/ directory.\n\nRebuild the Angular app:\nExample :ng build\nRestart the Docker containers:\nExample :docker-compose restart web-app\nAccess the updated app at http://localhost:8080.\n\n\nMaintenance and Support\nFor additional information or support, please contact the maintainers of this repository:\n\nDavid Kouamé N'DRI kouame.ndri1998@gmail.com\n\nLicense\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiProxyModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeaturesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeaturesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_FeaturesModule\n\n\n\ncluster_FeaturesModule_declarations\n\n\n\ncluster_FeaturesModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAboutCandidateComponent\n\nAboutCandidateComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutCandidateComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApiProxyModule\n\nApiProxyModule\n\nAppModule -->\n\nApiProxyModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nFeaturesModule\n\nFeaturesModule\n\nFeaturesModule -->\n\nSharedModule->FeaturesModule\n\n\n\n\n\nChartsComponent \n\nChartsComponent \n\nChartsComponent  -->\n\nSharedModule->ChartsComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nAq54HttpInterceptor\n\nAq54HttpInterceptor\n\nAppModule -->\n\nAq54HttpInterceptor->AppModule\n\n\n\n\n\nDiferredDataChartComponent\n\nDiferredDataChartComponent\n\nFeaturesModule -->\n\nDiferredDataChartComponent->FeaturesModule\n\n\n\n\n\nRealTimeChartComponent\n\nRealTimeChartComponent\n\nFeaturesModule -->\n\nRealTimeChartComponent->FeaturesModule\n\n\n\n\n\nFeaturesRoutingModule\n\nFeaturesRoutingModule\n\nFeaturesModule -->\n\nFeaturesRoutingModule->FeaturesModule\n\n\n\n\n\nChartsComponent\n\nChartsComponent\n\nSharedModule -->\n\nChartsComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            groupBy   (src/.../utils.ts)\n                        \n                        \n                            require   (src/.../charts.component.ts)\n                        \n                        \n                            swal   (src/.../charts.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  baseApi:\"https://airqino-api.magentalab.it/\",\n  docsURL:\"http://localhost:8080/docs\"\n}\n                    \n                \n\n            \n                \n                    Based Api endpoints and other static  resources are placed here.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        groupBy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (list: T[], getKey: (item: T) => K) =>\n  list.reduce((previous, currentItem) => {\n    const group = getKey(currentItem);\n    if (!previous[group]) previous[group] = [];\n    previous[group].push(currentItem);\n    return previous;\n  }, {} as Record)\n                    \n                \n\n            \n                \n                    This utility function is used as helper in making a group of data from a given list according to key parameter.\n\n                \n            \n\n        \n    \n\n    src/app/shared/charts/charts.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    Declare require as a const and type any\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SweetAlert\n\n                    \n                \n\n            \n                \n                    we declare swal as var and type\n*SweetAlert\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
