var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutCandidateComponent.html",[0,0.997,1,1.217]],["body/components/AboutCandidateComponent.html",[0,1.078,1,1.172,2,0.93,3,0.098,4,0.086,5,2.314,6,0.631,7,0.631,8,0.631,9,0.075,10,3.101,11,2.45,12,1.039,13,0.148,14,2.728,15,2.103,16,1.778,17,2.103,18,1.08,19,1.534,20,0.631,21,2.416,22,2.07,23,2.103,24,1.08,25,2.756,26,1.08,27,2.103,28,0.135,29,0.41,30,0.403,31,0.541,32,1.674,33,0.866,34,0.898,35,1.229,36,1.229,37,0.316,38,0.026,39,0.543,40,0.231,41,0.755,42,0.661,43,1.277,44,2.759,45,2.103,46,1.405,47,2.103,48,2.103,49,2.103,50,2.103,51,2.103,52,2.103,53,1.778,54,2.103,55,2.759,56,3.81,57,2.103,58,2.103,59,2.103,60,2.103,61,1.778,62,2.103,63,2.103,64,2.103,65,0.866,66,2.103,67,2.103,68,4.176,69,2.103,70,2.103,71,2.103,72,1.536,73,3.998,74,3.381,75,3.998,76,1.229,77,1.405,78,2.103,79,1.778,80,1.778,81,2.103,82,2.103,83,2.103,84,2.103,85,2.103,86,2.103,87,1.564,88,1.564,89,1.778,90,1.778,91,2.103,92,2.103,93,2.103,94,3.263,95,2.103,96,2.103,97,2.103,98,2.103,99,2.103,100,2.103,101,4.506,102,3.263,103,3.998,104,4.506,105,2.103,106,2.103,107,2.103,108,2.103,109,2.427,110,2.427,111,5.161,112,3.258,113,4.506,114,3.717,115,1.778,116,2.103,117,2.103,118,2.103,119,2.103,120,2.103,121,2.103,122,4.506,123,2.103,124,2.103,125,3.447,126,2.103,127,2.103,128,2.103,129,2.103,130,2.103,131,3.263,132,3.263,133,2.103,134,2.103,135,3.263,136,2.103,137,2.103,138,2.103,139,2.103,140,2.103,141,3.263,142,2.103,143,3.263,144,3.998,145,2.103,146,1.778,147,3.263,148,2.103,149,2.103,150,2.103,151,2.103,152,2.103,153,3.998,154,2.103,155,2.103,156,2.427,157,2.103,158,0.541,159,2.103,160,1.405,161,2.103,162,1.778,163,2.103,164,2.103,165,2.103,166,4.506,167,2.103,168,2.103,169,2.103,170,2.103,171,2.103,172,2.103,173,1.405,174,3.263,175,2.103,176,2.103,177,3.263,178,3.263,179,1.564,180,2.103,181,2.103,182,2.103,183,2.103,184,2.103,185,2.103,186,2.103,187,2.103,188,2.103,189,2.103,190,2.103,191,3.263,192,2.103,193,2.103,194,2.103,195,2.103,196,2.103,197,2.103,198,2.103,199,2.103,200,2.103,201,1.778,202,2.103,203,2.103,204,2.103,205,2.103,206,2.103,207,2.103,208,2.103,209,2.103,210,2.103,211,2.103,212,2.103,213,2.103,214,2.103,215,2.103,216,2.103,217,2.103,218,2.103,219,2.103,220,2.103,221,2.103,222,2.103,223,2.103,224,2.103,225,1,226,2.103,227,2.103,228,1.229,229,0.26,230,0.24,231,0.661,232,0.543,233,0.746,234,1.229,235,0.098,236,0.258,237,0.914,238,2.103,239,2.103,240,2.103,241,2.103,242,2.103,243,2.103,244,2.103,245,2.103,246,2.103,247,2.103,248,2.103,249,2.103,250,2.103,251,2.103,252,2.103,253,2.103,254,2.103,255,2.103,256,2.103,257,2.103,258,2.103,259,2.103,260,2.103,261,2.103,262,2.103,263,1.229,264,3.66,265,2.46,266,2.974,267,4.553,268,1.229,269,2.331,270,4.14,271,1.229,272,1.229,273,1.229,274,1.229,275,2.765,276,3.358,277,2.759,278,2.331,279,4.424,280,3.258,281,1.218,282,2.756,283,0.866,284,3.142,285,2.854,286,3.028,287,4.273,288,2.103,289,2.379,290,4.877,291,2.427,292,2.331,293,1.229,294,4.273,295,4.273,296,1.229,297,1.039,298,1.229,299,1.229,300,1.039,301,1.229,302,1.229,303,2.103,304,1.778,305,3.668,306,2.45,307,2.331,308,2.103,309,1.534,310,1.405,311,1.981,312,3.009,313,3.101,314,2.331,315,0.914,316,1.229,317,2.103,318,1.229,319,2.103,320,1.039,321,1.564,322,1.229,323,1.229,324,0.914,325,2.053,326,1.229,327,1.229,328,1.229,329,1.039,330,2.103,331,3.668,332,1.229,333,2.509,334,3.381,335,3.381,336,3.628,337,1.778,338,0.821,339,1.229,340,1.778,341,1.229,342,3.263,343,3.668,344,0.413,345,2.103,346,2.103,347,4.705,348,3.998,349,1.778,350,2.103,351,1.564,352,3.613,353,1.039,354,1.039,355,1.229,356,1.229,357,2.103,358,1.039,359,2.103,360,3.668,361,3.263,362,1.039,363,2.103,364,1.229,365,1.229,366,1.229,367,2.756,368,1.229,369,2.103,370,3.263,371,0.914,372,2.103,373,2.103,374,2.103,375,1.229,376,1.229,377,1.039,378,1.229,379,1.229,380,1.039,381,2.756,382,1.229,383,0.821,384,2.103,385,1.229,386,0.914,387,3.668,388,1.229,389,1.039,390,1.039,391,1.229,392,1.229,393,3.668,394,1.229,395,1.229,396,1.039,397,1.229,398,1.778,399,2.756,400,1.229,401,1.229,402,1.229,403,1.229,404,1.229,405,1.229,406,1.229,407,1.229,408,1.229,409,1.229,410,1.229,411,2.103,412,1.229,413,1.229,414,1.229,415,1.229,416,1.229,417,0.472,418,1.08,419,1.08,420,0.631,421,1.552,422,0.631,423,0.541,424,0.631,425,0.472,426,0.631,427,0.472,428,0.631,429,0.441,430,0.296,431,0.631,432,0.472,433,0.631,434,0.472,435,0.631,436,0.441,437,0.296,438,0.258,439,0.631,440,0.631,441,0.008,442,0.008]],["title/interfaces/ApiInterface.html",[443,0.303,444,1.217]],["body/interfaces/ApiInterface.html",[3,0.279,4,0.245,9,0.213,13,0.57,28,0.384,30,0.588,31,1.215,34,1.646,37,1.54,38,0.026,40,0.714,158,1.65,229,0.279,235,0.477,423,1.54,441,0.018,442,0.018,443,0.581,444,1.696,445,1.028,446,1.946,447,1.684,448,2.868,449,1.696,450,1.681,451,2.246,452,3.993,453,3.993,454,3.993,455,3.993,456,3.993,457,2.956,458,1.356,459,3.496,460,1.88,461,1.88,462,2.335,463,3.166,464,2.956,465,2.532,466,3.189,467,3.496,468,1.8,469,2.956,470,1.88,471,3.496,472,2.956,473,2.956,474,3.496,475,2.956,476,3.496,477,1.946,478,1.545,479,1.389,480,1.681,481,1.945,482,1.795,483,2.123,484,1.696,485,2.425,486,0.9,487,2.868,488,1.946,489,2.123,490,2.123,491,1.945,492,1.663,493,1.098,494,2.123,495,2.123,496,1.255,497,2.123,498,2.123,499,0.841,500,2.123,501,1.439,502,2.123,503,1.795,504,2.123,505,1.795,506,1.663,507,2.123,508,1.663,509,1.663,510,1.795,511,2.123,512,2.123,513,2.123,514,2.123,515,2.123,516,2.123,517,2.123,518,2.123]],["title/modules/ApiProxyModule.html",[519,1.138,520,2.058]],["body/modules/ApiProxyModule.html",[3,0.365,4,0.322,9,0.28,13,0.553,38,0.026,158,1.633,229,0.519,230,0.894,235,0.365,236,0.96,441,0.021,442,0.021,447,1.653,449,2.019,451,2.675,519,1.888,520,3.415,521,1.887,522,4.582,523,4.582,524,4.582,525,5.623,526,2.486,527,4.755,528,3.131,529,4.183,530,3.06,531,3.06,532,4.582,533,2.551,534,2.551,535,4.582,536,2.782,537,2.551,538,2.782,539,4.582,540,4.582,541,4.582,542,4.582,543,4.582,544,4.582,545,2.353]],["title/injectables/ApiResourceService.html",[531,2.264,546,1.217]],["body/injectables/ApiResourceService.html",[3,0.261,4,0.23,9,0.2,13,0.395,18,1.681,28,0.36,29,0.881,31,1.162,33,1.348,34,1.705,37,1.669,38,0.027,40,0.681,41,1.176,42,1.029,158,1.434,229,0.466,230,0.639,235,0.261,236,0.686,423,1.556,441,0.017,442,0.017,444,1.622,452,3.819,453,3.819,454,3.819,455,3.819,456,3.819,457,3.819,458,1.334,460,1.9,461,1.9,462,3.016,463,3.363,464,2.768,465,2.672,466,3.366,468,1.751,469,3.819,470,1.624,472,3.819,473,2.768,475,3.819,477,2.514,478,1.447,480,1.837,486,0.843,493,1.029,501,1.348,509,1.557,531,3.016,546,1.622,547,1.988,548,2.768,549,4.516,550,3.819,551,4.516,552,3.274,553,5.17,554,4.516,555,2.768,556,3.274,557,3.274,558,3.274,559,3.274,560,3.274,561,3.274,562,2.742,563,4.516,564,3.819,565,1.681,566,2.435,567,1.988,568,2.768,569,2.768,570,2.435,571,3.274,572,2.768,573,1.557,574,3.274,575,2.638,576,3.274,577,3.274,578,3.274,579,3.274,580,3.274,581,3.274,582,3.274]],["title/components/AppComponent.html",[0,0.997,425,1.303]],["body/components/AppComponent.html",[0,1.857,1,1.265,2,2.54,3,0.281,4,0.247,5,1.809,6,1.809,7,1.809,8,1.809,9,0.215,13,0.425,18,2.438,19,2.99,20,1.809,21,3.341,22,2.679,24,2.438,26,2.438,28,0.387,29,0.926,30,0.387,31,1.222,32,3.489,33,1.955,34,1.651,37,0.907,38,0.026,39,2.098,40,0.59,41,1.705,42,1.492,173,2.353,229,0.378,230,0.687,231,1.107,235,0.281,236,0.738,265,2.374,275,2.438,276,2.353,309,1.961,311,2.139,312,2.353,321,2.62,324,2.62,325,2.438,333,1.961,344,1.594,383,2.353,417,1.354,418,2.438,419,2.438,420,1.809,421,2.733,422,1.809,423,1.382,424,1.809,425,2.208,426,1.809,427,1.354,428,1.809,429,1.265,430,0.847,431,1.809,432,1.354,433,1.809,434,1.354,435,1.809,436,1.265,437,0.847,438,0.738,439,1.809,440,1.809,441,0.018,442,0.018,449,1.705,458,0.687,460,1.107,461,1.107,521,1.955,570,3.531,583,2.979,584,2.883,585,2.883,586,4.014,587,4.014,588,5.37,589,4.747,590,3.994,591,5.37,592,4.747,593,3.523,594,3.489,595,4.747,596,3.523,597,4.014,598,2.643,599,4.747,600,3.523,601,2.62,602,3.523,603,2.139,604,2.62,605,3.523,606,3.523,607,3.523,608,3.523,609,3.523,610,3.523,611,3.523,612,2.62,613,3.523,614,3.523,615,2.353,616,3.523,617,2.979,618,3.523,619,3.523,620,3.523]],["title/modules/AppModule.html",[519,1.138,621,2.264]],["body/modules/AppModule.html",[1,2.274,3,0.306,4,0.27,9,0.234,11,2.564,13,0.463,22,1.58,38,0.026,229,0.536,230,0.749,235,0.306,236,0.804,417,1.475,425,2.602,441,0.019,442,0.019,519,1.882,520,3.845,521,1.58,528,2.798,536,3.403,537,2.798,538,3.403,545,1.971,566,2.855,584,3.052,604,2.855,621,4.617,622,2.137,623,3.403,624,3.246,625,3.246,626,3.246,627,3.246,628,3.246,629,3.845,630,3.525,631,3.748,632,3.357,633,2.564,634,2.331,635,3.838,636,3.246,637,4.25,638,5.026,639,4.25,640,2.564,641,3.246,642,3.838,643,5.026,644,3.838,645,4.25,646,2.855,647,3.838,648,5.026,649,3.357,650,1.971,651,2.855,652,3.246,653,3.246,654,3.838,655,3.838,656,3.838]],["title/modules/AppRoutingModule.html",[519,1.138,629,2.058]],["body/modules/AppRoutingModule.html",[1,1.652,3,0.367,4,0.323,9,0.281,11,3.073,22,1.894,38,0.026,72,1.768,229,0.486,230,0.898,235,0.367,236,0.964,438,1.181,441,0.021,442,0.021,449,1.652,519,1.893,521,1.894,528,3.139,537,2.561,545,2.362,629,3.423,649,3.765,650,2.362,652,3.89,657,4.6,658,3.89,659,4.6,660,3.701,661,4.193,662,3.89,663,3.89,664,4.6,665,5.637,666,3.073,667,4.6,668,4.767,669,5.637,670,5.637,671,4.6,672,4.6,673,4.6,674,4.6,675,4.6,676,4.6,677,4.6]],["title/interceptors/Aq54HttpInterceptor.html",[631,2.058,678,2.866]],["body/interceptors/Aq54HttpInterceptor.html",[3,0.31,4,0.273,9,0.238,13,0.47,18,1.998,28,0.428,29,0.989,31,1.305,33,1.602,34,1.552,37,1.305,38,0.026,40,0.62,46,3.387,158,1.305,229,0.494,230,0.759,235,0.31,236,0.815,423,1.305,441,0.019,442,0.019,450,1.593,460,1.593,461,1.593,463,2.604,478,1.72,480,1.772,526,2.241,546,1.821,555,4.288,566,2.894,575,2.088,590,3.772,594,3.63,631,3.079,666,3.992,679,3.891,680,5.054,681,3.29,682,6.564,683,5.054,684,5.641,685,3.891,686,3.891,687,5.071,688,5.977,689,5.977,690,5.977,691,3.891,692,4.288,693,5.977,694,5.071,695,5.071,696,5.071,697,5.071,698,3.772,699,3.891,700,3.891,701,3.891,702,3.891,703,3.891,704,3.891,705,3.891,706,3.891,707,3.891,708,3.891,709,3.891,710,3.891,711,3.891,712,5.071,713,3.891,714,3.891,715,3.891,716,3.891]],["title/interfaces/ChartAnimation.html",[443,0.303,717,1.498]],["body/interfaces/ChartAnimation.html",[3,0.313,4,0.276,9,0.24,13,0.475,28,0.432,29,0.996,30,0.713,31,1.012,38,0.026,40,0.713,65,1.619,225,2.428,229,0.407,231,1.885,232,1.738,235,0.508,281,1.738,283,1.619,344,1.32,430,1.228,437,1.228,438,1.07,441,0.019,442,0.019,443,0.58,445,1.156,458,0.767,470,1.885,479,1.764,486,1.012,496,1.412,499,1.364,526,2.257,717,2.257,718,2.019,719,2.621,720,3.341,721,4.317,722,2.189,723,1.738,724,2.189,725,2.189,726,2.189,727,2.189,728,2.019,729,2.019,730,2.842,731,1.87,732,2.911,733,1.619,734,2.189,735,1.87,736,1.87,737,1.87,738,1.87,739,1.738,740,1.764,741,2.189,742,2.911,743,1.619,744,2.189,745,2.189,746,1.738,747,2.189,748,2.189,749,2.189,750,1.87,751,2.189,752,2.189,753,2.189,754,2.189,755,2.189,756,2.189,757,2.189]],["title/interfaces/ChartBarDataInterface.html",[443,0.303,733,1.396]],["body/interfaces/ChartBarDataInterface.html",[3,0.306,4,0.27,9,0.235,13,0.464,28,0.423,29,0.982,30,0.72,31,0.989,38,0.026,40,0.728,43,3.406,65,2.45,225,1.829,229,0.401,231,1.762,232,1.699,235,0.505,281,1.699,283,1.583,344,1.291,430,1.21,437,1.21,438,1.054,441,0.019,442,0.019,443,0.577,445,1.131,458,1.094,470,1.869,479,1.649,486,0.989,496,2.014,499,1.349,526,2.224,717,1.699,718,1.974,719,1.974,720,2.141,721,4.254,722,2.141,723,1.699,724,2.141,725,2.141,726,2.141,727,2.141,728,1.974,729,1.974,730,2.801,731,2.393,732,3.055,733,2.072,734,2.141,735,2.83,736,1.829,737,1.829,738,1.829,739,1.699,740,1.749,741,2.141,742,2.88,743,1.583,744,2.141,745,2.141,746,1.699,747,2.141,748,2.141,749,2.141,750,1.829,751,2.141,752,2.141,753,2.141,754,2.141,755,2.141,756,2.141,757,2.141]],["title/components/ChartsComponent.html",[0,0.997,427,1.303]],["body/components/ChartsComponent.html",[0,1.661,1,0.585,2,1.178,3,0.13,4,0.115,5,0.837,6,0.837,7,0.837,8,0.837,9,0.1,13,0.322,18,1.368,19,1.881,20,0.837,21,2.699,22,2.164,24,1.368,26,1.368,28,0.179,29,0.761,30,0.293,31,0.686,32,2.369,33,0.671,34,1.707,37,1.107,38,0.026,39,2.04,40,0.682,41,2.063,42,1.806,46,2.872,68,2.605,72,1.652,112,1.779,114,1.089,125,1.089,229,0.311,230,0.318,231,1.596,235,0.13,236,0.342,264,3.51,265,2.152,266,1.982,267,1.379,269,3.636,270,1.213,275,1.368,276,1.779,277,3.902,279,3.778,280,1.089,281,1.178,283,0.671,284,2.872,285,3.082,286,2.9,289,1.483,291,2.513,292,1.379,297,1.379,300,1.379,304,1.379,306,2.605,307,1.379,309,1.881,310,1.779,311,2.611,312,1.089,314,2.253,315,1.213,320,2.856,325,1.368,329,3.298,333,2.172,334,2.253,335,1.379,336,1.213,337,1.379,338,1.089,340,2.253,344,1.444,351,2.901,352,1.379,353,1.379,354,1.379,371,1.213,377,2.253,380,1.379,383,1.779,386,3.198,389,2.253,390,2.856,398,1.379,417,0.627,418,1.368,419,1.368,420,0.837,421,2.195,422,0.837,423,1.253,424,0.837,425,0.627,426,0.837,427,1.499,428,0.837,429,0.585,430,0.641,431,0.837,432,0.627,433,0.837,434,0.627,435,0.837,436,0.585,437,0.813,438,0.817,439,0.837,440,0.837,441,0.01,442,0.01,447,0.783,450,0.512,458,1.121,460,1.351,461,1.351,465,1.724,466,2.172,468,1.351,484,1.401,499,0.641,572,1.379,573,0.776,575,1.606,586,1.379,597,3.298,598,1.483,634,0.99,650,0.837,661,1.982,668,2.253,739,0.721,740,0.783,758,1.213,759,1.982,760,3.378,761,2.664,762,2.664,763,2.664,764,2.664,765,2.664,766,2.664,767,2.253,768,2.253,769,2.664,770,1.982,771,2.253,772,1.483,773,1.982,774,2.664,775,2.664,776,3.378,777,1.631,778,3.902,779,2.664,780,1.735,781,2.253,782,1.631,783,2.901,784,1.631,785,1.631,786,1.379,787,1.631,788,1.631,789,1.631,790,1.631,791,2.856,792,2.664,793,2.513,794,2.253,795,1.631,796,4.3,797,1.631,798,1.631,799,1.631,800,3.378,801,1.631,802,4.614,803,3.901,804,1.631,805,1.631,806,2.664,807,2.664,808,1.631,809,2.664,810,1.982,811,2.664,812,2.664,813,1.631,814,4.614,815,1.631,816,1.631,817,1.631,818,2.664,819,5.161,820,4.295,821,1.631,822,1.631,823,1.631,824,1.631,825,2.664,826,2.664,827,1.379,828,1.618,829,1.982,830,1.631,831,3.298,832,1.982,833,1.631,834,2.901,835,1.631,836,1.631,837,1.631,838,1.631,839,1.631,840,1.631,841,1.631,842,1.379,843,1.631,844,1.631,845,1.631,846,1.631,847,1.379,848,1.631,849,1.631,850,1.631,851,1.631,852,1.631,853,1.631,854,1.631,855,1.178,856,1.631,857,1.631,858,1.631,859,1.631,860,1.631,861,1.379,862,1.631,863,1.631,864,1.631,865,1.631,866,1.631,867,1.631,868,1.631,869,1.379,870,2.664,871,2.664,872,2.664,873,2.664,874,1.631,875,2.664,876,2.664,877,1.631,878,1.213,879,1.631,880,1.213,881,1.631,882,1.631,883,1.631,884,1.267,885,1.631,886,1.631,887,1.631,888,1.631,889,1.631,890,1.631,891,1.631,892,1.631,893,1.631,894,1.631,895,1.631,896,2.664,897,1.631,898,1.631,899,1.631,900,1.631,901,2.664,902,1.631,903,1.631,904,1.631,905,1.631,906,2.664,907,1.631,908,1.631,909,1.631,910,1.631,911,2.664,912,2.664,913,2.664,914,2.664,915,2.664,916,2.253,917,1.631,918,1.631,919,2.664,920,2.664,921,1.631,922,1.631,923,1.631,924,1.631,925,3.378,926,3.378,927,2.664,928,1.631,929,2.856,930,5.834,931,2.664,932,1.631,933,2.664,934,2.513,935,1.631,936,2.664,937,1.631,938,1.631,939,1.631,940,1.631,941,1.631,942,1.631,943,1.631,944,1.631,945,1.631,946,1.631,947,1.631,948,3.901,949,2.664,950,1.631,951,1.631,952,1.631,953,1.631,954,1.631,955,1.631,956,2.664,957,2.664,958,2.664,959,1.631,960,1.379,961,1.631,962,2.664,963,1.631,964,2.664,965,1.631,966,2.664,967,1.631,968,1.631,969,1.631,970,1.631,971,1.631,972,1.631]],["title/interfaces/CurrentValuesSchema.html",[443,0.303,486,0.872]],["body/interfaces/CurrentValuesSchema.html",[3,0.315,4,0.278,9,0.241,13,0.618,28,0.434,29,1,30,0.625,38,0.026,40,0.724,158,1.672,229,0.315,235,0.496,441,0.019,442,0.019,443,0.589,444,1.419,445,1.162,446,2.2,447,1.506,448,2.4,449,1.419,450,1.609,451,1.88,458,1.319,463,2.029,468,1.609,470,1.786,478,1.747,479,1.671,480,1.889,481,2.34,482,2.63,483,3.11,484,2.041,485,3.277,486,1.318,487,3.783,488,3.348,489,2.4,490,2.4,491,2.109,492,1.88,493,1.242,494,2.4,495,2.4,496,2.041,497,2.4,498,2.4,499,0.951,500,2.4,501,1.627,502,2.4,503,2.029,504,2.4,505,2.029,506,1.88,507,2.4,508,1.88,509,1.88,510,2.029,511,2.4,512,2.4,513,2.4,514,2.4,515,2.4,516,2.4,517,2.4,518,2.4]],["title/interfaces/DiferedComponentInterface.html",[443,0.303,746,1.498]],["body/interfaces/DiferedComponentInterface.html",[3,0.295,4,0.26,9,0.226,13,0.448,28,0.407,30,0.723,31,1.418,34,1.516,37,1.418,38,0.026,39,2.171,40,0.689,65,1.526,225,1.763,229,0.391,231,1.731,232,1.638,235,0.5,281,1.638,283,1.526,344,1.245,423,1.418,430,1.325,437,1.182,438,1.029,441,0.018,442,0.018,443,0.572,445,1.09,458,0.723,460,1.731,461,1.731,470,1.843,479,1.62,486,0.954,496,1.331,499,1.411,526,2.435,717,1.638,718,1.903,719,1.903,720,2.064,722,2.064,723,1.638,724,2.064,725,2.064,726,2.064,727,2.064,728,1.903,729,1.903,730,2.735,731,1.763,732,3.012,733,1.526,734,2.064,735,1.763,736,1.763,737,1.763,738,1.763,739,1.638,740,1.794,741,2.064,742,3.012,743,1.526,744,2.064,745,2.064,746,2.171,747,2.064,748,2.064,749,2.064,750,1.763,751,2.064,752,2.064,753,2.064,754,2.064,755,2.064,756,2.064,757,2.064,973,4.153,974,4.153,975,4.153,976,3.707,977,3.707,978,4.098,979,3.707,980,3.707,981,3.707,982,3.707]],["title/components/DiferredDataChartComponent.html",[0,0.997,429,1.217]],["body/components/DiferredDataChartComponent.html",[0,1.136,1,0.482,2,1.002,3,0.107,4,0.094,5,0.689,6,0.689,7,0.689,8,0.689,9,0.082,16,1.917,18,1.164,19,1.262,20,0.689,21,2.506,22,2.01,24,1.164,26,1.164,28,0.148,29,0.675,30,0.76,31,0.583,32,2.099,33,0.933,34,1.721,37,1.299,38,0.026,39,2.072,40,0.684,41,2.098,42,1.873,43,1.786,65,0.933,68,3.131,72,2.403,77,0.897,109,2.188,110,2.873,112,0.897,114,2.309,125,2.979,156,2.188,158,0.583,179,1.686,229,0.334,230,0.262,231,1.738,232,0.593,233,2.544,235,0.107,236,0.616,237,1.686,265,1.002,275,1.511,283,0.933,286,1.775,309,1.262,325,1.511,344,1.297,417,1.328,418,1.164,419,1.164,420,0.689,421,1.837,422,0.689,423,1.206,424,0.689,425,0.516,426,0.689,427,0.516,428,0.689,429,1.241,430,1.128,431,0.689,432,0.516,433,0.689,434,0.516,435,0.689,436,0.482,437,0.323,438,0.281,439,0.689,440,0.689,441,0.008,442,0.008,447,0.666,449,1.241,450,0.712,451,0.638,458,0.952,460,1.473,461,1.317,465,0.593,466,0.747,468,0.422,479,0.666,480,0.924,481,0.933,484,0.814,488,1.924,491,0.933,493,0.712,506,1.644,508,1.644,533,1.638,562,1.376,565,0.689,573,1.078,575,0.933,587,1.917,598,1.262,603,1.376,604,0.999,612,0.999,615,0.897,650,0.689,733,0.933,735,1.837,736,1.837,737,1.644,738,1.993,740,0.395,743,0.933,746,1.002,767,1.917,770,1.686,771,1.917,772,2.333,773,1.686,778,2.488,780,0.689,781,1.917,783,1.686,786,1.135,793,1.686,810,1.686,819,2.923,820,2.923,828,1.376,842,1.135,855,1.3,861,1.135,869,1.135,878,2.571,880,2.188,884,1.993,973,2.923,974,1.917,975,2.923,983,5.315,984,4.198,985,0.999,986,1.917,987,2.488,988,1.917,989,2.942,990,2.267,991,2.942,992,1.917,993,1.917,994,2.267,995,1.917,996,2.267,997,2.333,998,2.267,999,1.686,1000,3.457,1001,2.923,1002,1.686,1003,1.135,1004,1.342,1005,1.342,1006,4.19,1007,1.514,1008,2.488,1009,3.457,1010,3.117,1011,2.267,1012,1.514,1013,1.917,1014,2.923,1015,1.342,1016,1.342,1017,2.267,1018,2.267,1019,3.457,1020,2.267,1021,1.342,1022,1.342,1023,1.917,1024,1.342,1025,1.342,1026,2.267,1027,1.917,1028,2.267,1029,1.342,1030,1.342,1031,1.342,1032,1.514,1033,1.342,1034,1.342,1035,1.342,1036,3.963,1037,2.267,1038,2.571,1039,2.267,1040,1.917,1041,4.46,1042,2.267,1043,1.164,1044,2.267,1045,2.267,1046,2.267,1047,1.917,1048,1.342,1049,1.342,1050,2.267,1051,1.917,1052,1.917,1053,1.135,1054,2.267,1055,2.923,1056,2.267,1057,2.267,1058,2.267,1059,2.267,1060,2.267,1061,1.342,1062,1.917,1063,1.342,1064,1.342,1065,2.267,1066,2.267,1067,1.135,1068,1.135,1069,1.342,1070,1.135,1071,1.135,1072,1.135,1073,1.135,1074,1.135,1075,1.342,1076,1.342,1077,1.342,1078,1.342,1079,0.999,1080,0.999,1081,0.897,1082,0.999,1083,0.999,1084,0.897,1085,1.342,1086,1.342,1087,1.262,1088,1.342,1089,1.342,1090,1.135,1091,1.135,1092,1.135,1093,1.342,1094,1.342,1095,1.342,1096,1.342,1097,1.135,1098,1.135,1099,1.135,1100,1.342,1101,1.342,1102,1.342,1103,1.342,1104,1.342,1105,1.342,1106,1.342,1107,2.267,1108,1.342,1109,1.262,1110,1.342,1111,1.342,1112,1.262,1113,1.342,1114,2.267,1115,2.267,1116,1.342,1117,1.342,1118,2.267,1119,2.267,1120,0.999,1121,1.342,1122,0.815,1123,1.342,1124,2.267,1125,1.342,1126,1.342,1127,1.342,1128,1.342,1129,1.342,1130,1.262,1131,1.262,1132,1.262,1133,1.342,1134,1.342,1135,1.342,1136,1.342,1137,1.135,1138,1.342,1139,1.342,1140,1.342,1141,1.342,1142,1.342,1143,1.342,1144,1.342,1145,1.342,1146,1.342,1147,1.342,1148,1.342,1149,1.342,1150,1.342,1151,1.342,1152,1.342,1153,1.342,1154,1.342,1155,1.342,1156,1.342,1157,1.342,1158,1.342,1159,1.342,1160,1.342,1161,1.342,1162,1.342,1163,1.342,1164,1.342,1165,1.342,1166,1.342,1167,1.342,1168,1.342,1169,1.342,1170,1.342,1171,1.342,1172,2.267,1173,1.686,1174,1.342,1175,1.342,1176,1.342,1177,1.342,1178,2.267,1179,2.267,1180,1.342,1181,1.342,1182,2.267,1183,2.267,1184,2.267,1185,2.267,1186,2.267,1187,2.488,1188,2.488,1189,2.488,1190,1.342,1191,1.917,1192,1.917,1193,1.917,1194,1.917,1195,2.942,1196,1.917,1197,2.488,1198,1.917,1199,2.267,1200,2.923,1201,2.267,1202,1.342,1203,1.917,1204,2.923,1205,2.488,1206,1.917,1207,2.267,1208,1.342,1209,1.342,1210,1.342,1211,1.342,1212,1.342,1213,1.342,1214,1.342,1215,1.135,1216,1.342,1217,1.342,1218,1.135,1219,1.342,1220,1.135,1221,1.135,1222,1.135,1223,1.135,1224,1.342,1225,1.342,1226,1.342,1227,1.342,1228,0.897,1229,1.342,1230,1.342,1231,1.135,1232,1.135,1233,1.135,1234,1.342,1235,1.342,1236,1.342,1237,1.342]],["title/injectables/DiferredModeUsecases.html",[533,1.887,546,1.217]],["body/injectables/DiferredModeUsecases.html",[3,0.259,4,0.228,9,0.198,13,0.622,28,0.357,30,0.641,31,1.157,33,1.338,34,1.417,37,1.326,38,0.026,40,0.566,41,1.167,42,1.021,72,1.979,158,1.591,229,0.358,230,0.634,235,0.358,236,1.079,423,1.326,430,1.081,441,0.017,442,0.017,443,0.291,444,1.849,447,1.514,450,1.618,458,1.305,460,1.618,461,1.618,462,3.001,465,2.578,466,3.358,468,1.895,477,3.358,480,1.412,481,1.85,491,2.121,492,2.869,493,1.021,499,1.451,501,1.338,503,1.669,533,2.502,546,1.167,547,1.974,565,1.669,573,1.546,575,2.595,585,2.729,666,3.44,740,1.321,780,1.669,855,1.986,997,3.358,1032,2.171,1038,3.831,1043,2.645,1087,1.81,1109,2.502,1112,3.247,1120,3.343,1122,1.974,1130,2.502,1131,2.502,1132,2.502,1238,4.133,1239,2.418,1240,4.494,1241,4.494,1242,2.748,1243,3.25,1244,3.25,1245,3.25,1246,3.44,1247,4.355,1248,3.44,1249,4.355,1250,3.358,1251,5.101,1252,2.748,1253,3.25,1254,3.25,1255,4.355,1256,4.355,1257,2.171,1258,2.748,1259,2.171,1260,2.171,1261,2.171,1262,2.171,1263,2.748,1264,2.748,1265,2.748,1266,2.748,1267,3.001,1268,2.748,1269,2.748,1270,2.748,1271,2.748]],["title/modules/FeaturesModule.html",[519,1.138,1272,2.264]],["body/modules/FeaturesModule.html",[3,0.333,4,0.293,9,0.255,13,0.504,30,0.584,38,0.026,229,0.516,230,0.815,235,0.333,236,0.875,417,1.605,429,2.326,430,1.005,436,2.326,437,1.005,438,1.112,441,0.02,442,0.02,519,2.128,521,1.72,528,2.955,529,3.948,530,2.79,536,3.543,537,2.955,538,2.537,545,2.145,584,3.223,622,2.326,623,2.537,630,3.606,632,3.545,633,2.79,634,2.537,636,3.532,637,4.488,641,3.532,651,3.107,653,3.532,984,2.79,1272,4.578,1273,3.532,1274,3.532,1275,3.532,1276,3.933,1277,4.177,1278,4.933,1279,5.308,1280,5.308,1281,5.308,1282,2.79,1283,4.488]],["title/modules/FeaturesRoutingModule.html",[519,1.138,1276,2.058]],["body/modules/FeaturesRoutingModule.html",[2,2.084,3,0.376,4,0.331,9,0.288,30,0.629,38,0.026,72,1.812,229,0.511,230,0.92,235,0.376,236,0.988,429,1.693,430,1.134,436,1.693,437,1.134,438,1.291,441,0.021,442,0.021,447,1.386,521,1.941,528,3.186,537,2.625,545,2.421,649,3.822,650,2.421,658,3.987,660,3.741,661,3.507,984,3.149,1276,3.475,1278,3.987,1282,3.149,1283,4.839,1284,4.715,1285,3.987,1286,4.715,1287,4.715,1288,4.715,1289,4.715,1290,4.715]],["title/components/FooterComponent.html",[0,0.997,432,1.303]],["body/components/FooterComponent.html",[0,1.939,1,1.351,2,2.453,3,0.3,4,0.264,5,1.932,6,1.932,7,1.932,8,1.932,9,0.23,13,0.454,14,4.561,20,1.932,21,3.386,22,2.715,24,2.547,26,2.547,28,0.414,29,0.968,30,0.414,34,1.035,38,0.026,40,0.414,41,1.351,42,1.182,77,2.513,87,3.69,88,3.69,89,4.194,90,4.194,229,0.3,230,0.734,231,1.182,235,0.3,236,0.788,264,2.513,265,1.663,275,1.932,284,2.513,285,2.513,289,2.761,306,3.313,309,2.761,310,3.313,311,3.012,312,3.313,313,3.181,325,1.932,338,2.513,417,1.446,418,2.547,419,2.547,420,1.932,421,2.806,422,1.932,423,1.276,424,1.932,425,1.446,426,1.932,427,1.446,428,1.932,429,1.351,430,0.905,431,1.932,432,2.267,433,1.932,434,1.446,435,1.932,436,1.351,437,0.905,438,0.788,439,1.932,440,1.932,441,0.018,442,0.018,584,2.284,617,3.181,929,3.181,934,2.798,1013,4.194,1291,3.181,1292,6.593,1293,5.549,1294,4.96,1295,4.96,1296,4.96,1297,3.762,1298,4.96,1299,3.69,1300,4.96,1301,2.798,1302,3.762,1303,4.96,1304,3.181]],["title/components/HeaderComponent.html",[0,0.997,434,1.303]],["body/components/HeaderComponent.html",[0,1.88,1,1.24,2,2.07,3,0.275,4,0.243,5,1.773,6,1.773,7,1.773,8,1.773,9,0.211,13,0.417,20,1.773,21,3.328,22,2.668,24,2.405,26,2.405,28,0.38,29,0.914,30,0.38,34,1.289,38,0.026,40,0.38,41,1.682,42,1.472,160,3.128,229,0.373,230,0.674,231,1.085,235,0.275,236,0.724,264,3.55,265,2.519,266,2.569,270,2.569,275,2.405,276,2.306,278,2.92,279,2.569,284,2.306,285,2.306,286,1.773,289,1.922,291,3.484,306,3.128,309,1.922,310,2.306,311,2.097,324,2.569,325,1.773,333,1.922,336,2.569,344,2.063,351,2.569,358,2.92,362,3.961,371,2.569,383,3.55,386,2.569,396,2.92,417,1.327,418,2.405,419,2.405,420,1.773,421,2.711,422,1.773,423,1.205,424,1.773,425,1.327,426,1.773,427,1.327,428,1.773,429,1.24,430,0.831,431,1.773,432,1.327,433,1.773,434,2.19,435,1.773,436,1.24,437,0.831,438,0.724,439,1.773,440,1.773,441,0.017,442,0.017,458,0.674,519,1.16,564,3.961,567,2.097,568,2.92,584,2.097,603,2.097,768,3.961,791,4.495,793,3.484,794,3.961,847,2.92,916,2.92,934,2.569,960,2.92,1062,3.961,1228,2.306,1299,3.484,1301,2.569,1304,2.92,1305,2.92,1306,5.958,1307,5.315,1308,4.684,1309,4.684,1310,3.453,1311,4.684,1312,5.7,1313,3.453,1314,3.453,1315,3.961,1316,3.453,1317,4.684,1318,2.92,1319,3.453,1320,3.453,1321,4.684,1322,4.684,1323,4.684,1324,3.453,1325,3.453,1326,3.453,1327,4.684,1328,3.453]],["title/injectables/IsLoadingService.html",[546,1.217,594,2.058]],["body/injectables/IsLoadingService.html",[3,0.342,4,0.301,9,0.262,13,0.518,28,0.471,29,1.053,31,1.389,33,2.432,34,1.625,37,1.103,38,0.026,39,1.895,40,0.471,41,1.938,42,2.049,229,0.43,230,0.837,235,0.342,236,0.898,423,1.103,441,0.02,442,0.02,447,1.587,460,1.347,461,1.347,478,1.895,479,1.587,526,2.739,546,1.938,547,2.604,550,4.563,569,3.625,570,3.189,575,1.766,590,4.393,594,3.277,601,4.393,662,4.993,683,5.513,855,2.385,884,2.567,1299,4.014,1329,5.24,1330,3.625,1331,5.396,1332,5.396,1333,5.396,1334,4.288,1335,4.288,1336,5.905,1337,5.396,1338,4.288,1339,4.288]],["title/interfaces/LatestTransmissionsResponseScema.html",[443,0.303,509,1.612]],["body/interfaces/LatestTransmissionsResponseScema.html",[3,0.306,4,0.27,9,0.234,13,0.607,28,0.422,29,0.981,30,0.654,38,0.026,40,0.734,158,1.66,229,0.306,235,0.492,441,0.019,442,0.019,443,0.592,444,1.378,445,1.129,446,2.137,447,1.478,448,2.331,449,1.378,450,1.579,451,1.826,458,1.329,463,1.971,468,1.761,470,2.027,478,1.697,479,1.478,480,1.761,481,2.308,482,1.971,483,2.331,484,1.805,485,2.581,486,0.988,487,3.748,488,2.137,489,2.331,490,2.331,491,2.308,492,1.826,493,1.206,494,2.331,495,2.331,496,1.378,497,2.331,498,2.331,499,0.923,500,2.331,501,1.58,502,2.331,503,1.971,504,3.052,505,2.581,506,2.391,507,3.052,508,2.391,509,2.391,510,3.053,511,3.611,512,3.611,513,3.611,514,2.331,515,2.331,516,2.331,517,2.331,518,2.331]],["title/interfaces/OninitResponseSchema.html",[443,0.303,1340,2.264]],["body/interfaces/OninitResponseSchema.html",[3,0.274,4,0.241,9,0.21,13,0.415,28,0.378,29,0.911,30,0.625,37,1.365,38,0.026,40,0.625,42,1.467,72,2.412,158,1.643,229,0.423,230,0.671,235,0.372,236,0.978,437,0.827,438,1.111,441,0.017,442,0.017,443,0.474,444,1.234,445,1.011,447,1.011,449,1.234,450,1.869,465,1.519,468,1.787,477,1.914,480,1.787,481,1.923,484,2.043,485,2.398,486,1.365,491,1.923,493,1.666,499,0.827,505,1.765,506,2.221,510,1.765,534,1.914,546,1.234,565,1.765,573,1.635,575,2.343,585,2.087,598,1.914,698,2.557,739,1.519,740,1.373,772,2.6,780,1.765,828,2.835,855,2.515,884,2.221,997,2.952,1012,2.296,1043,1.765,1087,1.914,1109,2.952,1112,2.952,1122,3.454,1130,2.952,1131,2.952,1132,2.952,1246,3.119,1248,2.296,1250,1.914,1259,2.296,1260,2.296,1261,2.296,1262,2.296,1267,2.296,1340,3.119,1341,2.557,1342,3.945,1343,2.557,1344,4.484,1345,2.907,1346,2.907,1347,2.907,1348,2.907,1349,2.907,1350,2.907,1351,2.907,1352,2.907,1353,2.907,1354,2.907,1355,3.473,1356,2.907,1357,2.907,1358,2.907,1359,2.907,1360,2.907,1361,2.907,1362,2.907,1363,2.907,1364,2.907,1365,2.907,1366,2.907,1367,2.907,1368,4.484,1369,2.907,1370,2.907,1371,2.907,1372,2.907,1373,2.907,1374,2.907,1375,2.907,1376,2.907,1377,2.907,1378,2.907,1379,2.907,1380,2.907,1381,2.907,1382,2.907]],["title/interfaces/RangeDataSchema.html",[443,0.303,501,1.396]],["body/interfaces/RangeDataSchema.html",[3,0.318,4,0.28,9,0.243,13,0.622,28,0.438,29,1.005,30,0.687,38,0.026,40,0.716,158,1.675,229,0.318,235,0.498,441,0.019,442,0.019,443,0.596,444,1.431,445,1.172,446,2.219,447,1.515,448,2.421,449,1.431,450,1.793,451,1.896,458,1.301,463,2.047,468,1.963,470,1.793,478,1.762,479,1.515,480,1.895,481,2.121,482,2.047,483,2.421,484,1.85,485,2.645,486,1.026,487,3.128,488,2.219,489,2.421,490,2.421,491,2.121,492,1.896,493,1.253,494,2.421,495,2.421,496,2.049,497,3.128,498,3.128,499,1.239,500,3.128,501,2.121,502,2.421,503,2.047,504,2.421,505,2.047,506,1.896,507,2.421,508,1.896,509,1.896,510,2.047,511,2.421,512,2.421,513,2.421,514,2.421,515,2.421,516,2.421,517,2.421,518,2.421,1383,4.826]],["title/components/RealTimeChartComponent.html",[0,0.997,436,1.217]],["body/components/RealTimeChartComponent.html",[0,1.286,1,0.524,2,1.075,3,0.116,4,0.103,5,0.75,6,0.75,7,0.75,8,0.75,9,0.089,13,0.44,18,1.249,19,1.355,20,0.75,21,2.591,22,2.077,24,1.249,26,1.249,28,0.161,29,0.712,30,0.623,31,0.626,32,2.214,33,1.002,34,1.727,37,1.434,38,0.026,39,1.382,40,0.682,41,2.034,42,1.78,43,1.477,65,1.502,68,2.706,72,2.141,74,2.057,88,2.326,109,2.326,110,1.087,112,1.625,114,0.976,125,2.436,156,2.326,158,0.376,173,0.976,179,1.81,229,0.291,230,0.285,231,1.961,232,0.646,233,1.899,235,0.116,236,0.655,237,1.81,265,1.075,275,1.873,280,1.625,281,1.075,283,1.002,286,1.249,325,1.873,338,0.976,344,1.558,417,1.557,418,1.249,419,1.249,420,0.75,421,2.081,422,0.75,423,1.298,424,0.75,425,0.561,426,0.75,427,0.561,428,0.75,429,0.524,430,0.351,431,0.75,432,0.561,433,0.75,434,0.561,435,0.75,436,1.455,437,1.252,438,1.444,439,0.75,440,0.75,441,0.009,442,0.009,445,0.429,449,0.524,450,0.982,451,0.695,458,0.905,460,1.457,461,1.457,468,1.585,480,0.459,484,0.874,486,1.375,493,0.764,496,0.524,534,1.741,562,2.214,565,0.75,573,0.695,575,2.001,598,2.03,603,1.477,612,1.087,615,1.625,731,1.157,732,2.08,733,1.002,735,1.735,736,1.735,737,1.735,738,1.735,740,1.072,742,0.75,743,1.002,759,1.81,770,1.81,772,1.355,773,1.81,780,0.75,783,1.81,810,1.81,855,1.791,878,1.81,880,1.087,884,1.927,985,1.087,986,2.057,987,2.644,988,2.057,992,2.057,993,2.057,995,2.057,997,3.318,999,2.326,1001,3.084,1002,1.81,1003,1.235,1007,1.625,1008,3.084,1032,1.625,1036,3.699,1051,3.699,1053,1.235,1055,2.644,1067,1.235,1068,1.235,1070,1.235,1071,1.235,1072,1.235,1073,1.235,1074,1.235,1081,0.976,1084,0.976,1087,0.813,1090,1.235,1091,1.235,1092,1.235,1097,1.235,1098,1.235,1099,1.235,1109,1.355,1112,1.741,1130,1.741,1131,1.741,1132,1.741,1137,4.266,1173,3.872,1187,2.644,1188,3.084,1189,3.084,1191,1.235,1192,1.235,1193,1.235,1194,1.235,1196,1.235,1197,3.084,1198,2.644,1200,1.235,1203,1.235,1204,2.057,1205,2.057,1206,1.235,1215,2.057,1218,1.235,1220,1.235,1221,1.235,1222,2.057,1223,2.057,1228,0.976,1231,1.235,1232,1.235,1233,1.235,1252,1.235,1282,4.215,1285,1.235,1318,2.057,1384,5.337,1385,2.433,1386,2.433,1387,3.084,1388,2.057,1389,2.644,1390,2.057,1391,2.057,1392,2.057,1393,2.057,1394,1.461,1395,1.461,1396,1.461,1397,4.859,1398,2.433,1399,1.461,1400,1.461,1401,1.461,1402,2.433,1403,2.433,1404,2.433,1405,1.461,1406,2.433,1407,2.433,1408,2.433,1409,1.461,1410,1.461,1411,1.461,1412,1.461,1413,1.461,1414,1.461,1415,1.461,1416,1.461,1417,1.235,1418,1.461,1419,1.461,1420,2.433,1421,1.461,1422,1.461,1423,1.461,1424,1.461,1425,1.461,1426,1.461,1427,2.433,1428,1.461,1429,1.087,1430,1.461,1431,1.087,1432,1.461,1433,1.235,1434,1.461,1435,1.461,1436,1.461,1437,1.461,1438,1.461,1439,1.461,1440,1.461,1441,1.461,1442,1.461,1443,1.461,1444,1.461,1445,1.461,1446,1.461,1447,1.461,1448,1.461,1449,1.461,1450,1.461,1451,1.461,1452,1.461,1453,1.461,1454,1.461,1455,1.461,1456,1.461,1457,1.461,1458,1.461,1459,1.461,1460,1.461,1461,1.461,1462,1.461,1463,1.461,1464,1.461,1465,1.461,1466,1.461,1467,1.461,1468,1.461,1469,1.461,1470,1.461,1471,1.461,1472,2.433,1473,1.461,1474,1.461,1475,1.461,1476,1.235,1477,1.461,1478,1.461,1479,1.461,1480,1.461,1481,1.461,1482,1.461,1483,1.461,1484,1.461,1485,1.461,1486,1.461,1487,1.461,1488,1.461,1489,1.461,1490,1.461,1491,1.461,1492,1.461,1493,1.461,1494,1.461,1495,1.461,1496,1.461,1497,1.461,1498,1.461,1499,1.461,1500,1.461,1501,1.461,1502,2.433,1503,1.461,1504,1.461,1505,1.461,1506,1.461,1507,1.461,1508,1.461,1509,2.433,1510,1.461,1511,1.461,1512,1.461,1513,1.461,1514,1.461,1515,1.461,1516,1.461,1517,1.461,1518,1.461,1519,1.461,1520,1.461,1521,1.461,1522,1.461,1523,1.461,1524,1.461,1525,1.461,1526,1.461,1527,1.461,1528,1.461,1529,1.461,1530,1.461,1531,1.461,1532,1.461,1533,1.461]],["title/interfaces/RealTimeChartComponentInterface.html",[443,0.303,750,1.612]],["body/interfaces/RealTimeChartComponentInterface.html",[3,0.271,4,0.239,9,0.208,13,0.411,28,0.374,30,0.71,31,1.357,34,1.722,37,1.611,38,0.026,39,2.331,40,0.718,65,1.401,225,1.618,229,0.369,231,1.78,232,1.503,235,0.487,281,1.503,283,1.401,344,1.142,423,1.611,430,1.115,437,1.269,438,1.105,441,0.017,442,0.017,443,0.56,445,1,458,0.664,460,1.967,461,1.967,470,1.78,479,1.551,486,0.875,496,1.221,499,1.363,526,2.331,717,1.503,718,1.747,719,1.747,720,1.894,722,1.894,723,1.503,724,1.894,725,1.894,726,1.894,727,1.894,728,1.747,729,1.747,730,2.581,731,1.618,732,2.908,733,1.401,734,1.894,735,1.618,736,1.618,737,1.618,738,1.618,739,1.503,740,1.743,741,1.894,742,2.908,743,1.401,744,1.894,745,1.894,746,1.503,747,1.894,748,1.894,749,1.894,750,2.205,751,1.894,752,1.894,753,1.894,754,1.894,755,1.894,756,1.894,757,1.894,978,4.656,1387,3.92,1388,3.92,1389,3.92,1390,3.92,1391,3.92,1392,3.92,1393,3.92,1534,3.401,1535,3.401,1536,3.401,1537,3.401,1538,3.401,1539,3.401,1540,3.401,1541,3.401,1542,3.401,1543,3.401,1544,3.401,1545,3.401,1546,3.401,1547,3.401]],["title/injectables/RealTimeUseCases.html",[534,1.887,546,1.217]],["body/injectables/RealTimeUseCases.html",[3,0.233,4,0.205,9,0.179,13,0.353,19,2.323,28,0.321,30,0.675,31,1.074,33,1.204,34,1.459,37,1.501,38,0.026,40,0.616,42,1.311,72,2.306,158,1.65,229,0.388,230,0.571,235,0.332,236,1.019,423,1.365,437,1.004,438,1.308,441,0.015,442,0.015,443,0.373,444,1.746,447,0.86,449,1.746,450,1.762,458,1.035,460,1.666,461,1.666,465,2.15,468,1.928,470,1.311,477,2.323,480,1.666,481,2.184,484,1.05,485,2.879,486,0.752,491,2.184,493,0.919,499,1.004,505,1.501,506,2.313,510,1.501,534,2.323,546,1.05,547,1.776,565,1.501,573,1.391,575,2.184,585,2.533,598,2.323,698,2.175,739,1.292,740,1.649,772,3.122,780,1.501,828,2.533,855,2.344,884,1.984,997,3.477,1012,2.786,1032,3.248,1043,1.501,1087,1.628,1109,2.708,1112,2.708,1122,1.776,1130,2.708,1131,2.708,1132,2.708,1242,2.472,1246,3.745,1248,2.786,1250,2.708,1259,1.953,1260,1.953,1261,1.953,1262,1.953,1267,1.953,1340,1.953,1341,4.171,1342,4.337,1343,2.175,1344,3.528,1345,2.472,1346,4.113,1347,4.113,1348,4.113,1349,2.472,1350,2.472,1351,2.472,1352,2.472,1353,3.528,1354,3.528,1355,3.945,1356,3.528,1357,3.528,1358,3.528,1359,2.472,1360,2.472,1361,3.528,1362,3.528,1363,3.528,1364,2.472,1365,2.472,1366,2.472,1367,2.472,1368,4.113,1369,2.472,1370,2.472,1371,2.472,1372,2.472,1373,2.472,1374,2.472,1375,2.472,1376,2.472,1377,2.472,1378,2.472,1379,2.472,1380,2.472,1381,2.472,1382,2.472,1548,4.172,1549,4.172,1550,2.924,1551,2.924,1552,2.924,1553,2.924,1554,2.924,1555,2.924,1556,2.924]],["title/interfaces/SessionInfoSchema.html",[443,0.303,493,1.065]],["body/interfaces/SessionInfoSchema.html",[3,0.311,4,0.274,9,0.238,13,0.749,28,0.429,29,0.992,30,0.621,38,0.026,40,0.73,158,1.667,229,0.311,235,0.494,441,0.019,442,0.019,443,0.587,444,1.402,445,1.148,446,2.174,447,1.494,448,2.371,449,1.402,450,1.597,451,1.857,458,1.317,463,2.005,468,1.95,470,1.95,478,1.726,479,1.661,480,1.88,481,2.093,482,2.005,483,2.371,484,2.029,485,2.901,486,1.005,487,3.086,488,2.174,489,2.371,490,3.086,491,2.327,492,2.417,493,1.597,494,3.634,495,3.634,496,2.029,497,2.371,498,2.371,499,0.939,500,2.371,501,1.608,502,2.371,503,2.005,504,2.371,505,2.005,506,1.857,507,2.371,508,1.857,509,1.857,510,2.005,511,2.371,512,2.371,513,2.371,514,2.371,515,2.371,516,2.371,517,2.371,518,2.371]],["title/modules/SharedModule.html",[519,1.138,630,1.887]],["body/modules/SharedModule.html",[3,0.328,4,0.289,9,0.251,13,0.497,38,0.026,229,0.523,230,0.803,235,0.328,236,0.863,417,1.582,427,2.628,432,2.628,434,2.628,441,0.02,442,0.02,450,1.652,519,2.119,521,1.695,528,2.928,529,3.912,530,2.749,536,3.519,537,2.292,538,2.5,545,2.975,622,2.292,623,2.5,630,3.826,632,3.512,633,2.749,634,2.5,645,4.447,646,3.062,649,3.512,650,2.114,651,3.912,1250,2.928,1557,3.481,1558,3.481,1559,3.481,1560,4.117,1561,4.117,1562,4.117,1563,4.117]],["title/interfaces/chartBuilder.html",[443,0.303,743,1.396]],["body/interfaces/chartBuilder.html",[3,0.301,4,0.266,9,0.231,13,0.456,28,0.416,30,0.726,31,1.521,34,1.369,37,1.281,38,0.026,39,1.671,40,0.65,65,1.557,225,1.798,229,0.397,231,1.748,232,1.671,235,0.502,281,1.671,283,1.557,344,1.27,423,0.973,430,1.338,437,1.338,438,1.166,441,0.018,442,0.018,443,0.583,445,1.112,458,0.738,460,1.188,461,1.188,470,1.857,479,1.738,486,0.973,496,1.358,499,1.422,526,2.2,717,1.671,718,1.941,719,1.941,720,2.105,722,2.105,723,1.671,724,2.105,725,2.105,726,2.105,727,2.105,728,1.941,729,1.941,730,2.771,731,1.798,732,2.856,733,1.557,734,2.105,735,1.798,736,1.798,737,1.798,738,1.798,739,2.2,740,1.854,741,2.771,742,3.035,743,2.049,744,2.105,745,2.105,746,1.671,747,2.105,748,2.105,749,2.105,750,1.798,751,2.105,752,2.105,753,2.105,754,2.105,755,2.105,756,2.105,757,2.105,978,2.812,999,4.138,1002,3.702,1564,3.781,1565,3.781,1566,3.781]],["title/interfaces/chartTitle.html",[443,0.303,723,1.498]],["body/interfaces/chartTitle.html",[3,0.307,4,0.271,9,0.236,13,0.466,28,0.424,29,0.984,30,0.71,31,0.993,38,0.026,40,0.71,65,1.589,225,1.835,229,0.402,231,1.872,232,1.705,235,0.505,281,1.705,283,1.589,286,2.885,289,3.128,333,3.128,344,1.693,430,1.213,437,1.213,438,1.057,441,0.019,442,0.019,443,0.578,445,1.134,458,1.206,470,1.872,479,1.752,486,0.993,496,1.385,499,1.351,526,2.229,717,1.705,718,1.981,719,1.981,720,2.148,722,2.148,723,2.229,724,2.148,725,2.148,726,2.148,727,2.148,728,1.981,729,1.981,730,3.317,731,1.835,732,2.885,733,1.589,734,2.148,735,1.835,736,1.835,737,1.835,738,1.835,739,1.705,740,1.752,741,2.148,742,2.885,743,1.589,744,2.148,745,2.148,746,1.705,747,2.148,748,2.148,749,2.148,750,1.835,751,2.148,752,2.148,753,2.148,754,2.148,755,2.148,756,2.148,757,2.148]],["title/coverage.html",[1567,3.911]],["body/coverage.html",[0,1.83,1,1.194,9,0.203,10,2.813,11,2.222,12,2.813,30,0.502,38,0.026,40,0.366,160,2.222,233,2.02,265,2.018,280,4.525,321,3.397,425,1.278,427,1.278,429,1.194,432,1.278,434,1.278,436,1.194,438,1.176,441,0.017,442,0.017,443,0.596,444,1.194,446,3.274,486,0.856,493,1.045,499,1.098,501,1.37,509,1.582,531,2.222,533,1.852,534,1.852,546,2.015,548,2.813,567,2.773,583,2.813,594,2.02,631,2.02,678,2.813,680,2.813,681,2.813,717,1.47,718,3.12,723,1.47,733,1.37,743,1.37,746,1.47,750,1.582,758,3.878,832,2.475,834,2.475,855,1.47,983,2.813,984,2.222,985,3.397,1040,4.973,1079,2.475,1080,2.475,1081,2.222,1082,2.475,1083,2.475,1084,2.222,1238,3.397,1239,3.397,1257,2.222,1282,2.222,1291,2.813,1305,2.813,1329,2.813,1330,2.813,1340,2.222,1341,3.397,1342,3.397,1343,3.397,1384,2.813,1429,2.475,1431,2.475,1567,2.813,1568,3.327,1569,3.327,1570,3.327,1571,4.566,1572,4.566,1573,5.881,1574,3.327,1575,3.327,1576,3.327,1577,3.327,1578,5.611,1579,5.214,1580,4.566,1581,4.566,1582,3.327,1583,3.327,1584,3.327,1585,3.327,1586,3.327,1587,3.327,1588,3.327,1589,6.709,1590,3.327,1591,3.327,1592,3.861,1593,4.566,1594,5.611,1595,3.327,1596,3.327,1597,3.327,1598,2.813,1599,2.813,1600,3.327,1601,4.886,1602,4.839,1603,2.813,1604,2.813,1605,3.327,1606,3.327]],["title/dependencies.html",[622,2.27,1607,2.394]],["body/dependencies.html",[38,0.026,230,0.911,441,0.021,442,0.021,478,2.063,530,3.117,622,2.598,623,2.834,639,4.809,640,3.798,646,3.471,650,2.396,759,3.471,828,2.834,829,3.471,1608,4.666,1609,6.802,1610,4.666,1611,4.666,1612,4.666,1613,4.666,1614,4.666,1615,4.666,1616,4.666,1617,4.666,1618,4.666,1619,4.666,1620,4.666,1621,4.666,1622,4.666,1623,5.687,1624,5.687,1625,4.666,1626,5.687,1627,4.666,1628,4.666,1629,4.666,1630,4.666,1631,4.666,1632,4.666,1633,4.666,1634,4.666,1635,4.666,1636,4.666,1637,4.666]],["title/miscellaneous/functions.html",[1638,1.891,1639,3.447]],["body/miscellaneous/functions.html",[28,0.395,30,0.726,37,1.239,38,0.026,40,0.596,41,2.232,42,1.995,43,4.009,65,1.982,225,1.71,231,1.512,233,3.294,265,1.589,286,2.471,333,2.002,344,1.207,423,1.682,430,1.158,437,1.158,438,1.008,441,0.018,442,0.018,458,1.213,460,2.074,461,2.053,468,1.13,470,1.953,479,1.057,484,1.291,499,1.394,508,2.581,615,2.401,663,3.04,717,1.589,719,1.846,723,1.589,728,2.471,729,2.471,731,2.581,740,1.704,772,3.021,884,1.71,1007,3.624,1010,2.674,1014,3.04,1043,1.846,1047,3.04,1079,3.58,1081,3.214,1082,3.58,1083,3.58,1084,3.214,1173,4.036,1228,2.401,1429,3.58,1431,3.58,1476,3.04,1601,2.674,1602,4.036,1603,4.588,1604,4.07,1638,2.401,1639,3.04,1640,5.582,1641,3.595,1642,5.794,1643,5.425,1644,3.595,1645,3.595,1646,3.595,1647,3.595,1648,3.595,1649,3.595,1650,3.595,1651,3.595,1652,3.595,1653,3.595,1654,3.595,1655,3.595,1656,3.595,1657,3.595,1658,3.595,1659,3.595,1660,3.595,1661,3.595,1662,3.595,1663,3.595,1664,3.595]],["title/index.html",[28,0.311,482,1.454,1665,2.394]],["body/index.html",[4,0.249,9,0.291,14,2.641,22,2.684,30,0.696,38,0.018,44,4.035,46,4.017,53,3.002,55,4.559,56,4.559,61,5.569,79,3.002,80,3.002,87,2.641,115,3.002,146,4.035,158,0.914,160,3.187,162,4.874,173,3.187,201,4.035,289,1.977,315,2.641,441,0.018,442,0.018,443,0.317,465,1.569,482,1.823,484,1.275,492,1.689,527,3.002,562,2.898,567,2.156,603,3.761,640,2.371,692,3.002,740,1.585,827,3.002,1007,3.187,1012,2.371,1027,3.002,1043,1.823,1250,1.977,1315,3.002,1355,2.641,1433,4.035,1592,3.002,1665,3.002,1666,5.391,1667,6.329,1668,2.641,1669,5.765,1670,3.55,1671,3.55,1672,3.55,1673,5.391,1674,3.55,1675,3.55,1676,3.55,1677,4.772,1678,3.55,1679,3.55,1680,3.55,1681,3.55,1682,3.55,1683,3.55,1684,3.55,1685,3.55,1686,3.55,1687,3.55,1688,3.55,1689,3.55,1690,3.55,1691,3.55,1692,3.55,1693,3.55,1694,3.55,1695,3.55,1696,5.391,1697,4.772,1698,3.55,1699,3.55,1700,3.55,1701,3.55,1702,3.55,1703,3.55,1704,3.55,1705,3.55,1706,3.55,1707,3.55,1708,3.55,1709,3.55,1710,3.55,1711,3.55,1712,4.772,1713,3.55,1714,4.772,1715,3.55,1716,3.55,1717,3.002,1718,3.55,1719,3.55,1720,3.55,1721,3.55,1722,3.55,1723,3.55,1724,4.772,1725,5.391,1726,3.55,1727,3.55,1728,4.772,1729,3.55,1730,3.55,1731,3.55,1732,3.55,1733,3.55,1734,3.55,1735,3.55,1736,3.55,1737,3.55,1738,3.55,1739,3.55,1740,3.55,1741,3.55,1742,3.55,1743,3.55,1744,3.55,1745,3.55,1746,4.772,1747,3.55,1748,4.772,1749,3.55,1750,3.55,1751,4.772,1752,3.002,1753,3.55,1754,3.55,1755,4.772,1756,4.035,1757,3.55,1758,3.55,1759,3.55,1760,3.55,1761,3.55,1762,5.391,1763,3.55,1764,3.55,1765,3.55,1766,3.55,1767,3.55]],["title/modules.html",[521,1.905]],["body/modules.html",[38,0.022,441,0.022,442,0.022,520,3.137,521,2.127,621,3.45,629,3.137,630,2.876,640,4.278,1052,5.416,1272,3.45,1276,3.137,1756,5.416,1768,6.405,1769,6.813,1770,6.405]],["title/overview.html",[1668,3.441]],["body/overview.html",[1,2.086,2,1.83,38,0.026,417,1.591,425,2.523,427,2.523,429,2.086,432,2.523,434,2.523,436,2.086,441,0.02,442,0.02,445,1.217,519,1.39,520,3.528,521,1.704,536,2.513,538,2.513,545,2.125,547,2.513,621,4.627,622,2.304,623,2.513,624,3.5,625,3.5,626,3.5,627,3.5,628,3.5,629,3.528,630,3.829,631,3.528,632,3.525,633,2.764,634,2.513,660,2.513,1272,4.518,1273,3.5,1274,3.5,1275,3.5,1276,3.528,1557,3.5,1558,3.5,1559,3.5,1668,3.079,1752,3.5,1771,4.139,1772,4.139,1773,4.139,1774,4.139]],["title/interfaces/parallelExecutionResponseType.html",[443,0.303,1257,2.264]],["body/interfaces/parallelExecutionResponseType.html",[3,0.31,4,0.273,9,0.238,28,0.428,29,0.989,30,0.557,37,1.001,38,0.026,40,0.557,72,2.168,158,1.452,229,0.404,230,0.759,235,0.404,236,1.062,430,0.936,441,0.019,442,0.019,443,0.348,444,1.397,445,1.144,447,1.144,450,1.223,458,0.989,462,2.599,465,2.241,466,2.823,468,1.948,477,2.823,480,1.593,481,1.602,491,1.602,492,2.412,493,1.772,499,1.22,501,1.602,503,1.998,533,2.166,546,1.397,565,1.998,573,1.851,575,2.703,585,2.363,666,2.599,740,1.144,780,1.998,855,2.241,997,2.823,1038,2.894,1043,1.998,1087,2.166,1109,2.823,1112,3.451,1120,3.772,1122,3.63,1130,2.823,1131,2.823,1132,2.823,1238,2.894,1239,2.894,1246,2.599,1247,3.29,1248,2.599,1249,3.29,1250,2.823,1251,4.288,1255,3.29,1256,3.29,1257,3.387,1258,3.29,1259,2.599,1260,2.599,1261,2.599,1262,2.599,1263,3.29,1264,3.29,1265,3.29,1266,3.29,1267,3.387,1268,3.29,1269,3.29,1270,3.29,1271,3.29,1383,4.77]],["title/properties.html",[29,0.795,1607,2.394]],["body/properties.html",[29,1.066,38,0.024,441,0.023,442,0.023,1717,4.62,1775,5.464]],["title/routes.html",[660,2.809]],["body/routes.html",[38,0.023,441,0.023,442,0.023,660,3.342]],["title/miscellaneous/variables.html",[1638,1.891,1776,3.447]],["body/miscellaneous/variables.html",[28,0.481,30,0.481,38,0.026,40,0.721,41,2.141,42,1.873,72,2.101,77,3.652,158,1.127,349,4.623,421,2.083,441,0.02,442,0.02,447,1.287,479,1.287,480,1.376,508,2.083,562,2.659,567,3.792,601,3.257,758,3.257,829,4.067,831,4.623,832,4.435,834,4.435,884,2.083,1010,3.257,1023,3.702,1080,4.067,1301,3.257,1417,3.702,1598,3.702,1599,3.702,1601,3.257,1602,3.257,1638,2.924,1640,3.702,1776,3.702,1777,4.378,1778,4.378,1779,5.468,1780,5.468,1781,4.378,1782,4.378,1783,4.378,1784,4.378,1785,4.378,1786,4.378,1787,5.468,1788,4.378,1789,4.378,1790,4.378,1791,4.378,1792,5.468,1793,4.378,1794,5.468,1795,4.378,1796,4.378,1797,4.378,1798,4.378,1799,4.378,1800,4.378,1801,4.378]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/parallelExecutionResponseType.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":265,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.1",{"_index":301,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["0.11.4",{"_index":1637,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":318,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["0.2s",{"_index":942,"title":{},"body":{"components/ChartsComponent.html":{}}}],["0.35",{"_index":953,"title":{},"body":{"components/ChartsComponent.html":{}}}],["0.8em",{"_index":341,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["0/1",{"_index":1600,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1575,"title":{},"body":{"coverage.html":{}}}],["003147",{"_index":303,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["010f1d",{"_index":1328,"title":{},"body":{"components/HeaderComponent.html":{}}}],["02",{"_index":106,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["03a9f4",{"_index":360,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["080fe1",{"_index":384,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["081921",{"_index":372,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["0b043f",{"_index":966,"title":{},"body":{"components/ChartsComponent.html":{}}}],["1",{"_index":1228,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{}}}],["1))].station,start,end).topromise",{"_index":1271,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["1))]:dt.find((s:any)=>s.label==sensor",{"_index":1181,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["1.0.0",{"_index":1775,"title":{},"body":{"properties.html":{}}}],["1.10.0",{"_index":1621,"title":{},"body":{"dependencies.html":{}}}],["1.3.1",{"_index":1629,"title":{},"body":{"dependencies.html":{}}}],["1.4em",{"_index":339,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["1.5em",{"_index":332,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["1/1",{"_index":1589,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1595,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1579,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1594,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1581,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1593,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1597,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":1625,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":280,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{}}}],["1000",{"_index":615,"title":{},"body":{"components/AppComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{}}}],["1000px",{"_index":282,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["103",{"_index":956,"title":{},"body":{"components/ChartsComponent.html":{}}}],["105192",{"_index":920,"title":{},"body":{"components/ChartsComponent.html":{}}}],["10px",{"_index":352,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["12",{"_index":1596,"title":{},"body":{"coverage.html":{}}}],["12.2.0",{"_index":1609,"title":{},"body":{"dependencies.html":{}}}],["12.2.18",{"_index":1718,"title":{},"body":{"index.html":{}}}],["125699",{"_index":963,"title":{},"body":{"components/ChartsComponent.html":{}}}],["13",{"_index":1773,"title":{},"body":{"overview.html":{}}}],["150px",{"_index":388,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["15px",{"_index":362,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{}}}],["16",{"_index":1592,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["1615a5186",{"_index":90,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{}}}],["168px",{"_index":947,"title":{},"body":{"components/ChartsComponent.html":{}}}],["16px",{"_index":386,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["17px",{"_index":952,"title":{},"body":{"components/ChartsComponent.html":{}}}],["18px",{"_index":359,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["19.0.3",{"_index":1631,"title":{},"body":{"dependencies.html":{}}}],["1976d2",{"_index":958,"title":{},"body":{"components/ChartsComponent.html":{}}}],["1fr",{"_index":295,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["1ms",{"_index":609,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":314,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["2",{"_index":1658,"title":{},"body":{"miscellaneous/functions.html":{}}}],["2.1.2",{"_index":1633,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1635,"title":{},"body":{"dependencies.html":{}}}],["2.30.1",{"_index":1619,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1590,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1570,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1582,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":1574,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1580,"title":{},"body":{"coverage.html":{}}}],["20.5.0",{"_index":1613,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":368,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["200px",{"_index":292,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["2017",{"_index":222,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["2020",{"_index":213,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["2022",{"_index":166,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["2023",{"_index":143,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["207",{"_index":941,"title":{},"body":{"components/ChartsComponent.html":{}}}],["20px",{"_index":313,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{}}}],["21",{"_index":1583,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":927,"title":{},"body":{"components/ChartsComponent.html":{}}}],["25",{"_index":1573,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":317,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["27999299",{"_index":92,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["280df5",{"_index":938,"title":{},"body":{"components/ChartsComponent.html":{}}}],["2fr",{"_index":296,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["3",{"_index":1747,"title":{},"body":{"index.html":{}}}],["3.7.1",{"_index":1618,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1591,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1572,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":906,"title":{},"body":{"components/ChartsComponent.html":{}}}],["300",{"_index":342,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["30px",{"_index":358,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{}}}],["32px",{"_index":923,"title":{},"body":{"components/ChartsComponent.html":{}}}],["33",{"_index":1578,"title":{},"body":{"coverage.html":{}}}],["34",{"_index":1585,"title":{},"body":{"coverage.html":{}}}],["350",{"_index":385,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["350px",{"_index":382,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["35px",{"_index":298,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["3px",{"_index":951,"title":{},"body":{"components/ChartsComponent.html":{}}}],["4",{"_index":1752,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4.4.1",{"_index":1616,"title":{},"body":{"dependencies.html":{}}}],["4.5,4.5,4.5,2.5,4,3,3,3,2.5,4,3,3,2.8,3,2.3,4.5",{"_index":70,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["4/5",{"_index":1577,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":413,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["400",{"_index":364,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["40px",{"_index":304,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["42",{"_index":1587,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":409,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["4px",{"_index":936,"title":{},"body":{"components/ChartsComponent.html":{}}}],["5.3.2",{"_index":1614,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":321,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"coverage.html":{}}}],["500",{"_index":396,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{}}}],["50000",{"_index":1129,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["50px",{"_index":288,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["55px",{"_index":299,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["5px",{"_index":373,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["6",{"_index":1771,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":1632,"title":{},"body":{"dependencies.html":{}}}],["6/28",{"_index":1584,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":415,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["600",{"_index":337,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["600px",{"_index":401,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["60px",{"_index":960,"title":{},"body":{"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["6px",{"_index":371,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["7",{"_index":1772,"title":{},"body":{"overview.html":{}}}],["70",{"_index":411,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["72px",{"_index":971,"title":{},"body":{"components/ChartsComponent.html":{}}}],["75",{"_index":1571,"title":{},"body":{"coverage.html":{}}}],["767px",{"_index":968,"title":{},"body":{"components/ChartsComponent.html":{}}}],["8",{"_index":1774,"title":{},"body":{"overview.html":{}}}],["80",{"_index":1576,"title":{},"body":{"coverage.html":{}}}],["800px",{"_index":1326,"title":{},"body":{"components/HeaderComponent.html":{}}}],["82px",{"_index":922,"title":{},"body":{"components/ChartsComponent.html":{}}}],["848c90",{"_index":391,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["85",{"_index":403,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["888",{"_index":932,"title":{},"body":{"components/ChartsComponent.html":{}}}],["8px",{"_index":929,"title":{},"body":{"components/ChartsComponent.html":{},"components/FooterComponent.html":{}}}],["9",{"_index":940,"title":{},"body":{"components/ChartsComponent.html":{}}}],["9/21",{"_index":1588,"title":{},"body":{"coverage.html":{}}}],["9/26",{"_index":1586,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":405,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["980px",{"_index":924,"title":{},"body":{"components/ChartsComponent.html":{}}}],["a:hover",{"_index":962,"title":{},"body":{"components/ChartsComponent.html":{}}}],["a:visited",{"_index":961,"title":{},"body":{"components/ChartsComponent.html":{}}}],["abidjan",{"_index":211,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["about:last",{"_index":376,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["aboutcandidatecomponent",{"_index":1,"title":{"components/AboutCandidateComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["absolute",{"_index":278,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{}}}],["access",{"_index":1751,"title":{},"body":{"index.html":{}}}],["according",{"_index":1010,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["accurately",{"_index":1690,"title":{},"body":{"index.html":{}}}],["acording",{"_index":1656,"title":{},"body":{"miscellaneous/functions.html":{}}}],["activatedroute",{"_index":778,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["activeroute",{"_index":781,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["activeroute:activatedroute",{"_index":861,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["actual_component",{"_index":440,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["additional",{"_index":1757,"title":{},"body":{"index.html":{}}}],["address:\"ariana",{"_index":93,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["adw70",{"_index":416,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["air",{"_index":1676,"title":{},"body":{"index.html":{}}}],["airqino",{"_index":1673,"title":{},"body":{"index.html":{}}}],["airquino",{"_index":1695,"title":{},"body":{"index.html":{}}}],["aivaibled",{"_index":1302,"title":{},"body":{"components/FooterComponent.html":{}}}],["aleatoire",{"_index":1233,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["align",{"_index":309,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["aligned",{"_index":1708,"title":{},"body":{"index.html":{}}}],["allez",{"_index":875,"title":{},"body":{"components/ChartsComponent.html":{}}}],["allways",{"_index":1379,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["always",{"_index":1382,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["analyse",{"_index":121,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["anglais",{"_index":251,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["angular",{"_index":46,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1608,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":530,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":566,"title":{},"body":{"injectables/ApiResourceService.html":{},"modules/AppModule.html":{},"interceptors/Aq54HttpInterceptor.html":{}}}],["angular/compiler",{"_index":1610,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":230,"title":{},"body":{"components/AboutCandidateComponent.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["angular/forms",{"_index":646,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":639,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":650,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["animation",{"_index":719,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["animations:makeanimation",{"_index":1472,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["années",{"_index":107,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["any),config)}),100",{"_index":1461,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["api",{"_index":158,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"index.html":{},"interfaces/parallelExecutionResponseType.html":{},"miscellaneous/variables.html":{}}}],["api.magentalab.it",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/api.interface",{"_index":722,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["api/api.resource.service",{"_index":532,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["api:apiinterface",{"_index":1262,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["apiinterface",{"_index":444,"title":{"interfaces/ApiInterface.html":{}},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/CurrentValuesSchema.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["apiproxymodule",{"_index":520,"title":{"modules/ApiProxyModule.html":{}},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apiresourceservice",{"_index":531,"title":{"injectables/ApiResourceService.html":{}},"body":{"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"coverage.html":{}}}],["app",{"_index":22,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"index.html":{}}}],["app.component",{"_index":642,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":589,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":588,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":425,"title":{"components/AppComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appealing",{"_index":1679,"title":{},"body":{"index.html":{}}}],["application",{"_index":1712,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":621,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approfondie",{"_index":129,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["approutingmodule",{"_index":629,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aq54",{"_index":603,"title":{},"body":{"components/AppComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"index.html":{}}}],["aq54docprod",{"_index":1742,"title":{},"body":{"index.html":{}}}],["aq54frontend",{"_index":1743,"title":{},"body":{"index.html":{}}}],["aq54httpinterceptor",{"_index":631,"title":{"interceptors/Aq54HttpInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["aq54prod",{"_index":1739,"title":{},"body":{"index.html":{}}}],["aquitaine",{"_index":151,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["architecture",{"_index":56,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["args",{"_index":978,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{}}}],["array",{"_index":496,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["assessing",{"_index":1691,"title":{},"body":{"index.html":{}}}],["async",{"_index":997,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["auto",{"_index":329,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["aux",{"_index":137,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["available",{"_index":1768,"title":{},"body":{"modules.html":{}}}],["avec",{"_index":104,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["await",{"_index":1112,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["backend",{"_index":154,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["background",{"_index":285,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["backgroundcolor:getrandomrgb",{"_index":1187,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["bar",{"_index":1008,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["barbasedchart",{"_index":973,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{}}}],["barbasedchart(...args",{"_index":976,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{}}}],["barbasedchart(...args:any):void",{"_index":747,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["bas",{"_index":177,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["base",{"_index":155,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["baseapi",{"_index":551,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["baseapi:\"https://airqino",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baseapi:string=environment.baseapi",{"_index":571,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["based",{"_index":562,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["before",{"_index":1710,"title":{},"body":{"index.html":{}}}],["beginatzero",{"_index":738,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["behaviorsubject",{"_index":1336,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["behaviorsubject(false",{"_index":1337,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["being",{"_index":1434,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["besoins",{"_index":138,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["best",{"_index":1701,"title":{},"body":{"index.html":{}}}],["between",{"_index":587,"title":{},"body":{"components/AppComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["bg:any",{"_index":73,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["black",{"_index":395,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["block",{"_index":357,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["blue",{"_index":1651,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boolean",{"_index":730,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["bootstrap",{"_index":623,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":269,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["bordercolor",{"_index":71,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["bordercolor:getrandomrgb",{"_index":1218,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["born",{"_index":1686,"title":{},"body":{"index.html":{}}}],["both",{"_index":739,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["bottom",{"_index":312,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{}}}],["box",{"_index":267,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["brower",{"_index":1753,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1769,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":640,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":644,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":643,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":638,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":964,"title":{},"body":{"components/ChartsComponent.html":{}}}],["build",{"_index":1007,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["builder",{"_index":974,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{}}}],["builder(...args",{"_index":979,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{}}}],["builder(...args:any):any",{"_index":749,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["builder(st",{"_index":1015,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["builder(st:string",{"_index":1108,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["builds",{"_index":1042,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["built",{"_index":1671,"title":{},"body":{"index.html":{}}}],["buttons",{"_index":882,"title":{},"body":{"components/ChartsComponent.html":{}}}],["c",{"_index":227,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["call",{"_index":450,"title":{},"body":{"interfaces/ApiInterface.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["called",{"_index":1017,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["calling",{"_index":490,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["calls",{"_index":481,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["cancel",{"_index":883,"title":{},"body":{"components/ChartsComponent.html":{}}}],["candidate",{"_index":23,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate'},{'name",{"_index":424,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["candidate.component",{"_index":652,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["candidate.component.html",{"_index":27,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate.component.scss",{"_index":25,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate.component.ts",{"_index":12,"title":{},"body":{"components/AboutCandidateComponent.html":{},"coverage.html":{}}}],["candidate.component.ts:127",{"_index":35,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate.component.ts:130",{"_index":36,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate.component.ts:14",{"_index":228,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate.component.ts:88",{"_index":76,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate/about",{"_index":11,"title":{},"body":{"components/AboutCandidateComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["canupdate",{"_index":1548,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["canupdate(sessionid",{"_index":1551,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["canupdate(sessionid:number):promise",{"_index":1364,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["capteur",{"_index":880,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["capteurs",{"_index":878,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["capteurs(${d.unit",{"_index":1202,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["capteurs(${d.unit})`,getrandomrgb",{"_index":1234,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["card",{"_index":930,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card):hover",{"_index":949,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card.card",{"_index":945,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card.card.highlight",{"_index":959,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card.highlight",{"_index":957,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card:not(.highlight",{"_index":948,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card:not(:last",{"_index":944,"title":{},"body":{"components/ChartsComponent.html":{}}}],["case",{"_index":1642,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cases.ts",{"_index":1343,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["cases.ts:20",{"_index":1550,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["cases.ts:33",{"_index":1554,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["cases.ts:51",{"_index":1556,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["cases.ts:65",{"_index":1552,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["catch(err:any",{"_index":1130,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["catcherror((error:any",{"_index":713,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["catcherror,finalize",{"_index":702,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["caurrent",{"_index":1373,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["cd",{"_index":1731,"title":{},"body":{"index.html":{}}}],["center",{"_index":311,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["centres",{"_index":261,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["challenge",{"_index":1728,"title":{},"body":{"index.html":{}}}],["change",{"_index":1012,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"index.html":{}}}],["changechartbarvisoption",{"_index":998,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["changechartbarvisoption(item",{"_index":1021,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["changechartbarvisoption(item:any",{"_index":1170,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["changed",{"_index":803,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changer",{"_index":876,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changerange",{"_index":764,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changerange(station",{"_index":799,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changerange(station:string='',message",{"_index":888,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changestation",{"_index":765,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changestation(ev",{"_index":804,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changestation(ev:any",{"_index":867,"title":{},"body":{"components/ChartsComponent.html":{}}}],["charbarp",{"_index":918,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart",{"_index":231,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["chart',{data:this.data,options",{"_index":1451,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart'},{'name",{"_index":431,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart('chart',config):null",{"_index":1226,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart('real",{"_index":1450,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart('sc',scatterconfig",{"_index":1237,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart((document.getelementbyid(this.scatters[sc",{"_index":1460,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart(this.times[index],config",{"_index":1532,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component",{"_index":1283,"title":{},"body":{"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{}}}],["chart.component.html",{"_index":988,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.scss",{"_index":987,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts",{"_index":985,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{}}}],["chart.component.ts:100",{"_index":1400,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:118",{"_index":1029,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:127",{"_index":1025,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:13",{"_index":1004,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:149",{"_index":1419,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:168",{"_index":1022,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:17",{"_index":1394,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:178",{"_index":1034,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:190",{"_index":1049,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:209",{"_index":1413,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:22",{"_index":1063,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:23",{"_index":1069,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:24",{"_index":1061,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:240",{"_index":1409,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:249",{"_index":1005,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:25",{"_index":1401,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:253",{"_index":1395,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:275",{"_index":1415,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:296",{"_index":1422,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:299",{"_index":1035,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:32",{"_index":1426,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:33",{"_index":1425,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:34",{"_index":1070,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:341",{"_index":1411,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:35",{"_index":1077,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:36",{"_index":1068,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:37",{"_index":1074,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:38",{"_index":1073,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:39",{"_index":1071,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:40",{"_index":1072,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:41",{"_index":1067,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:42",{"_index":1428,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:43",{"_index":1424,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:45",{"_index":1078,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:46",{"_index":1064,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:57",{"_index":1423,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:58",{"_index":1053,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:59",{"_index":1075,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:60",{"_index":1076,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:62",{"_index":1031,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:64",{"_index":1405,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:77",{"_index":1030,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:84",{"_index":1396,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:87",{"_index":1016,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.config.data.datasets.find((f:any)=>dd.label===f.label",{"_index":1515,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.config.data.datasets.foreach((dt:any",{"_index":1468,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.config.options",{"_index":1471,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.config.options.plugins=config.options.plugins",{"_index":1511,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.config.options.scales.x.max=dt[0].time",{"_index":1512,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.js",{"_index":1615,"title":{},"body":{"dependencies.html":{}}}],["chart.js/auto",{"_index":232,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["chart.update",{"_index":1479,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart/diferred",{"_index":984,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"coverage.html":{}}}],["chart/real",{"_index":1282,"title":{},"body":{"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{}}}],["chart:chart|any",{"_index":1098,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart='real",{"_index":844,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chartanimation",{"_index":717,"title":{"interfaces/ChartAnimation.html":{}},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["chartbar",{"_index":731,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["chartbardatainterface",{"_index":733,"title":{"interfaces/ChartBarDataInterface.html":{}},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{}}}],["chartbardatasets",{"_index":1429,"title":{},"body":{"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["chartbardatasets(stationdata",{"_index":1641,"title":{},"body":{"miscellaneous/functions.html":{}}}],["chartbarddatasets",{"_index":1079,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["chartbarddatasets(stationdata",{"_index":1644,"title":{},"body":{"miscellaneous/functions.html":{}}}],["chartbarvis",{"_index":769,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chartbarvis:any=null",{"_index":850,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chartbarvischange",{"_index":775,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chartbarvisualisation",{"_index":989,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chartbuilder",{"_index":743,"title":{"interfaces/chartBuilder.html":{}},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{}}}],["chartdata",{"_index":999,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/chartBuilder.html":{}}}],["chartdata():currentvaluesschema[]|any",{"_index":744,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["chartdata(data",{"_index":1024,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chartdata(data:any",{"_index":1134,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chartpagetitle",{"_index":990,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chartpagetitle='visualisation",{"_index":1089,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["charts",{"_index":759,"title":{},"body":{"components/ChartsComponent.html":{},"components/RealTimeChartComponent.html":{},"dependencies.html":{}}}],["charts'},{'name",{"_index":428,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["charts.component.html",{"_index":761,"title":{},"body":{"components/ChartsComponent.html":{}}}],["charts.component.scss",{"_index":760,"title":{},"body":{"components/ChartsComponent.html":{}}}],["charts/charts.component",{"_index":1562,"title":{},"body":{"modules/SharedModule.html":{}}}],["chartscomponent",{"_index":427,"title":{"components/ChartsComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["charttitle",{"_index":723,"title":{"interfaces/chartTitle.html":{}},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["chatbarvischange",{"_index":854,"title":{},"body":{"components/ChartsComponent.html":{}}}],["child",{"_index":377,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["child(2",{"_index":366,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["choice",{"_index":1720,"title":{},"body":{"index.html":{}}}],["cirrent",{"_index":483,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["class",{"_index":236,"title":{},"body":{"components/AboutCandidateComponent.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"modules/SharedModule.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["clean",{"_index":55,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["clear",{"_index":1402,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["clearinterval(this.time",{"_index":1438,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["clearinterval(this.timer",{"_index":1133,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["cleartimer",{"_index":1000,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["clients",{"_index":140,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["clone",{"_index":1724,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":58,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["cluster_appmodule",{"_index":624,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":626,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":628,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":627,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":625,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_featuresmodule",{"_index":1273,"title":{},"body":{"modules/FeaturesModule.html":{},"overview.html":{}}}],["cluster_featuresmodule_declarations",{"_index":1275,"title":{},"body":{"modules/FeaturesModule.html":{},"overview.html":{}}}],["cluster_featuresmodule_imports",{"_index":1274,"title":{},"body":{"modules/FeaturesModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1557,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1559,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1558,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cnv",{"_index":1494,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["code",{"_index":162,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["coding",{"_index":1703,"title":{},"body":{"index.html":{}}}],["collaboration",{"_index":124,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["color",{"_index":286,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["color:string",{"_index":726,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["column",{"_index":308,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["columns",{"_index":294,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["common",{"_index":695,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["commonmodule",{"_index":529,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{}}}],["company:\"aladin",{"_index":168,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["company:\"laboratoire",{"_index":184,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["company:\"seewatch",{"_index":148,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["compare",{"_index":1372,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["compenent",{"_index":1318,"title":{},"body":{"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["compenents",{"_index":741,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["competence",{"_index":69,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["competences",{"_index":260,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["complexes",{"_index":123,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["component",{"_index":0,"title":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{}}}],["component:aboutcandidatecomponent",{"_index":671,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:diferreddatachartcomponent",{"_index":1286,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["component:realtimechartcomponent",{"_index":1288,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["component_template",{"_index":422,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["componentis",{"_index":1406,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"overview.html":{}}}],["compose",{"_index":1667,"title":{},"body":{"index.html":{}}}],["compose.yml",{"_index":1734,"title":{},"body":{"index.html":{}}}],["compétences",{"_index":118,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["conception",{"_index":113,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["config",{"_index":1173,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{}}}],["config.data.datasets.foreach((dd:any",{"_index":1514,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["config:any",{"_index":1215,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["configuration",{"_index":527,"title":{},"body":{"modules/ApiProxyModule.html":{},"index.html":{}}}],["configurations",{"_index":1670,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":885,"title":{},"body":{"components/ChartsComponent.html":{}}}],["conjunction",{"_index":1698,"title":{},"body":{"index.html":{}}}],["considered",{"_index":1280,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["console.log(chart.config.data,data",{"_index":1467,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["console.log(error",{"_index":714,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["console.log(item",{"_index":1171,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["console.log(this.timedata,this.chart",{"_index":1174,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["const",{"_index":72,"title":{},"body":{"components/AboutCandidateComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesRoutingModule.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/AboutCandidateComponent.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["constructor(@inject('api",{"_index":1261,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["constructor(activeroute",{"_index":777,"title":{},"body":{"components/ChartsComponent.html":{}}}],["constructor(api",{"_index":1242,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"injectables/RealTimeUseCases.html":{}}}],["constructor(http",{"_index":552,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["constructor(isloading",{"_index":593,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(loader",{"_index":685,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["constructor(private",{"_index":572,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/ChartsComponent.html":{}}}],["constructor(public",{"_index":706,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["constructor(usecases",{"_index":1003,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["contact",{"_index":1759,"title":{},"body":{"index.html":{}}}],["contactinfo",{"_index":343,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["contactinfo.education",{"_index":361,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["contactinfo.language",{"_index":369,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["contacts",{"_index":240,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["container",{"_index":277,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["containers",{"_index":1745,"title":{},"body":{"index.html":{}}}],["contains",{"_index":1315,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["content",{"_index":390,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["core",{"_index":1432,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["correlation",{"_index":1044,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["corresponding",{"_index":667,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cover",{"_index":327,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["coverage",{"_index":1567,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1688,"title":{},"body":{"index.html":{}}}],["cssws45",{"_index":408,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["csv",{"_index":1627,"title":{},"body":{"dependencies.html":{}}}],["current",{"_index":1347,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["currentitem",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentvaluesschema",{"_index":486,"title":{"interfaces/CurrentValuesSchema.html":{}},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{}}}],["cursor",{"_index":353,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["custom_elements_schema",{"_index":637,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{}}}],["cv",{"_index":1323,"title":{},"body":{"components/HeaderComponent.html":{}}}],["d",{"_index":1137,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["d'information",{"_index":208,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["d'un",{"_index":1193,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["d.foreach(item",{"_index":1483,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["d.station",{"_index":1529,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["d.unit",{"_index":1199,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["d.values.map((item:any",{"_index":1527,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["d=!sensor?dt[math.floor(math.random()*(dt.length",{"_index":1180,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["d=data[0].datasets.find((item:any)=>item.label===dt.label",{"_index":1469,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["d=dt[math.floor(math.random()*(dt.length",{"_index":1227,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["d?dt.data=dt.data.concat(d.data):null",{"_index":1470,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["dans",{"_index":109,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["data",{"_index":30,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"components/AppComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/parallelExecutionResponseType.html":{},"miscellaneous/variables.html":{}}}],["data,label:item[0",{"_index":1186,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["data.find((d:any)=>d.station==item.label)?item.data=data.find((d:any)=>d.station==item.label)?.data:this.chart.config.data.datasets.splice(index,1",{"_index":1496,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data.foreach((d:any,index:number",{"_index":1523,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data.length?data=this.scatterdata(d,4):null",{"_index":1458,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data.map((item:any)=>({...item,values:object.entries(item.values).map(e=>e[1",{"_index":1504,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data354",{"_index":1733,"title":{},"body":{"index.html":{}}}],["data354.git",{"_index":1729,"title":{},"body":{"index.html":{}}}],["data:any",{"_index":237,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["data:any=stationdata.map(item=>({time:item.timestamp,station:item.station_name,values:groupby(item.values,(v:any)=>v.unit",{"_index":1502,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data:chartbardatainterface|any",{"_index":1097,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["data:diffrange?data.monthdata:data.daydata",{"_index":1217,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["data=data.map((item:any)=>({...item,values:object.entries(item.values).map(e=>e[1",{"_index":1522,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data[0]?.station",{"_index":1473,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data[0]?.unit",{"_index":1474,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["dataset",{"_index":1663,"title":{},"body":{"miscellaneous/functions.html":{}}}],["datasets",{"_index":65,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["datasets:object.entries(d.dayval).map((item:any",{"_index":1184,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["datasets:this.timedata.filter((f:any)=>f.gunit).map((data:any",{"_index":1216,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["datasets:values.map(s=>({data:[{x:selected.value,y:s.value}],label:`${s.sensor}=f(${selected.sensor",{"_index":1489,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["date",{"_index":825,"title":{},"body":{"components/ChartsComponent.html":{}}}],["datetime",{"_index":1368,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["david",{"_index":87,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{},"index.html":{}}}],["day",{"_index":826,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd",{"_index":820,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["dd')!=moment().subtract(1,'days').format('yyyy",{"_index":871,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd')!=this.today",{"_index":873,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd');this.start=moment(this.start).subtract(math.abs(diff),'days').format('yyyy",{"_index":892,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd')||moment(this.start).format('yyyy",{"_index":872,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd')}&&end=${moment(this.end).format('yyyy",{"_index":896,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd')}`:location.href=`${'/visualisation/diferred?station'}=${this.selected}&&start=${moment(this.start).format('yyyy",{"_index":897,"title":{},"body":{"components/ChartsComponent.html":{}}}],["de",{"_index":68,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["decide",{"_index":696,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["decided",{"_index":1381,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["declarations",{"_index":536,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["declare",{"_index":831,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["declared",{"_index":792,"title":{},"body":{"components/ChartsComponent.html":{}}}],["decoration",{"_index":916,"title":{},"body":{"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["default",{"_index":41,"title":{},"body":{"components/AboutCandidateComponent.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":34,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{}}}],["defines",{"_index":1735,"title":{},"body":{"index.html":{}}}],["degree:\"baccalauréat",{"_index":223,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["degree:\"licence",{"_index":214,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["degree:\"master",{"_index":207,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["dependencies",{"_index":622,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":125,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["descriptioon",{"_index":153,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["designed",{"_index":1674,"title":{},"body":{"index.html":{}}}],["destroyed",{"_index":1404,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["detail",{"_index":1694,"title":{},"body":{"index.html":{}}}],["details",{"_index":1767,"title":{},"body":{"index.html":{}}}],["detected",{"_index":1353,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["deux",{"_index":105,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["developer",{"_index":147,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["development",{"_index":60,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["difered",{"_index":498,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["diferedcomponentinterface",{"_index":746,"title":{"interfaces/DiferedComponentInterface.html":{}},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{}}}],["diferred",{"_index":430,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["diferreddatachartcomponent",{"_index":429,"title":{"components/DiferredDataChartComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["diferredmodeusecases",{"_index":533,"title":{"injectables/DiferredModeUsecases.html":{}},"body":{"modules/ApiProxyModule.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"coverage.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["diff",{"_index":889,"title":{},"body":{"components/ChartsComponent.html":{}}}],["different",{"_index":449,"title":{},"body":{"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["diffrange=moment(this.ranges.end).diff(moment(this.ranges.start),'days')>=30",{"_index":1211,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["diffrange?x0=`${starttime[2]}/${starttime[1]}`:null",{"_index":1214,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["diffrent",{"_index":1427,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["diff{this.end=moment(this.end).add(math.abs(diff),'days').format('yyyy",{"_index":891,"title":{},"body":{"components/ChartsComponent.html":{}}}],["différée",{"_index":1062,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{}}}],["direction",{"_index":307,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["directive",{"_index":420,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["directives",{"_index":439,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["directory",{"_index":1730,"title":{},"body":{"index.html":{}}}],["disbale",{"_index":1376,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["display",{"_index":289,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/chartTitle.html":{},"index.html":{}}}],["display:boolean",{"_index":724,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["display:true",{"_index":1477,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["distribution",{"_index":1009,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["div",{"_index":374,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["django",{"_index":49,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["docker",{"_index":61,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["docs",{"_index":1321,"title":{},"body":{"components/HeaderComponent.html":{}}}],["docsurl:\"http://localhost:8001/docs",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":160,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{},"coverage.html":{},"index.html":{}}}],["docurl",{"_index":1309,"title":{},"body":{"components/HeaderComponent.html":{}}}],["docurl=environment.docsurl",{"_index":1320,"title":{},"body":{"components/HeaderComponent.html":{}}}],["doing",{"_index":1356,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["doit",{"_index":903,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["domaine",{"_index":67,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["données",{"_index":156,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["donnés",{"_index":1192,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["dri",{"_index":89,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{}}}],["dt",{"_index":1178,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["dt:any",{"_index":1503,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["dt=chartbarddatasets(d",{"_index":1139,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["dt[0].station",{"_index":1510,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["dt[0].values.map((item:any",{"_index":1507,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["dts.push({data:{y:yd.ydata[key][id].y,x:xd.y},label:`${yd.label}=f(${item.label",{"_index":1163,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["dts:any",{"_index":1159,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["du",{"_index":161,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["duration",{"_index":1649,"title":{},"body":{"miscellaneous/functions.html":{}}}],["duration:number",{"_index":727,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["dynamic",{"_index":1611,"title":{},"body":{"dependencies.html":{}}}],["début",{"_index":911,"title":{},"body":{"components/ChartsComponent.html":{}}}],["développement",{"_index":111,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["d’architectures",{"_index":176,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["d’intérêts",{"_index":262,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["d’un",{"_index":191,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["e.g",{"_index":1721,"title":{},"body":{"index.html":{}}}],["each",{"_index":664,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ease",{"_index":943,"title":{},"body":{"components/ChartsComponent.html":{}}}],["easing",{"_index":728,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["ed",{"_index":274,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["editor",{"_index":1719,"title":{},"body":{"index.html":{}}}],["education",{"_index":246,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["educations",{"_index":203,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["eee",{"_index":937,"title":{},"body":{"components/ChartsComponent.html":{}}}],["efficaces",{"_index":134,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["el",{"_index":259,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["element",{"_index":419,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["email1:\"kouame.ndri1998@gmail.com",{"_index":84,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["email2:\"kouame.ndri@supcom.tn",{"_index":85,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["email:\"kouame.ndri1998@gmail.com",{"_index":1295,"title":{},"body":{"components/FooterComponent.html":{}}}],["en",{"_index":101,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["enable",{"_index":698,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["enabled',preloadingstrategy:preloadallmodules",{"_index":677,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":466,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["end:moment().format('yyyy",{"_index":1066,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["end:string=moment().format('yyyy",{"_index":859,"title":{},"body":{"components/ChartsComponent.html":{}}}],["end?this.end=end:null",{"_index":865,"title":{},"body":{"components/ChartsComponent.html":{}}}],["endpoint",{"_index":563,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["endpoints",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["engineer",{"_index":82,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["englishw85",{"_index":402,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["entre",{"_index":1191,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["entries",{"_index":1375,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["environment",{"_index":567,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/HeaderComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.baseapi",{"_index":561,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["environment.docsurl",{"_index":1313,"title":{},"body":{"components/HeaderComponent.html":{}}}],["environmental",{"_index":1683,"title":{},"body":{"index.html":{}}}],["error(err.message",{"_index":1132,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["et",{"_index":114,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["etat",{"_index":187,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["ev",{"_index":807,"title":{},"body":{"components/ChartsComponent.html":{}}}],["ev?.target.value",{"_index":868,"title":{},"body":{"components/ChartsComponent.html":{}}}],["event",{"_index":814,"title":{},"body":{"components/ChartsComponent.html":{}}}],["eventemitter",{"_index":796,"title":{},"body":{"components/ChartsComponent.html":{}}}],["example",{"_index":1725,"title":{},"body":{"index.html":{}}}],["exceder",{"_index":905,"title":{},"body":{"components/ChartsComponent.html":{}}}],["exected",{"_index":809,"title":{},"body":{"components/ChartsComponent.html":{}}}],["execute",{"_index":1240,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["execute(start",{"_index":1244,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["execute(start:string,end:string,projectname:string",{"_index":1268,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["executed",{"_index":597,"title":{},"body":{"components/AppComponent.html":{},"components/ChartsComponent.html":{}}}],["experience",{"_index":141,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["export",{"_index":235,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["exports",{"_index":545,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["expérience",{"_index":128,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["extended",{"_index":1630,"title":{},"body":{"dependencies.html":{}}}],["f0f0f0",{"_index":392,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["fa",{"_index":397,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["factorisation",{"_index":195,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["false",{"_index":601,"title":{},"body":{"components/AppComponent.html":{},"injectables/IsLoadingService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":271,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["façon",{"_index":1232,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["features",{"_index":1278,"title":{},"body":{"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{}}}],["featuresmodule",{"_index":1272,"title":{"modules/FeaturesModule.html":{}},"body":{"modules/FeaturesModule.html":{},"modules.html":{},"overview.html":{}}}],["featuresroutingmodule",{"_index":1276,"title":{"modules/FeaturesRoutingModule.html":{}},"body":{"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["fetch",{"_index":1675,"title":{},"body":{"index.html":{}}}],["fetching",{"_index":1246,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["fff",{"_index":287,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"index.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["fill",{"_index":931,"title":{},"body":{"components/ChartsComponent.html":{}}}],["fill:false",{"_index":1220,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["fin",{"_index":912,"title":{},"body":{"components/ChartsComponent.html":{}}}],["finalize",{"_index":711,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["firts",{"_index":1408,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["fit",{"_index":326,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["fixed",{"_index":617,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["flask",{"_index":50,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["flex",{"_index":306,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["following",{"_index":1714,"title":{},"body":{"index.html":{}}}],["font",{"_index":270,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["football",{"_index":96,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["footer",{"_index":1292,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":433,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["footer.component.html",{"_index":1294,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1293,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":1563,"title":{},"body":{"modules/SharedModule.html":{}}}],["footercomponent",{"_index":432,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["for(let",{"_index":74,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["formsmodule",{"_index":645,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["fortes",{"_index":117,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["france",{"_index":152,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["français",{"_index":252,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["frenchw100",{"_index":406,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["fron",{"_index":694,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["frontend",{"_index":1744,"title":{},"body":{"index.html":{}}}],["function",{"_index":1602,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1639,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gather",{"_index":448,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["generate",{"_index":1645,"title":{},"body":{"miscellaneous/functions.html":{}}}],["genie",{"_index":209,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["gestion",{"_index":170,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["getcurrentvalues",{"_index":452,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getcurrentvalues(stationname",{"_index":457,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getcurrentvalues(stationname:string):observable",{"_index":514,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["gethourlyavg",{"_index":453,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["gethourlyavg(station",{"_index":464,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["gethourlyavg(station:string,start:string,end:string",{"_index":577,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["gethourlyavg(station:string,start:string,end:string):observable",{"_index":517,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["getkey",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getkey(currentitem",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getlatesttransmissionstatus",{"_index":454,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getlatesttransmissionstatus(stationid",{"_index":469,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getlatesttransmissionstatus(stationid:number):observable",{"_index":518,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["getrandomrgb",{"_index":233,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getrange",{"_index":455,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getrange(station",{"_index":473,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getrange(station:string,start:string,end:string",{"_index":581,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["getrange(station:string,start:string,end:string):observable",{"_index":516,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["getsessioninfo",{"_index":456,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getsessioninfo(projectname",{"_index":475,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getsessioninfo(projectname:string):observable",{"_index":515,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["getting",{"_index":482,"title":{"index.html":{}},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"index.html":{}}}],["git",{"_index":1726,"title":{},"body":{"index.html":{}}}],["give",{"_index":1362,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["given",{"_index":508,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gp",{"_index":1146,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["gp?gp.values.filter((v:any)=>v.label!=item.label",{"_index":1151,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["gp?gp.values.find((v:any)=>v.label===item.label):null",{"_index":1149,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["grab",{"_index":1661,"title":{},"body":{"miscellaneous/functions.html":{}}}],["graph",{"_index":1052,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"modules.html":{}}}],["graphs",{"_index":1028,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["grid",{"_index":290,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["group",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group=item.group.find((f:any)=>f.unit===item.unit&&!units.find(u=>u==f.unit",{"_index":1145,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["group?.values.foreach((v:any",{"_index":1166,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["groupby",{"_index":1080,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["groupby(ydata,(g:any)=>g.label",{"_index":1154,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["grp",{"_index":1153,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["guide",{"_index":1704,"title":{},"body":{"index.html":{}}}],["génie",{"_index":102,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["h2",{"_index":330,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["h4",{"_index":367,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["h4:nth",{"_index":365,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["h5",{"_index":363,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["handle",{"_index":1026,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["handles",{"_index":585,"title":{},"body":{"components/AppComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["header",{"_index":1306,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":435,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["header.component.html",{"_index":1308,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1307,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":1561,"title":{},"body":{"modules/SharedModule.html":{}}}],["headercomponent",{"_index":434,"title":{"components/HeaderComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":284,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["helper",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helps",{"_index":1357,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["here",{"_index":447,"title":{},"body":{"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesRoutingModule.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/parallelExecutionResponseType.html":{},"miscellaneous/variables.html":{}}}],["hidden",{"_index":323,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["high",{"_index":1681,"title":{},"body":{"index.html":{}}}],["hobbies",{"_index":95,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["html",{"_index":418,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["htmlws30",{"_index":407,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["http",{"_index":555,"title":{},"body":{"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{}}}],["http://localhost:8000",{"_index":1750,"title":{},"body":{"index.html":{}}}],["http://localhost:8001",{"_index":1754,"title":{},"body":{"index.html":{}}}],["http:httpclient",{"_index":574,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["http_interceptors",{"_index":647,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":553,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["httpclientmodule",{"_index":648,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":700,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["httphandler",{"_index":690,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["httpinterceptor",{"_index":693,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["httprequest",{"_index":688,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["https://github.com/ndriariel/technical",{"_index":1727,"title":{},"body":{"index.html":{}}}],["i=0;i",{"_index":75,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["i=0;iu.label===s.station).foreach((item:any,index:number",{"_index":1495,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["icon",{"_index":355,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["icon:'error",{"_index":898,"title":{},"body":{"components/ChartsComponent.html":{}}}],["icon:'warning",{"_index":881,"title":{},"body":{"components/ChartsComponent.html":{}}}],["icons",{"_index":926,"title":{},"body":{"components/ChartsComponent.html":{}}}],["icons:not(:last",{"_index":928,"title":{},"body":{"components/ChartsComponent.html":{}}}],["identifier",{"_index":1568,"title":{},"body":{"coverage.html":{}}}],["if(d",{"_index":1182,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["if(data.length",{"_index":1465,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["if(diff",{"_index":893,"title":{},"body":{"components/ChartsComponent.html":{}}}],["if(item",{"_index":1172,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["if(moment(this.end).format('yyyy",{"_index":870,"title":{},"body":{"components/ChartsComponent.html":{}}}],["if(request.url.includes('getrange')||request.url.includes('getsessioninfo",{"_index":708,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["if(resp",{"_index":894,"title":{},"body":{"components/ChartsComponent.html":{}}}],["if(selectedsensor",{"_index":1482,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["if(st",{"_index":1110,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["if(station",{"_index":869,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["if(ydata.length&&xdata",{"_index":1155,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["ilws60",{"_index":414,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["img",{"_index":324,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["imgbx",{"_index":319,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["implementation",{"_index":692,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{},"index.html":{}}}],["implemented",{"_index":742,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["implements",{"_index":18,"title":{},"body":{"components/AboutCandidateComponent.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["implicites",{"_index":197,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["import",{"_index":229,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["important",{"_index":1304,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["imports",{"_index":537,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{}}}],["includes",{"_index":1738,"title":{},"body":{"index.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{},"interfaces/parallelExecutionResponseType.html":{},"miscellaneous/variables.html":{}}}],["index:0",{"_index":619,"title":{},"body":{"components/AppComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["infomation",{"_index":1300,"title":{},"body":{"components/FooterComponent.html":{}}}],["information",{"_index":492,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"index.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["informatiques",{"_index":216,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["ingénieur",{"_index":183,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["init",{"_index":1397,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["initchartbar",{"_index":1387,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["initchartbar(...args",{"_index":1534,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["initchartbar(...args:any):chart",{"_index":751,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["initiate",{"_index":1407,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["initiated",{"_index":599,"title":{},"body":{"components/AppComponent.html":{}}}],["initscatter",{"_index":1388,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["initscatter(...args",{"_index":1536,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["initscatter(...args:any):void",{"_index":752,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["initscatter(d",{"_index":1399,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["initscatter(d:currentvaluesschema",{"_index":1456,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["inject",{"_index":780,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["inject('diferred:mode",{"_index":1086,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["inject('realtime:mode",{"_index":1436,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["injectable",{"_index":546,"title":{"injectables/ApiResourceService.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"injectables/RealTimeUseCases.html":{}},"body":{"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["injectable({providedin:'root",{"_index":1260,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["injectables",{"_index":547,"title":{},"body":{"injectables/ApiResourceService.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"injectables/RealTimeUseCases.html":{},"overview.html":{}}}],["inline",{"_index":356,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["input",{"_index":791,"title":{},"body":{"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["input('chart",{"_index":843,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('chartbarvis",{"_index":849,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('scatters",{"_index":839,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('selectedstation",{"_index":845,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('sensors",{"_index":851,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('stations",{"_index":841,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('times",{"_index":837,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('title",{"_index":847,"title":{},"body":{"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["inputs",{"_index":768,"title":{},"body":{"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["installed",{"_index":1715,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1398,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["integrated_sensors",{"_index":495,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["intercept",{"_index":682,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["intercept(request",{"_index":687,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["interceptor",{"_index":678,"title":{"interceptors/Aq54HttpInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptor.interceptor.ts",{"_index":681,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{},"coverage.html":{}}}],["interceptor.interceptor.ts:16",{"_index":686,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["interceptor.interceptor.ts:18",{"_index":699,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["interceptor.interceptor.ts:28",{"_index":691,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["interceptors",{"_index":679,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["interest",{"_index":393,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["interface",{"_index":443,"title":{"interfaces/ApiInterface.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"interfaces/parallelExecutionResponseType.html":{}},"body":{"interfaces/ApiInterface.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"index.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["interfaces",{"_index":445,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"overview.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["interfonctionnelles",{"_index":127,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["internet",{"_index":98,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["interval",{"_index":1403,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["isloading",{"_index":591,"title":{},"body":{"components/AppComponent.html":{}}}],["isloading:isloadingservice",{"_index":607,"title":{},"body":{"components/AppComponent.html":{}}}],["isloadingservice",{"_index":594,"title":{"injectables/IsLoadingService.html":{}},"body":{"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"injectables/IsLoadingService.html":{},"coverage.html":{}}}],["it's",{"_index":1279,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["item",{"_index":1023,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"miscellaneous/variables.html":{}}}],["item.company",{"_index":257,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item.degree",{"_index":248,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item.group.find((g:any)=>g.unit===item.unit",{"_index":1147,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item.jobtitle",{"_index":258,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item.label",{"_index":914,"title":{},"body":{"components/ChartsComponent.html":{}}}],["item.map((item:any)=>({y:item.value,x:d.time",{"_index":1528,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["item.map((item:any)=>({y:item.value,x:dt[0].time",{"_index":1508,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["item.school",{"_index":249,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item.sensor",{"_index":915,"title":{},"body":{"components/ChartsComponent.html":{}}}],["item.station",{"_index":913,"title":{},"body":{"components/ChartsComponent.html":{}}}],["item.time",{"_index":256,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item.year",{"_index":247,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item['daydata']?item['daydata']=item['daydata'].concat(v.dayvalues):item['daydata']=v.dayvalues",{"_index":1168,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item['dayval']=groupby(dts,(d:any)=>d.label",{"_index":1164,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item['gunit']=v.unit",{"_index":1167,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item['monthdata']?item['monthdata']=item['monthdata'].concat(v.monthdays):item['monthdata']=v.monthdays",{"_index":1169,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item[1].map((dt:any)=>({...dt.data",{"_index":1185,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["items",{"_index":310,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["its&&!its.data.find((t:any)=>t.x===dt[0].time)?its.data.push(...dd.data):false",{"_index":1516,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["javascript/typescript",{"_index":64,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["jobtitle:\"lead",{"_index":167,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["jobtitle:\"remote",{"_index":145,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["jobtitle:\"sofware",{"_index":81,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["jobtitle:\"stage",{"_index":182,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["jours",{"_index":901,"title":{},"body":{"components/ChartsComponent.html":{}}}],["jquery",{"_index":1617,"title":{},"body":{"dependencies.html":{}}}],["jsws70",{"_index":410,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["juin",{"_index":144,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["justify",{"_index":389,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["k",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["know",{"_index":1255,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["kouam",{"_index":79,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["kouame.ndri1998@gmail.com",{"_index":1761,"title":{},"body":{"index.html":{}}}],["l'unit",{"_index":1198,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["la",{"_index":112,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["label",{"_index":66,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["label:\"capteurs",{"_index":1058,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["label:\"unit",{"_index":1054,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["label:`${data.gunit",{"_index":1219,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["label:`(${item[0].unit",{"_index":1509,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["labels",{"_index":43,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ChartBarDataInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{}}}],["labels:string",{"_index":734,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["languages",{"_index":250,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["last",{"_index":505,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["last_transmission_utc",{"_index":510,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["latest",{"_index":1355,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"index.html":{}}}],["latesttransmissionsresponsescema",{"_index":509,"title":{"interfaces/LatestTransmissionsResponseScema.html":{}},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{}}}],["latitude",{"_index":511,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["le",{"_index":110,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["learning",{"_index":54,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["lecture",{"_index":99,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["left",{"_index":291,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["left:0",{"_index":620,"title":{},"body":{"components/AppComponent.html":{}}}],["left_side",{"_index":302,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["legend",{"_index":417,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["les",{"_index":179,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["letter",{"_index":345,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["li",{"_index":348,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["license",{"_index":1762,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1763,"title":{},"body":{"index.html":{}}}],["line",{"_index":338,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["linear",{"_index":1476,"title":{},"body":{"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{}}}],["link",{"_index":970,"title":{},"body":{"components/ChartsComponent.html":{}}}],["linkedin:\"https://linkedin.com/in/kouam",{"_index":1296,"title":{},"body":{"components/FooterComponent.html":{}}}],["linkedin:\"linkedin.com/in/kouam",{"_index":86,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["lis",{"_index":1654,"title":{},"body":{"miscellaneous/functions.html":{}}}],["list",{"_index":349,"title":{},"body":{"components/AboutCandidateComponent.html":{},"miscellaneous/variables.html":{}}}],["list.reduce((previous",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["literal",{"_index":721,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{}}}],["load",{"_index":662,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/IsLoadingService.html":{}}}],["loadchildren:()=>\"import('./features').then(m=>m.featuresmodule",{"_index":674,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":810,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["loader",{"_index":684,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["loader:isloadingservice",{"_index":707,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["loading.service",{"_index":705,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["loading.service.ts",{"_index":1330,"title":{},"body":{"injectables/IsLoadingService.html":{},"coverage.html":{}}}],["loading.service.ts:13",{"_index":1333,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["loading.service.ts:23",{"_index":1335,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["logiciel",{"_index":103,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["logicielles",{"_index":131,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["logiciels",{"_index":116,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["longitude",{"_index":512,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["looking",{"_index":1705,"title":{},"body":{"index.html":{}}}],["loop",{"_index":729,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["l’aide",{"_index":196,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["l’approche",{"_index":193,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["l’art",{"_index":188,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["ma",{"_index":1011,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["machine",{"_index":53,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["made",{"_index":1741,"title":{},"body":{"index.html":{}}}],["main",{"_index":584,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["maintainaspectratio",{"_index":1452,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["maintainers",{"_index":1760,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":115,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["make",{"_index":1043,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["makeanimation",{"_index":1431,"title":{},"body":{"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["makeanimation(duration",{"_index":1648,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makes",{"_index":1018,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["maketitle",{"_index":1081,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["maketitle('distribution",{"_index":1453,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["maketitle(`correlation",{"_index":1190,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["maketitle(`distribution",{"_index":1222,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["maketitle(text",{"_index":1650,"title":{},"body":{"miscellaneous/functions.html":{}}}],["making",{"_index":1417,"title":{},"body":{"components/RealTimeChartComponent.html":{},"miscellaneous/variables.html":{}}}],["manner",{"_index":1680,"title":{},"body":{"index.html":{}}}],["maore",{"_index":1693,"title":{},"body":{"index.html":{}}}],["map",{"_index":663,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/functions.html":{}}}],["mapdata",{"_index":1603,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapdata(data",{"_index":1652,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdifereddata",{"_index":1082,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapdifereddata(data",{"_index":1655,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdifereddata(raw_data,this.stationsinfo[1].integrated_sensors",{"_index":1118,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["mapping",{"_index":1659,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maps",{"_index":1653,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maptolabels",{"_index":1083,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["maptolabels(data",{"_index":1657,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maptolabels(data,labels",{"_index":1138,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["margin",{"_index":264,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["match",{"_index":1374,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["matching",{"_index":442,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/parallelExecutionResponseType.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":954,"title":{},"body":{"components/ChartsComponent.html":{}}}],["matrix",{"_index":194,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["max",{"_index":281,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["media",{"_index":398,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["menu",{"_index":1325,"title":{},"body":{"components/HeaderComponent.html":{}}}],["message",{"_index":800,"title":{},"body":{"components/ChartsComponent.html":{}}}],["mesure",{"_index":1055,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["metadata",{"_index":20,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["method",{"_index":1006,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["methode",{"_index":172,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["microservice",{"_index":57,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["microservices",{"_index":202,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["min",{"_index":283,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["min:0",{"_index":1531,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["min:d.time",{"_index":1530,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["min:x0",{"_index":1224,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["miscellaneous",{"_index":1638,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":174,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["mit",{"_index":1765,"title":{},"body":{"index.html":{}}}],["mm",{"_index":819,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["mode",{"_index":499,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["modelisation",{"_index":190,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["moderne",{"_index":219,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["module",{"_index":519,"title":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"components/HeaderComponent.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":521,"title":{"modules.html":{}},"body":{"modules/ApiProxyModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["modèle",{"_index":192,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["moment",{"_index":828,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"dependencies.html":{}}}],["moment().format('yyyy",{"_index":818,"title":{},"body":{"components/ChartsComponent.html":{}}}],["moment().subtract(1,'days').format('yyyy",{"_index":823,"title":{},"body":{"components/ChartsComponent.html":{}}}],["moment(last_transmission_utc",{"_index":1370,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["moment(this.end).diff(moment(this.start),'days",{"_index":890,"title":{},"body":{"components/ChartsComponent.html":{}}}],["mon",{"_index":1322,"title":{},"body":{"components/HeaderComponent.html":{}}}],["monitoring",{"_index":1684,"title":{},"body":{"index.html":{}}}],["morgan",{"_index":1620,"title":{},"body":{"dependencies.html":{}}}],["multi:true",{"_index":655,"title":{},"body":{"modules/AppModule.html":{}}}],["musique",{"_index":97,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["médiatron",{"_index":185,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["n",{"_index":88,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["n'dri",{"_index":80,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["name",{"_index":423,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"miscellaneous/functions.html":{}}}],["name:\"david",{"_index":78,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["native",{"_index":59,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["navigate",{"_index":1696,"title":{},"body":{"index.html":{}}}],["ne",{"_index":902,"title":{},"body":{"components/ChartsComponent.html":{}}}],["need",{"_index":1687,"title":{},"body":{"index.html":{}}}],["needed",{"_index":1250,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"modules/SharedModule.html":{},"index.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["nestjs",{"_index":45,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["network",{"_index":1689,"title":{},"body":{"index.html":{}}}],["networks",{"_index":1736,"title":{},"body":{"index.html":{}}}],["new",{"_index":855,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["next",{"_index":689,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["next.handle(request",{"_index":716,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":710,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["ng2",{"_index":1622,"title":{},"body":{"dependencies.html":{}}}],["ngmodule",{"_index":528,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngondestroy",{"_index":1001,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["ngoninit",{"_index":32,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["ngx",{"_index":1626,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":1672,"title":{},"body":{"index.html":{}}}],["node.js(version",{"_index":1716,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":44,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["nombre",{"_index":900,"title":{},"body":{"components/ChartsComponent.html":{}}}],["none",{"_index":351,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["not(.circle",{"_index":969,"title":{},"body":{"components/ChartsComponent.html":{}}}],["nouvelle",{"_index":150,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["now.diff(transtime,'minutes',true)==0&&last_transmission_utc?true:true",{"_index":1377,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["now=moment",{"_index":1371,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["null",{"_index":783,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["number",{"_index":470,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["obj=object.entries(grp",{"_index":1157,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["object",{"_index":77,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(xgroup).foreach((key:any",{"_index":1160,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["observable",{"_index":463,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["observable,throwerror",{"_index":701,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["once",{"_index":598,"title":{},"body":{"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["onchartoptionchange",{"_index":766,"title":{},"body":{"components/ChartsComponent.html":{}}}],["onchartoptionchange(event",{"_index":813,"title":{},"body":{"components/ChartsComponent.html":{}}}],["onchartoptionchange(event:event|any",{"_index":907,"title":{},"body":{"components/ChartsComponent.html":{}}}],["onchartsinit",{"_index":1389,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["onchartsinit(...args",{"_index":1538,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["onchartsinit(...args:any):void",{"_index":754,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["ondestroy",{"_index":986,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["one",{"_index":1039,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["oninit",{"_index":19,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["oninit(projectname",{"_index":1553,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["oninit(projectname:string):promise",{"_index":1349,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["oninit,ondestroy,chartbuilder,diferedcomponentinterface",{"_index":1085,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["oninit,ondestroy,chartbuilder,realtimechartcomponent",{"_index":1435,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["oninitresponseschema",{"_index":1340,"title":{"interfaces/OninitResponseSchema.html":{}},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["onsensorchange",{"_index":767,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["onsensorchange(event",{"_index":816,"title":{},"body":{"components/ChartsComponent.html":{}}}],["onsensorchange(event:event|any",{"_index":909,"title":{},"body":{"components/ChartsComponent.html":{}}}],["onsensorchange(item",{"_index":1033,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["onsensorchange(item:any",{"_index":1175,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["ontimeseriechartinit",{"_index":1390,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["ontimeseriechartinit(...args",{"_index":1540,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["ontimeseriechartinit(...args:any):void",{"_index":757,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["ontimeseriechartinit(d",{"_index":1410,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["ontimeseriechartinit(d:currentvaluesschema",{"_index":1518,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["onupdate",{"_index":1549,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["onupdate(station",{"_index":1555,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["onupdate(station:string):promise",{"_index":1359,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["open",{"_index":1748,"title":{},"body":{"index.html":{}}}],["optimising",{"_index":1358,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["option",{"_index":225,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["optional",{"_index":461,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":735,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["order",{"_index":1248,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["others",{"_index":1045,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["oum",{"_index":220,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["out",{"_index":634,"title":{},"body":{"modules/AppModule.html":{},"components/ChartsComponent.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["output",{"_index":827,"title":{},"body":{"components/ChartsComponent.html":{},"index.html":{}}}],["output('chartbarvischange",{"_index":853,"title":{},"body":{"components/ChartsComponent.html":{}}}],["output('sensorchange",{"_index":856,"title":{},"body":{"components/ChartsComponent.html":{}}}],["outputs",{"_index":774,"title":{},"body":{"components/ChartsComponent.html":{}}}],["overflow",{"_index":322,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["overview",{"_index":1668,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":379,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["package",{"_index":1607,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":266,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["paiement",{"_index":159,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["par",{"_index":1455,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["parallel",{"_index":1256,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["parallelexecution",{"_index":1241,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["parallelexecution(stationname",{"_index":1253,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["parallelexecution(stationname:string='',start:string,end:string,projectname:string):promise",{"_index":1263,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["parallelexecutionresponsetype",{"_index":1257,"title":{"interfaces/parallelExecutionResponseType.html":{}},"body":{"injectables/DiferredModeUsecases.html":{},"coverage.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["param",{"_index":575,"title":{},"body":{"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["parameter",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parameters",{"_index":460,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":1628,"title":{},"body":{"dependencies.html":{}}}],["pas",{"_index":904,"title":{},"body":{"components/ChartsComponent.html":{}}}],["path",{"_index":668,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{}}}],["path:'david",{"_index":672,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:'diferred",{"_index":1287,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["path:'real",{"_index":1289,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["path:'visualisation",{"_index":673,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch:'full",{"_index":670,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pau",{"_index":149,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["pdf",{"_index":1623,"title":{},"body":{"dependencies.html":{}}}],["percent",{"_index":370,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["phone:\"+216",{"_index":91,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["photo",{"_index":328,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["photo:\"assets/david.png",{"_index":83,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["phws40",{"_index":412,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["pick",{"_index":1249,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["place",{"_index":175,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["placed",{"_index":1301,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["plage",{"_index":877,"title":{},"body":{"components/ChartsComponent.html":{}}}],["platform",{"_index":1685,"title":{},"body":{"index.html":{}}}],["please",{"_index":1758,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":1189,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["pointer",{"_index":354,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["poppins",{"_index":272,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["position",{"_index":275,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["position:'bottom",{"_index":1206,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["position:'left",{"_index":1203,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["position:relative",{"_index":919,"title":{},"body":{"components/ChartsComponent.html":{}}}],["pour",{"_index":135,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["pratice",{"_index":1702,"title":{},"body":{"index.html":{}}}],["pratique",{"_index":108,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["precision",{"_index":1682,"title":{},"body":{"index.html":{}}}],["preload",{"_index":1331,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["preloadallmodules",{"_index":659,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloader/is",{"_index":704,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["prerequisites",{"_index":1709,"title":{},"body":{"index.html":{}}}],["previous",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["previous[group",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["previous[group].push(currentitem",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primary",{"_index":965,"title":{},"body":{"components/ChartsComponent.html":{}}}],["principes",{"_index":180,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["principles",{"_index":1699,"title":{},"body":{"index.html":{}}}],["pris",{"_index":1194,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["private",{"_index":1087,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["problèmes",{"_index":120,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["product",{"_index":1707,"title":{},"body":{"index.html":{}}}],["production",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["professionnel",{"_index":254,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["profil",{"_index":253,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["profile:`ingénieur",{"_index":100,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["profiletext",{"_index":305,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["project",{"_index":1755,"title":{},"body":{"index.html":{}}}],["projectname",{"_index":477,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["projet",{"_index":171,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["promise",{"_index":1032,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["promise.all",{"_index":1265,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["promise.all(sessioninfo.map(async(station:sessioninfoschema)=>await",{"_index":1350,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["promise.all(this.stations.map(async(s:sessioninfoschema)=>await",{"_index":1520,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["properties",{"_index":29,"title":{"properties.html":{}},"body":{"components/AboutCandidateComponent.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartTitle.html":{},"interfaces/parallelExecutionResponseType.html":{},"properties.html":{}}}],["property",{"_index":1299,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{}}}],["provide:\"diferred:mode",{"_index":541,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["provide:'api",{"_index":539,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["provide:'realtime:mode",{"_index":543,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["provide:http_interceptors",{"_index":654,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":569,"title":{},"body":{"injectables/ApiResourceService.html":{},"injectables/IsLoadingService.html":{}}}],["providers",{"_index":538,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["proxy",{"_index":525,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["proxy.module.ts",{"_index":524,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["proxy/api",{"_index":523,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["public",{"_index":590,"title":{},"body":{"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"injectables/IsLoadingService.html":{}}}],["purpose",{"_index":15,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["python",{"_index":48,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["quality",{"_index":1677,"title":{},"body":{"index.html":{}}}],["queryparams",{"_index":812,"title":{},"body":{"components/ChartsComponent.html":{}}}],["quipes",{"_index":126,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["radius",{"_index":320,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["random",{"_index":1646,"title":{},"body":{"miscellaneous/functions.html":{}}}],["randomly",{"_index":1038,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["range",{"_index":802,"title":{},"body":{"components/ChartsComponent.html":{}}}],["rangedataschema",{"_index":501,"title":{"interfaces/RangeDataSchema.html":{}},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/CurrentValuesSchema.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["ranges",{"_index":991,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["raw_data",{"_index":1383,"title":{},"body":{"interfaces/RangeDataSchema.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["raw_data,station",{"_index":1269,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["raw_data,station,sessioninfo",{"_index":1120,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["raw_data,station,sessioninfo:stationinfo",{"_index":1111,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["raw_data,station},sessioninfo",{"_index":1264,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["raw_data:array",{"_index":502,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["raw_data:rangedataschema['raw_data",{"_index":1258,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["reactjs",{"_index":47,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["readonly",{"_index":573,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["real",{"_index":437,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["realtime",{"_index":1346,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["realtimechartcomponent",{"_index":436,"title":{"components/RealTimeChartComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["realtimechartcomponentinterface",{"_index":750,"title":{"interfaces/RealTimeChartComponentInterface.html":{}},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{}}}],["realtimeusecases",{"_index":534,"title":{"injectables/RealTimeUseCases.html":{}},"body":{"modules/ApiProxyModule.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["recomandation",{"_index":189,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["recommendation",{"_index":200,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["recommender",{"_index":51,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["record",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirectto:'/visualisation/real",{"_index":669,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["relative",{"_index":276,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["repeat(1",{"_index":399,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["repeat(2",{"_index":400,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["repeat(4",{"_index":394,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["repository",{"_index":1669,"title":{},"body":{"index.html":{}}}],["represents",{"_index":504,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["request",{"_index":666,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["require",{"_index":832,"title":{},"body":{"components/ChartsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require:any",{"_index":833,"title":{},"body":{"components/ChartsComponent.html":{}}}],["required",{"_index":1019,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["requirements",{"_index":732,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["res?location.href=`${'/visualisation/diferred?station'}=${station}`:null",{"_index":887,"title":{},"body":{"components/ChartsComponent.html":{}}}],["reseaux",{"_index":215,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["reset",{"_index":633,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resource",{"_index":549,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["resources",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":1344,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["response=await",{"_index":1365,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["responsive:true",{"_index":1188,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["reste",{"_index":1196,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["results",{"_index":441,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/parallelExecutionResponseType.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resum",{"_index":17,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["retrieve",{"_index":491,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["retrieving",{"_index":500,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["retrive",{"_index":1361,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["return",{"_index":480,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/parallelExecutionResponseType.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":37,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"miscellaneous/functions.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["rgb",{"_index":1647,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rgb(105",{"_index":955,"title":{},"body":{"components/ChartsComponent.html":{}}}],["rgb(75",{"_index":939,"title":{},"body":{"components/ChartsComponent.html":{}}}],["rgba(0",{"_index":300,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["rgba(255",{"_index":316,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["right",{"_index":383,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["right_side",{"_index":375,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["robustes",{"_index":132,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["root",{"_index":570,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"injectables/IsLoadingService.html":{}}}],["root'},{'name",{"_index":426,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["route",{"_index":665,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule",{"_index":649,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{}}}],["routermodule.forchild(routes",{"_index":1290,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":675,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":660,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/FeaturesRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":661,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"modules/FeaturesRoutingModule.html":{}}}],["routing.module",{"_index":641,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{}}}],["routing.module.ts",{"_index":658,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FeaturesRoutingModule.html":{}}}],["row",{"_index":380,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["run",{"_index":1354,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["running",{"_index":1711,"title":{},"body":{"index.html":{}}}],["russianw90",{"_index":404,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["rxjs",{"_index":478,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/CurrentValuesSchema.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":703,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["réel",{"_index":794,"title":{},"body":{"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["répondre",{"_index":136,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["résolution",{"_index":119,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["s",{"_index":1416,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["same",{"_index":1047,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"miscellaneous/functions.html":{}}}],["sansserif",{"_index":273,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["sc=0;scthis.scatterchart.push({config,chart:new",{"_index":1459,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["scaleable",{"_index":1706,"title":{},"body":{"index.html":{}}}],["scales",{"_index":736,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["scatter",{"_index":1036,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["scatterbasedchart",{"_index":975,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{}}}],["scatterbasedchart(...args",{"_index":981,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{}}}],["scatterbasedchart(...args:any):void",{"_index":748,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["scatterchart",{"_index":992,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["scatterchart:any",{"_index":1441,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["scatterchart:chart|any=null",{"_index":1093,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["scatterconfig:any",{"_index":1183,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["scatterdata",{"_index":1391,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["scatterdata(...args",{"_index":1542,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["scatterdata(...args:any):any",{"_index":753,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["scatterdata(d",{"_index":1412,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["scatterdata(d:currentvaluesschema[],n:any=null",{"_index":1480,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["scatters",{"_index":770,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["scatters:any",{"_index":840,"title":{},"body":{"components/ChartsComponent.html":{}}}],["scatters:string",{"_index":1090,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["scattersensor",{"_index":921,"title":{},"body":{"components/ChartsComponent.html":{}}}],["scattersensors",{"_index":993,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["scattersensors:any",{"_index":1091,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["schemas",{"_index":636,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{}}}],["schemas:[custom_elements_schema",{"_index":653,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{}}}],["school:\"esatic",{"_index":210,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["school:\"lycée",{"_index":218,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["school:\"sup'com",{"_index":204,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["scientifique",{"_index":224,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["screen",{"_index":967,"title":{},"body":{"components/ChartsComponent.html":{}}}],["scrollpositionrestoration",{"_index":676,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["scrum/up",{"_index":63,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["see",{"_index":1766,"title":{},"body":{"index.html":{}}}],["select",{"_index":972,"title":{},"body":{"components/ChartsComponent.html":{}}}],["selecte",{"_index":1050,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["selected",{"_index":1487,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["selected:false",{"_index":1060,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["selected:true",{"_index":1057,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["selected='smart188",{"_index":846,"title":{},"body":{"components/ChartsComponent.html":{}}}],["selected=item.values.find(v=>v.sensor.tolowercase()===selectedsensor.type.tolowercase",{"_index":1486,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["selectedoption",{"_index":762,"title":{},"body":{"components/ChartsComponent.html":{}}}],["selectedoption:any=null",{"_index":857,"title":{},"body":{"components/ChartsComponent.html":{}}}],["selectedsensor",{"_index":1385,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["selectedsensor:any",{"_index":1439,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["selectedsensor=this.selectedsensor?this.selectedsensor:this.sensors[n||math.floor(math.random()*(this.sensors.length",{"_index":1481,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["selectedstation",{"_index":771,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["selectedstation:string='smart188",{"_index":1095,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["selector",{"_index":21,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["selon",{"_index":1197,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["sensor",{"_index":1041,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["sensor:false",{"_index":1056,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["sensor:selected.sensor",{"_index":1492,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["sensor:true",{"_index":1059,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["sensorchange",{"_index":776,"title":{},"body":{"components/ChartsComponent.html":{}}}],["sensors",{"_index":772,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/functions.html":{}}}],["sensors:any",{"_index":1096,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["sensors:any=null",{"_index":852,"title":{},"body":{"components/ChartsComponent.html":{}}}],["sensors:array",{"_index":1440,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["sensors:values.map(s=>s.sensor",{"_index":1493,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["serie",{"_index":226,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["served",{"_index":1700,"title":{},"body":{"index.html":{}}}],["server",{"_index":1740,"title":{},"body":{"index.html":{}}}],["service",{"_index":550,"title":{},"body":{"injectables/ApiResourceService.html":{},"injectables/IsLoadingService.html":{}}}],["services",{"_index":201,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["sessiond_id",{"_index":494,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["sessionid",{"_index":1363,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["sessioninfo",{"_index":1122,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["sessioninfo:sessioninfoschema",{"_index":1259,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["sessioninfoschema",{"_index":493,"title":{"interfaces/SessionInfoSchema.html":{}},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["sessions",{"_index":1247,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["set",{"_index":1285,"title":{},"body":{"modules/FeaturesRoutingModule.html":{},"components/RealTimeChartComponent.html":{}}}],["setinterval",{"_index":1127,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["setinterval(async",{"_index":1447,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["setloading",{"_index":1332,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["setloading(value",{"_index":1334,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["setloading(value=false",{"_index":1338,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["setted",{"_index":611,"title":{},"body":{"components/AppComponent.html":{}}}],["settimeout",{"_index":612,"title":{},"body":{"components/AppComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["setting",{"_index":616,"title":{},"body":{"components/AppComponent.html":{}}}],["setup",{"_index":526,"title":{},"body":{"modules/ApiProxyModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"injectables/IsLoadingService.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["shadow",{"_index":297,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["shared",{"_index":651,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{}}}],["sharedmodule",{"_index":630,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":1013,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{}}}],["showcases",{"_index":16,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["size",{"_index":331,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["sizing",{"_index":268,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["skills",{"_index":387,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["small",{"_index":946,"title":{},"body":{"components/ChartsComponent.html":{}}}],["smart188",{"_index":786,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["software",{"_index":146,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["solid",{"_index":315,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"index.html":{}}}],["solutions",{"_index":130,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"index.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["spacer",{"_index":1324,"title":{},"body":{"components/HeaderComponent.html":{}}}],["spacing",{"_index":346,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["span",{"_index":340,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["spinner",{"_index":683,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{},"injectables/IsLoadingService.html":{}}}],["spinning",{"_index":592,"title":{},"body":{"components/AppComponent.html":{}}}],["spinning=false",{"_index":605,"title":{},"body":{"components/AppComponent.html":{}}}],["src/.../charts.component.ts",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1640,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/@core",{"_index":604,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DiferredDataChartComponent.html":{}}}],["src/@core/api",{"_index":522,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["src/@core/api/api.resource.service.ts",{"_index":548,"title":{},"body":{"injectables/ApiResourceService.html":{},"coverage.html":{}}}],["src/@core/api/api.resource.service.ts:16",{"_index":554,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/api/api.resource.service.ts:24",{"_index":558,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/api/api.resource.service.ts:34",{"_index":557,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/api/api.resource.service.ts:42",{"_index":556,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/api/api.resource.service.ts:50",{"_index":560,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/api/api.resource.service.ts:61",{"_index":559,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/interceptor/http",{"_index":680,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{},"coverage.html":{}}}],["src/@core/preloader/is",{"_index":1329,"title":{},"body":{"injectables/IsLoadingService.html":{},"coverage.html":{}}}],["src/app/about",{"_index":10,"title":{},"body":{"components/AboutCandidateComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":657,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":583,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":602,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":595,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":600,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":596,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":635,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/features/diferred",{"_index":983,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{}}}],["src/app/features/features",{"_index":1284,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["src/app/features/features.module.ts",{"_index":1277,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["src/app/features/real",{"_index":1384,"title":{},"body":{"components/RealTimeChartComponent.html":{},"coverage.html":{}}}],["src/app/shared/charts/charts.component.ts",{"_index":758,"title":{},"body":{"components/ChartsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/charts/charts.component.ts:110",{"_index":801,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:142",{"_index":815,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:147",{"_index":817,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:35",{"_index":790,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:36",{"_index":785,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:37",{"_index":789,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:38",{"_index":782,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:39",{"_index":787,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:40",{"_index":795,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:41",{"_index":784,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:42",{"_index":788,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:43",{"_index":797,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:44",{"_index":798,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:45",{"_index":822,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:49",{"_index":824,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:53",{"_index":821,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:57",{"_index":779,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:70",{"_index":808,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:84",{"_index":805,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":1291,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:18",{"_index":1297,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":1305,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts:20",{"_index":1310,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:24",{"_index":1314,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1560,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/domain",{"_index":565,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["src/domain/api/api.interface.ts",{"_index":446,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{}}}],["src/domain/api/api.interface.ts:72",{"_index":459,"title":{},"body":{"interfaces/ApiInterface.html":{}}}],["src/domain/api/api.interface.ts:73",{"_index":476,"title":{},"body":{"interfaces/ApiInterface.html":{}}}],["src/domain/api/api.interface.ts:74",{"_index":474,"title":{},"body":{"interfaces/ApiInterface.html":{}}}],["src/domain/api/api.interface.ts:75",{"_index":467,"title":{},"body":{"interfaces/ApiInterface.html":{}}}],["src/domain/api/api.interface.ts:76",{"_index":471,"title":{},"body":{"interfaces/ApiInterface.html":{}}}],["src/domain/chart.ts",{"_index":718,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{}}}],["src/domain/chart.ts:56",{"_index":1564,"title":{},"body":{"interfaces/chartBuilder.html":{}}}],["src/domain/chart.ts:57",{"_index":1566,"title":{},"body":{"interfaces/chartBuilder.html":{}}}],["src/domain/chart.ts:64",{"_index":977,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{}}}],["src/domain/chart.ts:65",{"_index":982,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{}}}],["src/domain/chart.ts:66",{"_index":980,"title":{},"body":{"interfaces/DiferedComponentInterface.html":{}}}],["src/domain/chart.ts:75",{"_index":1535,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/domain/chart.ts:76",{"_index":1537,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/domain/chart.ts:77",{"_index":1543,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/domain/chart.ts:78",{"_index":1539,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/domain/chart.ts:79",{"_index":1547,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/domain/chart.ts:80",{"_index":1545,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/domain/chart.ts:81",{"_index":1541,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["src/environments/environment.prod",{"_index":568,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/HeaderComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":1598,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1599,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/usecases",{"_index":535,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["src/usecases/diferred",{"_index":1238,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"coverage.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["src/usecases/real",{"_index":1341,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["src/utils",{"_index":234,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["src/utils.ts",{"_index":1601,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["st",{"_index":1020,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["staion",{"_index":806,"title":{},"body":{"components/ChartsComponent.html":{}}}],["staions",{"_index":1348,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["start",{"_index":465,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"index.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["start,end,station}=param",{"_index":863,"title":{},"body":{"components/ChartsComponent.html":{}}}],["start:moment().subtract(1,'days').format('yyyy",{"_index":1065,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["start:string=moment().subtract(1,'days').format('yyyy",{"_index":858,"title":{},"body":{"components/ChartsComponent.html":{}}}],["start?this.start=start:null",{"_index":864,"title":{},"body":{"components/ChartsComponent.html":{}}}],["started",{"_index":1665,"title":{"index.html":{}},"body":{"index.html":{}}}],["starttime=moment(this.ranges.start).tolocalestring().split",{"_index":1212,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["statements",{"_index":1569,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["station",{"_index":468,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"miscellaneous/functions.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["station,start,end}=param",{"_index":1102,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["station:d.station",{"_index":1526,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["station:item.station_name",{"_index":1490,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["station:string",{"_index":503,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["station?location.href=`${'/visualisation/diferred?station'}=${station}&&start=${moment(this.start).format('yyyy",{"_index":895,"title":{},"body":{"components/ChartsComponent.html":{}}}],["station?this.builder(station):this.builder",{"_index":1106,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["station?this.selected=station:null",{"_index":866,"title":{},"body":{"components/ChartsComponent.html":{}}}],["station_id",{"_index":513,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["station_name",{"_index":487,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["stationdata",{"_index":1643,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stationdata:currentvaluesschema",{"_index":1501,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["stationdata:currentvaluesschema[]=d",{"_index":1519,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["stationdatalabels",{"_index":1084,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stationdatalabels(stations",{"_index":1660,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stationdatalabels(this.stationsinfo",{"_index":1135,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["stationid",{"_index":472,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["stationinfo",{"_index":1116,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["stationname",{"_index":462,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["stations",{"_index":484,"title":{},"body":{"interfaces/ApiInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["stations,sessioninfo",{"_index":1352,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["stations:any",{"_index":842,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["stations:currentvaluesschema",{"_index":1345,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["stations:sessioninfoschema",{"_index":1444,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["stationsinfo",{"_index":994,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["stationsinfo:sessioninfoschema",{"_index":1094,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["stationval:currentvaluesschema[]=v",{"_index":1463,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["status",{"_index":507,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["string",{"_index":458,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/HeaderComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["structure",{"_index":1027,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"index.html":{}}}],["structured",{"_index":1697,"title":{},"body":{"index.html":{}}}],["studio",{"_index":1723,"title":{},"body":{"index.html":{}}}],["style",{"_index":350,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["styleurls",{"_index":24,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["sub",{"_index":1317,"title":{},"body":{"components/HeaderComponent.html":{}}}],["submodule",{"_index":1281,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["subscibe",{"_index":811,"title":{},"body":{"components/ChartsComponent.html":{}}}],["sudo",{"_index":1746,"title":{},"body":{"index.html":{}}}],["support",{"_index":1756,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sup’com",{"_index":186,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["sur",{"_index":178,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["sure",{"_index":1713,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1770,"title":{},"body":{"modules.html":{}}}],["svg.material",{"_index":925,"title":{},"body":{"components/ChartsComponent.html":{}}}],["swagger",{"_index":164,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["swal",{"_index":834,"title":{},"body":{"components/ChartsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["swal:sweetalert",{"_index":835,"title":{},"body":{"components/ChartsComponent.html":{}}}],["swal=require('sweetalert",{"_index":836,"title":{},"body":{"components/ChartsComponent.html":{}}}],["sweetalert",{"_index":829,"title":{},"body":{"components/ChartsComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["sweetalert/typings/core",{"_index":830,"title":{},"body":{"components/ChartsComponent.html":{}}}],["swimlane/ngx",{"_index":1612,"title":{},"body":{"dependencies.html":{}}}],["system",{"_index":52,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["système",{"_index":199,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["systèmes",{"_index":122,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["t",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":1606,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1605,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1311,"title":{},"body":{"components/HeaderComponent.html":{}}}],["takes",{"_index":1037,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["technical",{"_index":1732,"title":{},"body":{"index.html":{}}}],["technologies,abidjan",{"_index":169,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["telecom",{"_index":217,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["temporelle",{"_index":1223,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["temps",{"_index":793,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{}}}],["tension",{"_index":720,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["tension:0.8",{"_index":1221,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["term",{"_index":1046,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["text",{"_index":333,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["text:'le",{"_index":899,"title":{},"body":{"components/ChartsComponent.html":{}}}],["text:'vous",{"_index":879,"title":{},"body":{"components/ChartsComponent.html":{}}}],["text:`${data[0].sensor}(${data[0].unit",{"_index":1478,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["text:string",{"_index":725,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["then(res",{"_index":886,"title":{},"body":{"components/ChartsComponent.html":{}}}],["things",{"_index":610,"title":{},"body":{"components/AppComponent.html":{}}}],["this.activeroute.queryparams.subscribe((param:any",{"_index":862,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.activeroute.queryparams.subscribe(async(param:any",{"_index":1101,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.api.getcurrentvalues(station).topromise",{"_index":1360,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["this.api.getcurrentvalues(station.station).topromise",{"_index":1351,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["this.api.getlatesttransmissionstatus(sessionid).topromise",{"_index":1366,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["this.api.getrange(sessioninfo[math.floor(math.random()*(sessioninfo.length",{"_index":1270,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["this.api.getrange(stationname,start,end).topromise",{"_index":1266,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["this.api.getsessioninfo(projectname).topromise",{"_index":1267,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["this.barbasedchart",{"_index":1124,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.builder(station",{"_index":1105,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.changerange(station,'vous",{"_index":874,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.chart.update",{"_index":1497,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.chart?this.chart=new",{"_index":1225,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.chartdata(data",{"_index":1119,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.chatbarvischange.emit(event.target?.value",{"_index":908,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.cleartimer",{"_index":1107,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.data.datasets=dt",{"_index":1140,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.data.labels=labels",{"_index":1136,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.http.get(`${this.baseapi}${'getstationstatus'}/${stationid",{"_index":576,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["this.http.get(`${this.baseapi}gethourlyavg/${station}/${start}/${end}?pivot=${true",{"_index":578,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["this.http.get(this.baseapi+`getcurrentvalues/${stationname",{"_index":579,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["this.http.get(this.baseapi+`getrange/${station}/${start}/${end",{"_index":582,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["this.http.get(this.baseapi+`getsessioninfo/${projectname",{"_index":580,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["this.isloading.load.subscribe((res:boolean",{"_index":613,"title":{},"body":{"components/AppComponent.html":{}}}],["this.load.next(value",{"_index":1339,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["this.loader.setloading(false",{"_index":712,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["this.loader.setloading(true",{"_index":709,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["this.onchartsinit",{"_index":1445,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.ranges.end=end",{"_index":1103,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.ranges.start=start",{"_index":1104,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterbasedchart",{"_index":1125,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterchart",{"_index":1236,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterchart.data=scatterconfig.data",{"_index":1209,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterchart.find((sc:any)=>sc.config.station===station",{"_index":1466,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.scatterchart.options=scatterconfig.options",{"_index":1208,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterchart.update",{"_index":1210,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterdata(d",{"_index":1457,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.scatterdata(stationval",{"_index":1464,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.scatters.push('sc",{"_index":1235,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scattersensors.push({sensor:d.label,selected:true",{"_index":1229,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scattersensors=this.scattersensors.concat(dt.filter((f:any)=>f.label!=d.label).map((sc:any)=>({sensor:sc.label,selected:false",{"_index":1230,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.selectedstation",{"_index":1195,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.selectedstation=station",{"_index":1114,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.sensorchange.emit(event.target.value",{"_index":910,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.spinning=res",{"_index":614,"title":{},"body":{"components/AppComponent.html":{}}}],["this.stations.foreach(async(s:any",{"_index":1448,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.stations=this.stationsinfo.map((item:sessioninfoschema)=>({station:item.station,selected:item.station==this.selectedstation?true:false",{"_index":1117,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.stations=this.stationsinfo.map((item:sessioninfoschema,index:number)=>({station:item.station,selected:index==0",{"_index":1123,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.stationsinfo",{"_index":1115,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.stattioncurrentval.execute(s.station).topromise",{"_index":1521,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.time",{"_index":1446,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.timedata.filter((item:any)=>item.dayval",{"_index":1179,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.timedata.foreach((item:any,index:any",{"_index":1144,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.timedata=dt",{"_index":1141,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.timedata=this.timedata.map((item:any)=>({...item,group:object.entries(groupby(this.timedata,(t:any)=>t.unit)).map((e:any)=>({unit:e[0],values:e[1],label:item.label",{"_index":1142,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.timer",{"_index":1126,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.times.push(index+\"times\"+date.now",{"_index":1524,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.timescahrt.find((c:any)=>c.config.station===station",{"_index":1505,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.timescahrt.push({chart,config",{"_index":1533,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.updatescatter",{"_index":1128,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.updatescatter([stationdata],s.station",{"_index":1499,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.updatescatter(item",{"_index":1176,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.updatetimeseries(stationdata,s.station",{"_index":1498,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.usecases.canupdate(s.sessiond_id)?this.updatedata(s):null",{"_index":1449,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.usecases.execute(this.ranges.start,this.ranges.end,this.title",{"_index":1121,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.usecases.parallelexecution(st,this.ranges.start,this.ranges.end,this.title",{"_index":1113,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["throw",{"_index":1131,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["throwerror(error",{"_index":715,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["ticks",{"_index":1204,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["time",{"_index":438,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["time:\"depuis",{"_index":165,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["time:\"février",{"_index":181,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["time:\"mars",{"_index":142,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["time:any",{"_index":1443,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["time:d.time",{"_index":1525,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["time:dt[0].time",{"_index":1506,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["timedata",{"_index":995,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["timedata:any",{"_index":1099,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["timer",{"_index":996,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["timer:any=null",{"_index":1100,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["times",{"_index":773,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["times:any",{"_index":838,"title":{},"body":{"components/ChartsComponent.html":{}}}],["times:string",{"_index":1092,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["timescahrt",{"_index":1386,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["timescahrt:any",{"_index":1442,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["timestamp",{"_index":488,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["title",{"_index":344,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{}}}],["title2",{"_index":378,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["title:maketitle(`${d.label}(${d.unit})`,getrandomrgb",{"_index":1207,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["title:maketitle(`${data[0].sensors.join(',')}(${data[0].unit})`,getrandomrgb",{"_index":1475,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["title:maketitle(`autres",{"_index":1201,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["title:maketitle(`correlation",{"_index":1231,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["title=\"aq54",{"_index":1319,"title":{},"body":{"components/HeaderComponent.html":{}}}],["title='aq54",{"_index":606,"title":{},"body":{"components/AppComponent.html":{}}}],["title='visualisation",{"_index":848,"title":{},"body":{"components/ChartsComponent.html":{}}}],["today",{"_index":763,"title":{},"body":{"components/ChartsComponent.html":{}}}],["today=moment().format('yyyy",{"_index":860,"title":{},"body":{"components/ChartsComponent.html":{}}}],["toolbar",{"_index":1327,"title":{},"body":{"components/HeaderComponent.html":{}}}],["top",{"_index":325,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["top:60px",{"_index":293,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["transform",{"_index":334,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["transition",{"_index":586,"title":{},"body":{"components/AppComponent.html":{},"components/ChartsComponent.html":{}}}],["translatey",{"_index":950,"title":{},"body":{"components/ChartsComponent.html":{}}}],["transmission",{"_index":506,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["transtime",{"_index":1369,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["true",{"_index":884,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1109,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["tslib",{"_index":1634,"title":{},"body":{"dependencies.html":{}}}],["tunis",{"_index":205,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["tunisie",{"_index":94,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/parallelExecutionResponseType.html":{},"miscellaneous/variables.html":{}}}],["type:'linear",{"_index":1200,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["types",{"_index":1454,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["typicaly",{"_index":497,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["ul",{"_index":347,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["uml",{"_index":62,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["under",{"_index":1764,"title":{},"body":{"index.html":{}}}],["underline",{"_index":917,"title":{},"body":{"components/ChartsComponent.html":{}}}],["unfortunately",{"_index":1378,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["unit",{"_index":1014,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"miscellaneous/functions.html":{}}}],["unit:selected?.unit",{"_index":1491,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["units.push(group?.unit",{"_index":1165,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["units:any",{"_index":1143,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["unknown",{"_index":1252,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"components/RealTimeChartComponent.html":{}}}],["unset",{"_index":935,"title":{},"body":{"components/ChartsComponent.html":{}}}],["up",{"_index":173,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/RealTimeChartComponent.html":{},"index.html":{}}}],["update",{"_index":1051,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["update=false",{"_index":1513,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["update?chart.update():null",{"_index":1517,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatechartbardata",{"_index":1604,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatechartbardata(stationdata",{"_index":1662,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updatechartbardata,groupby",{"_index":1430,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatedata",{"_index":1392,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["updatedata(...args",{"_index":1544,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["updatedata(...args:any):any",{"_index":756,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["updatedata(s",{"_index":1414,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatescatter",{"_index":1002,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/chartBuilder.html":{}}}],["updatescatter(...args",{"_index":1565,"title":{},"body":{"interfaces/chartBuilder.html":{}}}],["updatescatter(...args:any):void",{"_index":745,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["updatescatter(sensor",{"_index":1048,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["updatescatter(sensor:string",{"_index":1177,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["updatescatter(v",{"_index":1418,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatescatter(v:currentvaluesschema[]=[],station:string",{"_index":1462,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatetimeseries",{"_index":1393,"title":{},"body":{"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{}}}],["updatetimeseries(...args",{"_index":1546,"title":{},"body":{"interfaces/RealTimeChartComponentInterface.html":{}}}],["updatetimeseries(...args:any):any",{"_index":755,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["updatetimeseries(d",{"_index":1421,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatetimeseries(d:currentvaluesschema,station:string",{"_index":1500,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updating",{"_index":1664,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uppercase",{"_index":335,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["urban",{"_index":1692,"title":{},"body":{"index.html":{}}}],["url",{"_index":564,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/HeaderComponent.html":{}}}],["url(\"https://fonts.googleapis.com/css2?family=poppins:wght@200;300;400;500;600;700;800;900&display=swap",{"_index":263,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["use",{"_index":1342,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["usecase",{"_index":1251,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["usecases",{"_index":451,"title":{},"body":{"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/SessionInfoSchema.html":{}}}],["usecases.ts",{"_index":1239,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"coverage.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["usecases.ts:14",{"_index":1243,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["usecases.ts:31",{"_index":1254,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["usecases.ts:52",{"_index":1245,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["usecases:diferredmodeusecases",{"_index":1088,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["usecases:realtimeusecases",{"_index":1437,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["useclass:apiresourceservice",{"_index":540,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["useclass:aq54httpinterceptor",{"_index":656,"title":{},"body":{"modules/AppModule.html":{}}}],["useclass:diferredmodeusecases",{"_index":542,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["useclass:realtimeusecases",{"_index":544,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["used",{"_index":479,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/SessionInfoSchema.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":14,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{},"index.html":{}}}],["user.address",{"_index":245,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.email1",{"_index":242,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.email2",{"_index":243,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.email|lowercase",{"_index":1303,"title":{},"body":{"components/FooterComponent.html":{}}}],["user.jobtitle",{"_index":239,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.linkedin",{"_index":244,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.name",{"_index":238,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.phone",{"_index":241,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.profile",{"_index":255,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["using",{"_index":1298,"title":{},"body":{"components/FooterComponent.html":{}}}],["utc",{"_index":1367,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["utilisateurs",{"_index":139,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["utilisation",{"_index":157,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["utility",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uvre",{"_index":198,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["v",{"_index":1420,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["v.sensor!=selectedsensor.type",{"_index":1485,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["v.unit===item.unit",{"_index":1152,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["valid",{"_index":1380,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["value",{"_index":42,"title":{},"body":{"components/AboutCandidateComponent.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":485,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["values.length?data.push",{"_index":1488,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["values:array",{"_index":489,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["values=item.values.filter(v=>!v.unit?null:v.unit.tolowercase()===selectedsensor.unit?.tolowercase",{"_index":1484,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["var",{"_index":421,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1040,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1776,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1717,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":163,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["viewer",{"_index":1624,"title":{},"body":{"dependencies.html":{}}}],["visual",{"_index":1722,"title":{},"body":{"index.html":{}}}],["visualisation",{"_index":740,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/parallelExecutionResponseType.html":{}}}],["visualization",{"_index":1666,"title":{},"body":{"index.html":{}}}],["visually",{"_index":1678,"title":{},"body":{"index.html":{}}}],["void",{"_index":39,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{}}}],["volumes",{"_index":1737,"title":{},"body":{"index.html":{}}}],["volutives",{"_index":133,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["wait",{"_index":608,"title":{},"body":{"components/AppComponent.html":{}}}],["web",{"_index":1749,"title":{},"body":{"index.html":{}}}],["website",{"_index":1312,"title":{},"body":{"components/HeaderComponent.html":{}}}],["weight",{"_index":336,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["well",{"_index":1433,"title":{},"body":{"components/RealTimeChartComponent.html":{},"index.html":{}}}],["wether",{"_index":697,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["white",{"_index":934,"title":{},"body":{"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["width",{"_index":279,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["work",{"_index":1316,"title":{},"body":{"components/HeaderComponent.html":{}}}],["wrap",{"_index":933,"title":{},"body":{"components/ChartsComponent.html":{}}}],["x",{"_index":1205,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["x0=`${starttime[1]}/${starttime[3",{"_index":1213,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["xdata",{"_index":1148,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["xgroup:any=groupby(xdata.dayvalues,(d:any)=>d.x",{"_index":1156,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["xgroup[key].foreach((xd:any,id:number",{"_index":1162,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["y",{"_index":737,"title":{},"body":{"interfaces/ChartAnimation.html":{},"interfaces/ChartBarDataInterface.html":{},"interfaces/DiferedComponentInterface.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"interfaces/RealTimeChartComponentInterface.html":{},"interfaces/chartBuilder.html":{},"interfaces/chartTitle.html":{}}}],["y.foreach((yd:any",{"_index":1161,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["y:any=obj.map((yd:any)=>({label:yd[0],ydata:groupby(yd[1][0].dayvalues,(f:any)=>f.x",{"_index":1158,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["ydata",{"_index":1150,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["year:\"2010",{"_index":221,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["year:\"2017",{"_index":212,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["year:\"2021",{"_index":206,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["year_company",{"_index":381,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["z",{"_index":618,"title":{},"body":{"components/AppComponent.html":{}}}],["zone.js",{"_index":1636,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":632,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutCandidateComponent.html":{"url":"components/AboutCandidateComponent.html","title":"component - AboutCandidateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutCandidateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about-candidate/about-candidate.component.ts\n\n\n\n    \n        Description\n    \n    \n        *About user component\nits for my own purpose and just showcases my Resumé\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about-candidate\n            \n\n\n\n            \n                styleUrls\n                ./about-candidate.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about-candidate.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/about-candidate/about-candidate.component.ts:127\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/about-candidate/about-candidate.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  labels: [\n    'Nodejs',\n    \"Nestjs\",\n    \"Angular\",\n    \"Reactjs\",\n    \"Python\",\n    \"Django\",\n    \"Flask\",\n    \"Recommender system\",\n    \"Machine learning\",\n    \"Clean Architecture\",\n    \"Microservice Architecture\",\n    'Cloud native app development',\n    \"Docker\",\n    \"UML\",\n    \"SCRUM/UP\",\n    \"JavaScript/TypeScript\"\n  ],\n  datasets: [{\n    label: 'Domaine de competence.',\n    data: [4.5,4.5,4.5,2.5,4,3,3,3,2.5,4,3,3,2.8,3,2.3,4.5],\n    borderColor: (()=>{\n      const bg:any=[]\n      for(let i=0;i{\n      const bg:any=[]\n      for(let i=0;i\n                    \n                \n                    \n                        \n                                Defined in src/app/about-candidate/about-candidate.component.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  name:\"David Kouamé N'DRI\",\n  jobTitle:\"Sofware Engineer\",\n  photo:\"assets/david.png\",\n  email1:\"kouame.ndri1998@gmail.com\",\n  email2:\"kouame.ndri@supcom.tn\",\n  linkedIn:\"linkedin.com/in/kouamé-david-n-dri-1615a5186\",\n  phone:\"+216 27999299\",\n  address:\"Ariana, Tunisie\",\n  hobbies:[\n    'Football',\n    \"Musique\",\n    \"Internet\",\n    \"Lecture\"\n  ],\n  profile:`Ingénieur en génie logiciel avec deux (02) années de pratique dans le développement, la conception et la maintenance de logiciels.\n  Fortes compétences en résolution de problèmes, analyse de systèmes complexes et collaboration avec des équipes interfonctionnelles.\n  Expérience approfondie dans le développement de solutions logicielles robustes, évolutives et efficaces pour répondre aux besoins des utilisateurs et des clients.`,\n  experience:[\n    {\n      time:\"Mars 2023-Juin 2023\",\n      jobTitle:\"Remote software Developer\",\n      company:\"SeeWatch, Pau, Nouvelle Aquitaine France\",\n      descriptioon:[\n        \" Développement Backend avec Nodejs\",\n        \"conception de la base de données\",\n        \"\tUtilisation des API de paiement\",\n        \"\tdocumentation du code via Swagger.\",\n        ]\n    },\n    {\n      time:\"Depuis Juin 2022\",\n      jobTitle:\"Lead Developer\",\n      company:\"Aladin Technologies,Abidjan\",\n      descriptioon:[\n        \"Conception et développement\",\n        \"gestion de projet avec la methode UP\",\n        \"mise en place d’architectures logicielles robustes\",\n        \"développement basé sur les principes de Clean Architecture\"\n        ]\n    },\n    {\n      time:\"Février 2022- Juin 2022\",\n      jobTitle:\"Stage Ingénieur génie logiciel\",\n      company:\"Laboratoire Médiatron Sup’Com Tunisie\",\n      descriptioon:[\n        \"Conception et développement\",\n        \"Etat de l’art des systèmes de recomandation\",\n        \"modelisation d’un modèle basé sur l’approche Matrix Factorisation à l’aide des données implicites pour la mise en œuvre d’un système de recommendation de services \",\n        \"architecture microservices.\"\n        ]\n    }\n\n  ],\neducations:[\n\n  {\n   school:\"Sup'com Tunis\",\n   year:\"2021-2022\",\n   degree:\"Master systèmes d'information et  genie Logiciel \"\n  },\n  {\n    school:\"ESATIC, Abidjan\",\n    year:\"2017-2020\",\n    degree:\"Licence systèmes reseaux informatiques et telecom \"\n   },\n   {\n    school:\"Lycée Moderne Oumé.\",\n    year:\"2010-2017\",\n    degree:\"Baccalauréat scientifique option serie C. \"\n   }\n  ]\n}\n                    \n                \n                    \n                        \n                                Defined in src/app/about-candidate/about-candidate.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport Chart from 'chart.js/auto';\nimport { getRandomRgb } from 'src/utils';\n/**\n * *About user component\n * its for my own purpose and just showcases my Resumé\n */\n@Component({\n  selector: 'app-about-candidate',\n  templateUrl: './about-candidate.component.html',\n  styleUrls: ['./about-candidate.component.scss']\n})\nexport class AboutCandidateComponent implements OnInit {\nuser={\n  name:\"David Kouamé N'DRI\",\n  jobTitle:\"Sofware Engineer\",\n  photo:\"assets/david.png\",\n  email1:\"kouame.ndri1998@gmail.com\",\n  email2:\"kouame.ndri@supcom.tn\",\n  linkedIn:\"linkedin.com/in/kouamé-david-n-dri-1615a5186\",\n  phone:\"+216 27999299\",\n  address:\"Ariana, Tunisie\",\n  hobbies:[\n    'Football',\n    \"Musique\",\n    \"Internet\",\n    \"Lecture\"\n  ],\n  profile:`Ingénieur en génie logiciel avec deux (02) années de pratique dans le développement, la conception et la maintenance de logiciels.\n  Fortes compétences en résolution de problèmes, analyse de systèmes complexes et collaboration avec des équipes interfonctionnelles.\n  Expérience approfondie dans le développement de solutions logicielles robustes, évolutives et efficaces pour répondre aux besoins des utilisateurs et des clients.`,\n  experience:[\n    {\n      time:\"Mars 2023-Juin 2023\",\n      jobTitle:\"Remote software Developer\",\n      company:\"SeeWatch, Pau, Nouvelle Aquitaine France\",\n      descriptioon:[\n        \" Développement Backend avec Nodejs\",\n        \"conception de la base de données\",\n        \"\tUtilisation des API de paiement\",\n        \"\tdocumentation du code via Swagger.\",\n        ]\n    },\n    {\n      time:\"Depuis Juin 2022\",\n      jobTitle:\"Lead Developer\",\n      company:\"Aladin Technologies,Abidjan\",\n      descriptioon:[\n        \"Conception et développement\",\n        \"gestion de projet avec la methode UP\",\n        \"mise en place d’architectures logicielles robustes\",\n        \"développement basé sur les principes de Clean Architecture\"\n        ]\n    },\n    {\n      time:\"Février 2022- Juin 2022\",\n      jobTitle:\"Stage Ingénieur génie logiciel\",\n      company:\"Laboratoire Médiatron Sup’Com Tunisie\",\n      descriptioon:[\n        \"Conception et développement\",\n        \"Etat de l’art des systèmes de recomandation\",\n        \"modelisation d’un modèle basé sur l’approche Matrix Factorisation à l’aide des données implicites pour la mise en œuvre d’un système de recommendation de services \",\n        \"architecture microservices.\"\n        ]\n    }\n\n  ],\neducations:[\n\n  {\n   school:\"Sup'com Tunis\",\n   year:\"2021-2022\",\n   degree:\"Master systèmes d'information et  genie Logiciel \"\n  },\n  {\n    school:\"ESATIC, Abidjan\",\n    year:\"2017-2020\",\n    degree:\"Licence systèmes reseaux informatiques et telecom \"\n   },\n   {\n    school:\"Lycée Moderne Oumé.\",\n    year:\"2010-2017\",\n    degree:\"Baccalauréat scientifique option serie C. \"\n   }\n  ]\n}\n\ndata:any = {\n  labels: [\n    'Nodejs',\n    \"Nestjs\",\n    \"Angular\",\n    \"Reactjs\",\n    \"Python\",\n    \"Django\",\n    \"Flask\",\n    \"Recommender system\",\n    \"Machine learning\",\n    \"Clean Architecture\",\n    \"Microservice Architecture\",\n    'Cloud native app development',\n    \"Docker\",\n    \"UML\",\n    \"SCRUM/UP\",\n    \"JavaScript/TypeScript\"\n  ],\n  datasets: [{\n    label: 'Domaine de competence.',\n    data: [4.5,4.5,4.5,2.5,4,3,3,3,2.5,4,3,3,2.8,3,2.3,4.5],\n    borderColor: (()=>{\n      const bg:any=[]\n      for(let i=0;i{\n      const bg:any=[]\n      for(let i=0;i{\n          const bg:any=[]\n          for(let i=0;i{\n          const bg:any=[]\n          for(let i=0;i\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n                \n            \n            \n            {{user.name}} {{user.jobTitle}} \n        \n\n        \n            Contacts\n            \n                \n                    \n                    {{user.phone}}\n                \n                \n                    \n                    {{user.email1}}\n                \n                \n                  \n                  {{user.email2}}\n              \n                \n                    \n                    \n                    \n                      {{user.linkedIn}}\n                    \n                \n                \n                    \n                    {{user.address}}\n                \n            \n        \n        \n            Education\n            \n                \n                    {{item.year}}\n                    {{item.degree}}\n                    {{item.school}}\n                \n\n            \n        \n        \n            Languages\n            \n                \n                    Anglais\n                    \n                        \n                    \n                \n            \n\n\n            \n                \n                    Français\n                    \n                        \n                    \n                \n            \n          \n\n        \n    \n        \n            Profil professionnel\n            \n              {{user.profile}}\n            \n        \n        \n            Experience\n            \n                \n                    {{item.time}}\n                    {{item.company}}\n                \n                \n                    {{item.jobTitle}}\n                    \n                      \n                            {{el}}\n                      \n                    \n                \n            \n\n\n        \n        \n            Competences\n            \n        \n        \n            Centres d’intérêts\n            \n\n        \n\n\n    \n    -->\n\n\n\n\n    \n\n    \n                \n                    ./about-candidate.component.scss\n                \n                @import url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700;800;900&display=swap\");\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: \"Poppins\", SansSerif;\n}\n\n.ed{\n  position: relative;\n  padding: 0%;\n}\n\n\n.container {\n  position: absolute;\n  width: 100%;\n  max-width: 1000px;\n  min-height: 1000px;\n  background-color: #fff;\n  margin: 50px;\n  display: grid;\n  left: 200px;\n  top:60px;\n  grid-template-columns: 1fr 2fr;\n  box-shadow: 0 35px 55px rgba(0, 0, 0, 0.1);\n}\n.container .left_Side {\n  position: relative;\n  background-color: #003147;\n  padding: 40px;\n}\n.profileText {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 20px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n}\n.profileText .imgBx {\n  position: relative;\n  width: 200px;\n  height: 200px;\n  border-radius: 50%;\n  overflow: hidden;\n}\n.profileText .imgBx img {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n.photo {\n  width: 100%;\n  height: auto;\n}\n.profileText h2 {\n  color: #fff;\n  font-size: 1.5em;\n  margin-top: 20px;\n  text-transform: uppercase;\n  text-align: center;\n  font-weight: 600;\n  line-height: 1.4em;\n}\n.profileText h2 span {\n  font-size: 0.8em;\n  font-weight: 300;\n}\n.contactInfo {\n  padding-top: 20px;\n}\n.title {\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: 600;\n  letter-spacing: 1px;\n  margin-bottom: 20px;\n}\n.contactInfo ul {\n  position: relative;\n}\n.contactInfo ul li {\n  list-style: none;\n  position: relative;\n  margin: 10px 0;\n  cursor: pointer;\n}\n.contactInfo ul li .icon {\n  display: inline-block;\n  width: 30px;\n  font-size: 18px;\n  color: #03a9f4;\n}\n.contactInfo ul li span {\n  color: #fff;\n  font-weight: 300;\n}\n.contactInfo.education li {\n  margin-bottom: 15px;\n}\n.contactInfo.education h5 {\n  color: #03a9f4;\n  font-weight: 400;\n}\n.contactInfo.education h4:nth-child(2) {\n  color: #fff;\n  font-weight: 300;\n}\n.contactInfo.education h4 {\n  color: #fff;\n  font-weight: 200;\n}\n.contactInfo.language .percent {\n  position: relative;\n  width: 100%;\n  height: 6px;\n  background-color: #081921;\n  display: block;\n  margin-top: 5px;\n}\n.contactInfo.language .percent div {\n  position: relative;\n  top: 0;\n  left: 0;\n  height: 100%;\n  background-color: #03a9f4;\n}\n.container .right_Side {\n  position: relative;\n  background-color: #fff;\n  padding: 40px;\n}\n.about {\n  margin-bottom: 50px;\n}\n.about:last-child {\n  margin-bottom: 0;\n}\n.title2 {\n  color: #003147;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  margin-bottom: 10px;\n}\np {\n  color: #081921;\n}\n.about .box {\n  display: flex;\n  flex-direction: row;\n  margin: 10px 0;\n}\n.about .box .year_company {\n  min-width: 350px;\n  margin-right: 10px;\n}\n.about .box .year_company h5 {\n  text-transform: uppercase;\n  color: #080fe1;\n  font-weight: 350;\n}\n.about .box .text h4 {\n  text-transform: uppercase;\n  color: #080fe1;\n  font-size: 16px;\n}\n.skills .box {\n  position: relative;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 150px 1fr;\n  justify-content: center;\n  align-items: center;\n}\n.skills .box h4 {\n  text-transform: uppercase;\n  color: #848c90;\n  font-weight: 300;\n}\n.skills .box .percent {\n  position: relative;\n  width: 100%;\n  height: 10px;\n  background-color: #f0f0f0;\n}\n.skills .box .percent div {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  background-color: #03a9f4;\n}\n.interest ul {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n}\n.interest ul li {\n  list-style: none;\n  color: black;\n  font-weight: 500;\n  margin: 10px 0;\n}\n.interest ul li .fa {\n  color: #03a9f4;\n  font-size: 18px;\n  width: 20px;\n}\n@media (max-width: 1000px) {\n  .container {\n    margin: 10px;\n    grid-template-columns: repeat(1, 1fr);\n  }\n  .interest ul {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n@media (max-width: 600px) {\n  .about .box {\n    flex-direction: column;\n  }\n  .about .box .year_company {\n    margin-bottom: 5px;\n  }\n  .interest ul {\n    grid-template-columns: repeat(1, 1fr);\n  }\n  .skills .box {\n    grid-template-columns: repeat(1, 1fr);\n  }\n}\n.englishw85 {\n  width: 85%;\n}\n.russianw90 {\n  width: 90%;\n}\n.frenchw100 {\n  width: 100%;\n}\n.htmlws30 {\n  width: 50%;\n}\n.cssws45 {\n  width: 45%;\n}\n.jsws70 {\n  width: 70%;\n}\n.phws40 {\n  width: 40%;\n}\n.ilws60 {\n  width: 60%;\n}\n.adw70 {\n  width: 70%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{user.name}} {{user.jobTitle}}                             Contacts                                                                    {{user.phone}}                                                                        {{user.email1}}                                                                    {{user.email2}}                                                                                                                {{user.linkedIn}}                                                                                            {{user.address}}                                                        Education                                                {{item.year}}                    {{item.degree}}                    {{item.school}}                                                        Languages                                                Anglais                                                                                                                                            Français                                                                                                                                      Profil professionnel                          {{user.profile}}                                        Experience                                                {{item.time}}                    {{item.company}}                                                    {{item.jobTitle}}                                                                      {{el}}                                                                                                  Competences                                        Centres d’intérêts                            -->'\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutCandidateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiInterface.html":{"url":"interfaces/ApiInterface.html","title":"interface - ApiInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/api/api.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Here is the api interface\nwe gather here all the different api call usecases\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getCurrentValues\n                                    \n                                \n                                \n                                    \n                                        getHourlyAvg\n                                    \n                                \n                                \n                                    \n                                        getLatestTransmissionStatus\n                                    \n                                \n                                \n                                    \n                                        getRange\n                                    \n                                \n                                \n                                    \n                                        getSessionInfo\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentValues\n                        \n                    \n                \n            \n            \n                \ngetCurrentValues(stationName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/api/api.interface.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHourlyAvg\n                        \n                    \n                \n            \n            \n                \ngetHourlyAvg(station: string, start: string, end: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/api/api.interface.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLatestTransmissionStatus\n                        \n                    \n                \n            \n            \n                \ngetLatestTransmissionStatus(stationId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/api/api.interface.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stationId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRange\n                        \n                    \n                \n            \n            \n                \ngetRange(station: string, start: string, end: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/api/api.interface.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSessionInfo\n                        \n                    \n                \n            \n            \n                \ngetSessionInfo(projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/api/api.interface.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\n/**\n * used as return type of api calls for getting cirrent stations values\n */\nexport interface CurrentValuesSchema{\n    station_name: string,\n    timestamp: string,\n    values:Array\n\n}\n/**\n * used as type of the return values of calling api to retrieve stations' information\n */\nexport interface SessionInfoSchema{\n  station: string,\n  description: string,\n  sessiond_id: number,\n  integrated_sensors: Array\n}\n\n/**\n * this is typicaly for difered mode data retrieving the api call should return data as type this interface.\n */\nexport interface RangeDataSchema{\n  raw_data:Array\n  station:string\n}\n\n/**\n * this interface represents data type of api calls to retrieve the last transmission status of given station\n */\nexport interface LatestTransmissionsResponseScema\n  {\n    last_transmission_utc: string,\n    latitude: string,\n    longitude: number,\n    station_id: number,\n    station_name: string\n  }\n\n  /**\n   * Here is the api interface\n   * we gather here all the different api call usecases\n   */\nexport interface ApiInterface {\n  getCurrentValues(stationName:string):Observable\n  getSessionInfo(projectName:string):Observable>\n  getRange(station:string,start:string,end:string):Observable\n  getHourlyAvg(station:string,start:string,end:string):Observable\n  getLatestTransmissionStatus(stationId:number):Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiProxyModule.html":{"url":"modules/ApiProxyModule.html","title":"module - ApiProxyModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiProxyModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/@core/api-proxy/api-proxy.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Api proxy module\nhere we setup configuration of the different api usecases\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {  NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ApiResourceService } from '../api/api.resource.service';\nimport { DiferredModeUsecases } from '..';\nimport { RealTimeUseCases } from 'src/UseCases';\n/**\n * Api proxy module\n * here we setup configuration of the different api usecases\n *\n */    \n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers:[\n\n  {\n    provide:'api',\n    useClass:ApiResourceService\n  },\n\n  {\n    provide:\"diferred:mode\",\n    useClass:DiferredModeUsecases\n  },\n  {\n    provide:'realTime:mode',\n    useClass:RealTimeUseCases\n  }\n\n],\nexports:[]\n})\nexport class ApiProxyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiResourceService.html":{"url":"injectables/ApiResourceService.html","title":"injectable - ApiResourceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiResourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/api/api.resource.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Api resource service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentValues\n                            \n                            \n                                getHourlyAvg\n                            \n                            \n                                getLatestTransmissionStatus\n                            \n                            \n                                getRange\n                            \n                            \n                                getSessionInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/@core/api/api.resource.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentValues\n                        \n                    \n                \n            \n            \n                \ngetCurrentValues(stationName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/api/api.resource.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHourlyAvg\n                        \n                    \n                \n            \n            \n                \ngetHourlyAvg(station: string, start: string, end: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/api/api.resource.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLatestTransmissionStatus\n                        \n                    \n                \n            \n            \n                \ngetLatestTransmissionStatus(stationId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/api/api.resource.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stationId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRange\n                        \n                    \n                \n            \n            \n                \ngetRange(station: string, start: string, end: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/api/api.resource.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSessionInfo\n                        \n                    \n                \n            \n            \n                \ngetSessionInfo(projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/api/api.resource.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.baseApi\n                    \n                \n                    \n                        \n                                Defined in src/@core/api/api.resource.service.ts:16\n                        \n                    \n\n            \n                \n                    based api endpoint url\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiInterface, CurrentValuesSchema, LatestTransmissionsResponseScema, RangeDataSchema, SessionInfoSchema } from 'src/domain';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\n/**\n * Api resource service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiResourceService implements ApiInterface {\n  /**\n   * based api endpoint url\n   */\n  baseApi:string=environment.baseApi;\n  constructor(private readonly http:HttpClient) { }\n/**\n *\n * @param stationId\n * @returns\n */\n\n  getLatestTransmissionStatus(stationId: number): Observable {\n    return this.http.get(`${this.baseApi}${'getStationStatus'}/${stationId}`)\n  }\n/**\n *\n * @param station\n * @param start\n * @param end\n * @returns\n */\n  getHourlyAvg(station:string,start:string,end:string): Observable {\n    return this.http.get(`${this.baseApi}getHourlyAvg/${station}/${start}/${end}?pivot=${true}`)\n  }\n/**\n *\n * @param stationName\n * @returns\n */\n  getCurrentValues(stationName: string): Observable {\n    return this.http.get(this.baseApi+`getCurrentValues/${stationName}`)\n  }\n/**\n *\n * @param projectName\n * @returns\n */\n  getSessionInfo(projectName: string): Observable {\n    return this.http.get(this.baseApi+`getSessionInfo/${projectName}`)\n  }\n\n/**\n *\n * @param station\n * @param start\n * @param end\n * @returns\n */\n  getRange(station:string,start:string,end:string): Observable {\n    return this.http.get(this.baseApi+`getRange/${station}/${start}/${end}`)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        the main component that handles the transition between different components and modules\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isLoading\n                            \n                            \n                                spinning\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(isLoading: IsLoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isLoading\n                                                  \n                                                        \n                                                                        IsLoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:19\n                        \n                    \n\n\n            \n                \n                        executed once the component got initiated\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IsLoadingService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spinning\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AQ54'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { IsLoadingService } from 'src/@core';\n\n/**\n * the main component that handles the transition between different components and modules\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  spinning=false\n  title='AQ54'\n  constructor( public isLoading:IsLoadingService){}\n  /**\n   * executed once the component got initiated\n   */\n  ngOnInit(): void {\n    /**\n     * we wait a 1ms for things to be setted up.\n     */\n    setTimeout(()=>{\n      this.isLoading.load.subscribe((res:boolean)=>{\n        this.spinning=res\n      })\n    },1000)\n\n  }\n\n\n}\n\n    \n\n    \n        \n\n \n  \n \n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n\n\n.setting{\n  position: fixed;\n  z-index:0;\n  left:0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  text-align: center;\n  img{\n    position: relative;\n    top: 50%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAboutCandidateComponent\n\nAboutCandidateComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutCandidateComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApiProxyModule\n\nApiProxyModule\n\nAppModule -->\n\nApiProxyModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAq54HttpInterceptor\n\nAq54HttpInterceptor\n\nAppModule -->\n\nAq54HttpInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            main module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutCandidateComponent\n                        \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            Aq54HttpInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiProxyModule\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http'\nimport { ApiProxyModule, Aq54HttpInterceptor } from 'src/@core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from './shared';\nimport { AboutCandidateComponent } from './about-candidate/about-candidate.component';\n/**\n * main module \n */\n@NgModule({\n  declarations: [\n    AppComponent,\n    AboutCandidateComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    ApiProxyModule,\n    RouterModule,\n    SharedModule\n  ],\n  bootstrap: [AppComponent],\n  schemas:[CUSTOM_ELEMENTS_SCHEMA],\n  providers:[\n    {\n      provide:HTTP_INTERCEPTORS,\n      multi:true,\n      useClass:Aq54HttpInterceptor\n    }\n  ]\n})\n\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AboutCandidateComponent } from './about-candidate/about-candidate.component';\n/**\n * App routing\n * this module should load all the different routing module\n * and map each route request to the corresponding route\n */\nconst routes: Routes = [\n   {\n    path:'',\n    redirectTo:'/visualisation/real-time',\n    pathMatch:'full'\n   },\n\n   {\n    component:AboutCandidateComponent,\n    path:'david'\n   },\n\n  {\n    path:'visualisation',\n    loadChildren:()=>\"import('./features').then(m=>m.FeaturesModule)\"\n  },\n  {\n    path:'**',\n    redirectTo:'/visualisation/real-time',\n    pathMatch:'full'\n   },\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{ scrollPositionRestoration: 'enabled',preloadingStrategy:PreloadAllModules})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/Aq54HttpInterceptor.html":{"url":"interceptors/Aq54HttpInterceptor.html","title":"interceptor - Aq54HttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  Aq54HttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/Interceptor/http-interceptor.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                We intercept every api call to setup the spinner\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loader: IsLoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/@core/Interceptor/http-interceptor.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        IsLoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/Interceptor/http-interceptor.interceptor.ts:28\n                        \n                    \n\n\n            \n                \n                        \nintercept\nis an implementation of\nHttpInterceptor fron Angular common http\nwe intercept every request and decide wether to enable spinner or not\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IsLoadingService\n\n                    \n                \n                    \n                        \n                                Defined in src/@core/Interceptor/http-interceptor.interceptor.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable,throwError } from 'rxjs';\nimport { catchError,finalize } from 'rxjs/operators';\n\nimport { IsLoadingService } from '../Preloader/is-loading.service';\n/**\n * We intercept every api call to setup the spinner\n */\n@Injectable()\nexport class Aq54HttpInterceptor implements HttpInterceptor {\n\n  constructor(public loader:IsLoadingService) {}\n/**\n ** intercept\n is an implementation of\n ** HttpInterceptor fron Angular common http\n we intercept every request and decide wether to enable spinner or not\n * @param request\n * @param next\n * @returns\n */\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n   if(request.url.includes('getRange')||request.url.includes('getSessionInfo')){\n      this.loader.setLoading(true)\n      return next.handle(request).pipe(\n        finalize(()=>{\n            this.loader.setLoading(false);\n        }),\n        catchError((error:any)=>{\n          this.loader.setLoading(false);\n          //console.log(error)\n          return throwError(error)\n        })\n        )\n   }else{\n    return next.handle(request)\n   }\n\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartAnimation.html":{"url":"interfaces/ChartAnimation.html","title":"interface - ChartAnimation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartAnimation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/chart.ts\n        \n\n\n            \n                Description\n            \n            \n                used as type of chart animation option\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tension\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tension:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Chart } from \"chart.js/auto\"\nimport { CurrentValuesSchema } from \"./api/api.interface\"\n/**\n * used as type  of chart title\n */\nexport\ninterface chartTitle{\n  display:boolean\n  text:string\n  color:string\n}\n/**\n * used as type of chart animation option\n */\nexport interface ChartAnimation{\n    tension: {\n      duration:number,\n      easing: string,\n      from: number,\n      to: number,\n      loop: boolean\n    }\n\n}\n/**\n * chartbar data requirements type\n */\nexport interface ChartBarDataInterface{\n\n    labels:string[]\n    datasets: Array\n  options: {\n    scales: {\n      y: {\n        beginAtZero: boolean,\n        min: number,\n        max: number\n      }\n    }\n  }\n\n\n}\n\n/**\n * Used in both diferred mode data visualisation and real time data\n * visualisation compenents as interface of methods to be implemented.\n */\nexport interface chartBuilder{\n  chartData():CurrentValuesSchema[]|any\n  updateScatter(...args:any):void\n}\n/**\n * Should be implemented in diferred mode data visualisation\n * to setup data requirements\n */\nexport interface DiferedComponentInterface{\n  barBasedChart(...args:any):void\n  scatterBasedChart(...args:any):void\n  builder(...args:any):any\n}\n\n\n/**\n *  Should be implemented in real time mode data visualisation\n * to setup data requirements\n */\nexport interface RealTimeChartComponentInterface{\n  initChartBar(...args:any):Chart\n  initScatter(...args:any):void\n  scatterData(...args:any):any\n  onChartsInit(...args:any):void\n  updateTimeSeries(...args:any):any\n  updateData(...args:any):any\n  OntimeSerieChartInit(...args:any):void\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartBarDataInterface.html":{"url":"interfaces/ChartBarDataInterface.html","title":"interface - ChartBarDataInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartBarDataInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/chart.ts\n        \n\n\n            \n                Description\n            \n            \n                chartbar data requirements type\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            datasets\n                                        \n                                \n                                \n                                        \n                                            labels\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        datasets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        datasets:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labels:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Chart } from \"chart.js/auto\"\nimport { CurrentValuesSchema } from \"./api/api.interface\"\n/**\n * used as type  of chart title\n */\nexport\ninterface chartTitle{\n  display:boolean\n  text:string\n  color:string\n}\n/**\n * used as type of chart animation option\n */\nexport interface ChartAnimation{\n    tension: {\n      duration:number,\n      easing: string,\n      from: number,\n      to: number,\n      loop: boolean\n    }\n\n}\n/**\n * chartbar data requirements type\n */\nexport interface ChartBarDataInterface{\n\n    labels:string[]\n    datasets: Array\n  options: {\n    scales: {\n      y: {\n        beginAtZero: boolean,\n        min: number,\n        max: number\n      }\n    }\n  }\n\n\n}\n\n/**\n * Used in both diferred mode data visualisation and real time data\n * visualisation compenents as interface of methods to be implemented.\n */\nexport interface chartBuilder{\n  chartData():CurrentValuesSchema[]|any\n  updateScatter(...args:any):void\n}\n/**\n * Should be implemented in diferred mode data visualisation\n * to setup data requirements\n */\nexport interface DiferedComponentInterface{\n  barBasedChart(...args:any):void\n  scatterBasedChart(...args:any):void\n  builder(...args:any):any\n}\n\n\n/**\n *  Should be implemented in real time mode data visualisation\n * to setup data requirements\n */\nexport interface RealTimeChartComponentInterface{\n  initChartBar(...args:any):Chart\n  initScatter(...args:any):void\n  scatterData(...args:any):any\n  onChartsInit(...args:any):void\n  updateTimeSeries(...args:any):any\n  updateData(...args:any):any\n  OntimeSerieChartInit(...args:any):void\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChartsComponent.html":{"url":"components/ChartsComponent.html","title":"component - ChartsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChartsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/charts/charts.component.ts\n\n\n\n    \n        Description\n    \n    \n        \nChart component\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-charts\n            \n\n\n\n            \n                styleUrls\n                ./charts.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./charts.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                end\n                            \n                            \n                                selectedOption\n                            \n                            \n                                start\n                            \n                            \n                                today\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRange\n                            \n                            \n                                changeStation\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onchartOptionChange\n                            \n                            \n                                onSensorChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                chartBarVis\n                            \n                            \n                                scatters\n                            \n                            \n                                selectedStation\n                            \n                            \n                                sensors\n                            \n                            \n                                stations\n                            \n                            \n                                times\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                chartBarVisChange\n                            \n                            \n                                sensorChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/charts/charts.component.ts:57\n                            \n                        \n\n                \n                    \n                            We inject the\n*activatedRoute of Angular in our component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        activeRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                We inject the\n*activatedRoute of Angular in our component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chart\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'real-time-chart'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        chartBarVis\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scatters\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedStation\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SMART188'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sensors\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stations\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        times\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:35\n                            \n                        \n                \n                    \n                        \ninput properties are declared here\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'visualisation temps réel.'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:40\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        chartBarVisChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sensorChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:44\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeRange\n                        \n                    \n                \n            \n            \n                \nchangeRange(station: string, message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/charts/charts.component.ts:110\n                        \n                    \n\n\n            \n                \n                        executed when range got changed\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeStation\n                        \n                    \n                \n            \n            \n                \nchangeStation(ev: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/charts/charts.component.ts:84\n                        \n                    \n\n\n            \n                \n                        executed when staion got changed\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ev\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/charts/charts.component.ts:70\n                        \n                    \n\n\n            \n                \n                        exected once the component is loaded and subscibe to routing\n\nAngular queryParams\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onchartOptionChange\n                        \n                    \n                \n            \n            \n                \nonchartOptionChange(event: Event | any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/charts/charts.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSensorChange\n                        \n                    \n                \n            \n            \n                \nonSensorChange(event: Event | any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/charts/charts.component.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : moment().format('YYYY-MM-DD')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/charts/charts.component.ts:53\n                        \n                    \n\n            \n                \n                    the range end string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOption\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/charts/charts.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : moment().subtract(1,'days').format('YYYY-MM-DD')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/charts/charts.component.ts:49\n                        \n                    \n\n            \n                \n                    the range start string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Default value : moment().format('YYYY-MM-DD')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/charts/charts.component.ts:57\n                        \n                    \n\n            \n                \n                    the date of the day\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport * as moment from 'moment';\nimport { SweetAlert } from 'sweetalert/typings/core';\n/**\n * Declare require as a const and type any\n */\ndeclare const require:any\n/**\n * we declare swal as var and type\n * *SweetAlert\n */\ndeclare var swal:SweetAlert\n/**\n * then we require swal\n */\nswal=require('sweetalert')\n/**\n ** Chart component\n *\n */\n@Component({\n  selector: 'app-charts',\n  templateUrl: './charts.component.html',\n  styleUrls: ['./charts.component.scss']\n})\n/**\n * The chart component\n * is call in both real time mode and diferred mode data visualisation component.\n */\nexport class ChartsComponent implements OnInit {\n/**\n ** input properties are declared here\n */\n@Input('times') times:any[]=[];\n@Input('scatters') scatters:any[]=[];\n@Input('stations') stations:any[]=[];\n@Input('chart') chart='real-time-chart'\n@Input('selectedStation') selected='SMART188'\n@Input('title') title='visualisation temps réel.'\n@Input('chartBarVis') chartBarVis:any=null\n@Input('sensors') sensors:any=null\n@Output('chartBarVisChange') chatBarVisChange= new EventEmitter()\n@Output('sensorChange') sensorChange = new EventEmitter()\nselectedOption:any=null\n/**\n * the range start string\n */\nstart:string=moment().subtract(1,'days').format('YYYY-MM-DD')\n/**\n *the range end string\n */\nend:string=moment().format('YYYY-MM-DD')\n/**\n * the date of the day\n */\ntoday=moment().format('YYYY-MM-DD')\n/**\n *\n * @param activeRoute\n * We inject the\n * *activatedRoute of Angular in our component\n */\nconstructor(private readonly activeRoute:ActivatedRoute) { }\n\n/**\n * exected once the component is loaded and subscibe to routing\n * * Angular queryParams\n */\n  ngOnInit(): void {\n    this.activeRoute.queryParams.subscribe((param:any)=>{\n      const {start,end,station}=param\n      start?this.start=start:null;\n      end?this.end=end:null;\n      station?this.selected=station:null\n    })\n  }\n\n\n/**\n *executed when staion got changed\n * @param ev\n */\n  changeStation(ev:any){\n  const station =ev?.target.value;\n  if(station){\n    if(moment(this.end).format('YYYY-MM-DD')!=moment().subtract(1,'days').format('YYYY-MM-DD')||moment(this.start).format('YYYY-MM-DD')!=this.today){\n     this.changeRange(station,'vous allez changer la plage de temps et la station des capteurs.')\n    }else{\n\n      swal({\n        text:'vous allez changer de station de capteur',\n        icon:'warning',\n        buttons: {\n         cancel: true,\n         confirm: true,\n       }\n     }).then(res=>{\n     res?location.href=`${'/visualisation/diferred?station'}=${station}`:null\n     })\n    }\n  }\n}\n\n/**\n *executed when range got changed\n * @param station\n * @param message\n */\nchangeRange(station:string='',message=''){\n  if(moment(this.end).format('YYYY-MM-DD')!=moment().subtract(1,'days').format('YYYY-MM-DD')||moment(this.start).format('YYYY-MM-DD')!=this.today){\n\n    const diff= moment(this.end).diff(moment(this.start),'days')\n\n    diff{this.end=moment(this.end).add(Math.abs(diff),'days').format('YYYY-MM-DD');this.start=moment(this.start).subtract(Math.abs(diff),'days').format('YYYY-MM-DD') })():null\n\n    if(diff{\n      if(resp){\n       station?location.href=`${'/visualisation/diferred?station'}=${station}&&start=${moment(this.start).format('YYYY-MM-DD')}&&end=${moment(this.end).format('YYYY-MM-DD')}`:location.href=`${'/visualisation/diferred?station'}=${this.selected}&&start=${moment(this.start).format('YYYY-MM-DD')}&&end=${moment(this.end).format('YYYY-MM-DD')}`\n      }\n    })\n  }else{\n    swal({\n      icon:'error',\n      text:'le nombre de jours ne doit pas exceder 30 jours.'\n    })\n  }\n\n  }\n}\n\n\nonchartOptionChange(event:Event|any)\n{\n this.chatBarVisChange.emit(event.target?.value)\n}\n\nonSensorChange(event:Event|any){\n   this.sensorChange.emit(event.target.value)\n}\n}\n\n    \n\n    \n        \n  {{title}}\n\n  \n    \n      \n        Début\n       \n      \n      \n    \n\n    \n      \n        Fin\n     \n\n      \n      \n    \n\n    \n      \n        Stations\n        \n          {{item.station}}\n        \n      \n      \n    \n\n\n  \n   \n   \n    \n      {{item.label}}\n    \n  \n  \n\n    \n   \n\n   \n     \n    \n\n    \n\n    \n      \n        {{item.sensor}}\n      \n     \n\n    \n\n      \n     \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./charts.component.scss\n                \n                \n.title{\n  position: relative;\n  top: 6px;\n  left: auto;\n  text-transform: uppercase;\n  margin-bottom: 10px;\n  text-align: center;\n  text-decoration: underline;\n\n}\n\n\n#charbarp{\n  position:relative;\n  background-color: #105192;\n\n}\n#scattersensor{\n  position:relative;\n // background-color: #105192;\n\n}\n\n.content {\n  margin: 82px auto 32px;\n  padding: 0 1px;\n  max-width: 980px;\n  align-items: center;\n}\n\nsvg.material-icons {\n  height: 24px;\n  width: auto;\n}\n\nsvg.material-icons:not(:last-child) {\n  margin-right: 8px;\n}\n\n.card svg.material-icons path {\n  fill: #888;\n}\n\n.card-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: 16px;\n}\n\n\n.card a{\n  color: white;\n}\n\n.card {\n  all: unset;\n  border-radius: 4px;\n  border: 1px solid #eee;\n // background-color: #280df5;\n  color: rgb(75, 9, 207);\n  height: 40px;\n  width: 200px;\n  margin: 0 8px 16px;\n  padding: 16px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  transition: all 0.2s ease-in-out;\n  line-height: 24px;\n}\n\n.card-container .card:not(:last-child) {\n  margin-right: 0;\n}\n\n.card.card-small {\n  height: 16px;\n  width: 168px;\n}\n\n.card-container .card:not(.highlight-card) {\n  cursor: pointer;\n}\n\n.card-container .card:not(.highlight-card):hover {\n  transform: translateY(-3px);\n  box-shadow: 0 4px 17px rgba(0, 0, 0, 0.35);\n}\n\n.card-container .card:not(.highlight-card):hover .material-icons path {\n  fill: rgb(105, 103, 103);\n}\n\n.card.highlight-card {\n  background-color: #1976d2;\n  color: white;\n  font-weight: 600;\n  border: none;\n  width: auto;\n  min-width: 30%;\n  position: relative;\n}\n\n.card.card.highlight-card span {\n  margin-left: 60px;\n}\n\n\n\na,\na:visited,\na:hover {\n  color: #1976d2;\n  text-decoration: none;\n}\n\na:hover {\n  color: #125699;\n}\n\n\n.btn-primary{\nbackground-color: #0b043f;\nborder-radius: none;\n}\n\n.btn{\nborder-radius: none;\n}\n\n\n@media screen and (max-width: 767px) {\n  .card-container > *:not(.circle-link) ,\n\n\n  .card:not(.highlight-card) {\n    height: 16px;\n    margin: 8px 0;\n  }\n\n  .card.highlight-card span {\n    margin-left: 72px;\n  }\n\n\n}\n\nselect{\n  background-color: #0b043f;\n  color: white;\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{title}}                    Début                                         Fin                                       Stations                  {{item.station}}                                          {{item.label}}                                                 {{item.sensor}}                          '\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChartsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurrentValuesSchema.html":{"url":"interfaces/CurrentValuesSchema.html","title":"interface - CurrentValuesSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CurrentValuesSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/api/api.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                used as return type of api calls for getting cirrent stations values\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            station_name\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                        \n                                            values\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        station_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        values:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\n/**\n * used as return type of api calls for getting cirrent stations values\n */\nexport interface CurrentValuesSchema{\n    station_name: string,\n    timestamp: string,\n    values:Array\n\n}\n/**\n * used as type of the return values of calling api to retrieve stations' information\n */\nexport interface SessionInfoSchema{\n  station: string,\n  description: string,\n  sessiond_id: number,\n  integrated_sensors: Array\n}\n\n/**\n * this is typicaly for difered mode data retrieving the api call should return data as type this interface.\n */\nexport interface RangeDataSchema{\n  raw_data:Array\n  station:string\n}\n\n/**\n * this interface represents data type of api calls to retrieve the last transmission status of given station\n */\nexport interface LatestTransmissionsResponseScema\n  {\n    last_transmission_utc: string,\n    latitude: string,\n    longitude: number,\n    station_id: number,\n    station_name: string\n  }\n\n  /**\n   * Here is the api interface\n   * we gather here all the different api call usecases\n   */\nexport interface ApiInterface {\n  getCurrentValues(stationName:string):Observable\n  getSessionInfo(projectName:string):Observable>\n  getRange(station:string,start:string,end:string):Observable\n  getHourlyAvg(station:string,start:string,end:string):Observable\n  getLatestTransmissionStatus(stationId:number):Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiferedComponentInterface.html":{"url":"interfaces/DiferedComponentInterface.html","title":"interface - DiferedComponentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DiferedComponentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/chart.ts\n        \n\n\n            \n                Description\n            \n            \n                Should be implemented in diferred mode data visualisation\nto setup data requirements\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        barBasedChart\n                                    \n                                \n                                \n                                    \n                                        builder\n                                    \n                                \n                                \n                                    \n                                        scatterBasedChart\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        barBasedChart\n                        \n                    \n                \n            \n            \n                \nbarBasedChart(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        builder\n                        \n                    \n                \n            \n            \n                \nbuilder(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterBasedChart\n                        \n                    \n                \n            \n            \n                \nscatterBasedChart(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Chart } from \"chart.js/auto\"\nimport { CurrentValuesSchema } from \"./api/api.interface\"\n/**\n * used as type  of chart title\n */\nexport\ninterface chartTitle{\n  display:boolean\n  text:string\n  color:string\n}\n/**\n * used as type of chart animation option\n */\nexport interface ChartAnimation{\n    tension: {\n      duration:number,\n      easing: string,\n      from: number,\n      to: number,\n      loop: boolean\n    }\n\n}\n/**\n * chartbar data requirements type\n */\nexport interface ChartBarDataInterface{\n\n    labels:string[]\n    datasets: Array\n  options: {\n    scales: {\n      y: {\n        beginAtZero: boolean,\n        min: number,\n        max: number\n      }\n    }\n  }\n\n\n}\n\n/**\n * Used in both diferred mode data visualisation and real time data\n * visualisation compenents as interface of methods to be implemented.\n */\nexport interface chartBuilder{\n  chartData():CurrentValuesSchema[]|any\n  updateScatter(...args:any):void\n}\n/**\n * Should be implemented in diferred mode data visualisation\n * to setup data requirements\n */\nexport interface DiferedComponentInterface{\n  barBasedChart(...args:any):void\n  scatterBasedChart(...args:any):void\n  builder(...args:any):any\n}\n\n\n/**\n *  Should be implemented in real time mode data visualisation\n * to setup data requirements\n */\nexport interface RealTimeChartComponentInterface{\n  initChartBar(...args:any):Chart\n  initScatter(...args:any):void\n  scatterData(...args:any):any\n  onChartsInit(...args:any):void\n  updateTimeSeries(...args:any):any\n  updateData(...args:any):any\n  OntimeSerieChartInit(...args:any):void\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DiferredDataChartComponent.html":{"url":"components/DiferredDataChartComponent.html","title":"component - DiferredDataChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DiferredDataChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/diferred-data-chart/diferred-data-chart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                    chartBuilder\n                    DiferedComponentInterface\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-diferred-data-chart\n            \n\n\n\n            \n                styleUrls\n                ./diferred-data-chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./diferred-data-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                chartbarvisualisation\n                            \n                            \n                                chartPageTitle\n                            \n                            \n                                data\n                            \n                            \n                                ranges\n                            \n                            \n                                scatterChart\n                            \n                            \n                                scatters\n                            \n                            \n                                scatterSensors\n                            \n                            \n                                selectedStation\n                            \n                            \n                                sensors\n                            \n                            \n                                stations\n                            \n                            \n                                stationsInfo\n                            \n                            \n                                timeData\n                            \n                            \n                                timer\n                            \n                            \n                                times\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                barBasedChart\n                            \n                            \n                                    Async\n                                builder\n                            \n                            \n                                changeChartBarVisOption\n                            \n                            \n                                chartData\n                            \n                            \n                                clearTimer\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onSensorChange\n                            \n                            \n                                scatterBasedChart\n                            \n                            \n                                updateScatter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usecases: DiferredModeUsecases, activeRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usecases\n                                                  \n                                                        \n                                                                        DiferredModeUsecases\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activeRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        barBasedChart\n                        \n                    \n                \n            \n            \n                \nbarBasedChart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:249\n                        \n                    \n\n\n            \n                \n                        this method is used to build the chart bar\nthat showcases the distribution of data according to different sensors.\nYou ma change it to show the distribution of sensors' data according  to unit and timeStamp\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                        \n                    builder(st: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:87\n                        \n                    \n\n\n            \n                \n                        this method is called once the component is loaded\nit makes an api call to retrieve required data according to given parameters\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                st\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeChartBarVisOption\n                        \n                    \n                \n            \n            \n                \nchangeChartBarVisOption(item: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartData\n                        \n                    \n                \n            \n            \n                \nchartData(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:127\n                        \n                    \n\n\n            \n                \n                        when it calls it handle data structure required for the different graphs\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearTimer\n                        \n                    \n                \n            \n            \n                \nclearTimer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSensorChange\n                        \n                    \n                \n            \n            \n                \nonSensorChange(item: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterBasedChart\n                        \n                    \n                \n            \n            \n                \nscatterBasedChart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:299\n                        \n                    \n\n\n            \n                \n                        Here we have the scatter based chart.\nIt takes randomly one variable (sensor) and builds a scatter chart.\nIt make the a correlation between the given sensor and the others in term of value\nalign with the same unit and data transmission timeStamp\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateScatter\n                        \n                    \n                \n            \n            \n                \nupdateScatter(sensor: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:190\n                        \n                    \n\n\n            \n                \n                        this method selecte randomly a sensor to update the scatter graph\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                sensor\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart | any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartbarvisualisation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [{\n      label:\"Unité de mesure des capteurs\",\n      sensor:false,\n      selected:true\n    },\n     {\n       label:\"Capteurs\",\n       sensor:true,\n       selected:false\n    }]\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartPageTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Visualisation différée.'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:22\n                        \n                    \n\n            \n                \n                    class properties\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChartBarDataInterface | any\n\n                    \n                \n                \n                    \n                        Default value : {\n      labels: [],\n      datasets: [],\n    options: {\n      scales: {\n        y: {\n          beginAtZero: true,\n          min: 0,\n        }\n      }\n    }\n    }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n      start:moment().subtract(1,'days').format('YYYY-MM-DD'),\n      end:moment().format('YYYY-MM-DD')\n    }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterChart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart | any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatters\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterSensors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedStation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SMART188'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sensors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stationsInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SessionInfoSchema[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        times\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AQ54'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit ,Inject, OnDestroy} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport Chart from 'chart.js/auto';\nimport * as moment from 'moment';\nimport { DiferredModeUsecases, chartBardDataSets, getRandomRgb, groupBy, makeTitle, mapDiferedData, mapToLabels, stationDataLabels } from 'src/@core';\nimport {  ChartBarDataInterface, DiferedComponentInterface, SessionInfoSchema, chartBuilder } from 'src/domain';\n\n@Component({\n  selector: 'app-diferred-data-chart',\n  templateUrl: './diferred-data-chart.component.html',\n  styleUrls: ['./diferred-data-chart.component.scss']\n})\nexport class DiferredDataChartComponent implements OnInit,OnDestroy,chartBuilder,DiferedComponentInterface {\n\n    constructor(\n      @Inject('diferred:mode') private readonly usecases:DiferredModeUsecases,\n      private readonly activeRoute:ActivatedRoute,\n    ) { }\n/**\n * class properties\n */\n   chartPageTitle='Visualisation différée.'\n    scatters:string[]=[]\n    chartbarvisualisation=[{\n      label:\"Unité de mesure des capteurs\",\n      sensor:false,\n      selected:true\n    },\n     {\n       label:\"Capteurs\",\n       sensor:true,\n       selected:false\n    }]\n    scatterSensors:any=[];\n    times:string[]=[]\n    scatterChart:Chart|any=null\n    stationsInfo:SessionInfoSchema[]=[];\n    stations:any[]=[]\n    selectedStation:string='SMART188'\n    sensors:any=[]\n    ranges={\n      start:moment().subtract(1,'days').format('YYYY-MM-DD'),\n      end:moment().format('YYYY-MM-DD')\n    }\n    title = 'AQ54';\n    data:ChartBarDataInterface|any = {\n      labels: [],\n      datasets: [],\n    options: {\n      scales: {\n        y: {\n          beginAtZero: true,\n          min: 0,\n        }\n      }\n    }\n    }\n    chart:Chart|any;\n    timeData:any=[];\n    timer:any=null\n\n    async ngOnInit(): Promise{\n      this.activeRoute.queryParams.subscribe(async(param:any)=>{\n        const {station,start,end}=param\n        if(station && start && end){\n          this.ranges.end=end\n          this.ranges.start=start\n        this.builder(station)\n        }else{\n        station?this.builder(station):this.builder()\n        }\n      })\n\n\n    }\n\n    ngOnDestroy(): void {\n    this.clearTimer()\n    }\n\n  /**\n   *this method is called once the component is loaded\n  it makes an api call to retrieve required data according to given parameters\n  * @param st\n  */\n\n    async builder(st:string=''){\n    try{\n      if(st){\n        const {raw_data,station,sessionInfo:stationInfo} = await this.usecases.parallelExecution(st,this.ranges.start,this.ranges.end,this.title)\n        this.selectedStation=station;\n        this.stationsInfo =stationInfo;\n        this.stations=this.stationsInfo.map((item:SessionInfoSchema)=>({station:item.station,selected:item.station==this.selectedStation?true:false}));\n        const data:any= mapDiferedData(raw_data,this.stationsInfo[1].integrated_sensors);\n        this.chartData(data)\n      }else{\n        const {raw_data,station,sessionInfo}= await this.usecases.execute(this.ranges.start,this.ranges.end,this.title)\n        this.stationsInfo = sessionInfo\n        this.stations=this.stationsInfo.map((item:SessionInfoSchema,index:number)=>({station:item.station,selected:index==0}));\n        this.selectedStation=station;\n        const data:any= mapDiferedData(raw_data,this.stationsInfo[1].integrated_sensors);\n        this.chartData(data)\n      }\n\n      this.barBasedChart()\n      this.scatterBasedChart()\n        this.timer = setInterval(()=>{\n        this.updateScatter()\n      },50000)\n    }catch(err:any){\n      throw new Error(err.message)\n    }\n\n\n\n  }\n\nclearTimer(){\n  clearInterval(this.timer)\n\n}\n  /**\n   *when it calls it handle data structure required for the different graphs\n  * @param data\n  */\n\n  chartData(data:any=[]){\n\n    const labels= stationDataLabels(this.stationsInfo);\n    this.data.labels=labels;\n    const d= mapToLabels(data,labels);\n    const dt=chartBardDataSets(d);\n    this.data.datasets=dt;\n    this.timeData=dt;\n    this.timeData=this.timeData.map((item:any)=>({...item,group:Object.entries(groupBy(this.timeData,(t:any)=>t.unit)).map((e:any)=>({unit:e[0],values:e[1],label:item.label}))}))\n    const units:any[]=[];\n    this.timeData.forEach((item:any,index:any)=>{\n    const group=item.group.find((f:any)=>f.unit===item.unit&&!units.find(u=>u==f.unit))\n    const gp = item.group.find((g:any)=>g.unit===item.unit);\n    const xdata= gp?gp.values.find((v:any)=>v.label===item.label):null\n    const ydata = gp?gp.values.filter((v:any)=>v.label!=item.label && v.unit===item.unit):[]\n    const grp =groupBy(ydata,(g:any)=>g.label);\n  if(ydata.length&&xdata){\n  let xgroup:any=groupBy(xdata.dayValues,(d:any)=>d.x)\n  const obj=Object.entries(grp)\n  let y:any=obj.map((yd:any)=>({label:yd[0],ydata:groupBy(yd[1][0].dayValues,(f:any)=>f.x)}))\n  let dts:any=[]\n  Object.keys(xgroup).forEach((key:any)=>{\n    y.forEach((yd:any)=>{\n      xgroup[key].forEach((xd:any,id:number)=>{\n        dts.push({data:{y:yd.ydata[key][id].y,x:xd.y},label:`${yd.label}=f(${item.label})`})\n      })\n    })\n\n  })\n  item['dayVal']=groupBy(dts,(d:any)=>d.label)\n  }\n  units.push(group?.unit)\n  group?.values.forEach((v:any)=>{\n  item['gunit']=v.unit\n  item['dayData']?item['dayData']=item['dayData'].concat(v.dayValues):item['dayData']=v.dayValues;\n  item['monthData']?item['monthData']=item['monthData'].concat(v.monthDays):item['monthData']=v.monthDays\n  })\n  })\n\n  }\n\nchangeChartBarVisOption(item:any){\n // console.log(item)\n  if(item){\n //const config=  this.barBasedChart()\n\n  }\n // console.log(this.timeData,this.chart)\n}\n\n\nonSensorChange(item:any){\nif(item){\nthis.updateScatter(item)\nthis.clearTimer()\n }\n}\n\n\n  /**\n   * this method selecte randomly a sensor to update the scatter graph\n   *\n   */\n  updateScatter(sensor:string=''){\n    const dt = this.timeData.filter((item:any)=>item.dayVal)\n    const d=!sensor?dt[Math.floor(Math.random()*(dt.length-1))]:dt.find((s:any)=>s.label==sensor)\n    if(d){\n      const scatterConfig:any= {\n        type: 'scatter',\n        data:{\n          datasets:Object.entries(d.dayVal).map((item:any)=>{\n              const data= item[1].map((dt:any)=>({...dt.data}))\n              return {data,label:item[0]}\n          }),\n          backgroundColor:getRandomRgb(),\n        },\n        options: {\n          responsive:true,\n          plugins:{\n            legend: {\n              position: 'top',\n            },\n            title: makeTitle(`Correlation entre les donnés d'un capteur pris dans ${this.selectedStation} et le reste des capteurs selon l'unité de mesure ${d.unit}. et le temps de transmission des données.`)\n          },\n          scales:{\n            y:{\n              type:'linear',\n              beginAtZero: true,\n              title:makeTitle(`autres capteurs(${d.unit})`, getRandomRgb()),\n              position:'left',\n              ticks: {\n                color: getRandomRgb()\n              },\n\n            },\n            x:{\n              type:'linear',\n              position:'bottom',\n              beginAtZero: true,\n              title:makeTitle(`${d.label}(${d.unit})`,getRandomRgb()),\n              ticks: {\n                color: getRandomRgb()\n              },\n            },\n\n          }\n      }\n      }\n      this.scatterChart.options=scatterConfig.options\n      this.scatterChart.data=scatterConfig.data\n      this.scatterChart.update()\n    }\n\n\n    }\n\n  /**\n   * this method is used to build the chart bar\n   * that showcases the distribution of data according to different sensors.\n   * You ma change it to show the distribution of sensors' data according  to unit and timeStamp\n   *\n   */\n  barBasedChart(){\n  try{\n    const diffRange=moment(this.ranges.end).diff(moment(this.ranges.start),'days')>=30\n    const startTime=moment(this.ranges.start).toLocaleString().split(' ')\n    var x0=`${startTime[1]}/${startTime[3]}`\n    !diffRange?x0=`${startTime[2]}/${startTime[1]}`:null\n    const config:any=\n    {\n    type: 'bar',\n    data: {\n        datasets:this.timeData.filter((f:any)=>f.gunit).map((data:any)=>(\n          {\n            data:diffRange?data.monthData:data.dayData,\n            backgroundColor:getRandomRgb(),\n            borderColor:getRandomRgb(),\n            label:`${data.gunit}`,\n            fill:false,\n            tension:0.8\n        }\n        ))\n    },\n    options: {\n      responsive:true,\n      plugins:{\n        legend: {\n          position: 'top',\n        },\n        title: makeTitle(`Distribution temporelle des données selon le type de capteur  dans la station ${this.selectedStation}`)\n      },\n      scales: {\n          x: {\n              min:x0\n          }\n      }\n  }\n  }\n  !this.chart?this.chart=new Chart('chart',config):null\n  return config\n  }catch(err:any){\n  throw new Error(err.message)\n  }\n\n  }\n\n  /**\n   * Here we have the scatter based chart.\n   * It takes randomly one variable (sensor) and builds a scatter chart.\n   * It make the a correlation between the given sensor and the others in term of value\n   * align with the same unit and data transmission timeStamp\n   */\n  scatterBasedChart(){\n    const dt = this.timeData.filter((item:any)=>item.dayVal)\n    const d=dt[Math.floor(Math.random()*(dt.length-1))]\n    this.scatterSensors.push({sensor:d.label,selected:true})\n    this.scatterSensors=this.scatterSensors.concat(dt.filter((f:any)=>f.label!=d.label).map((sc:any)=>({sensor:sc.label,selected:false})))\n    if(d){\n      const scatterConfig:any= {\n        type: 'scatter',\n        data:{\n          datasets:Object.entries(d.dayVal).map((item:any)=>{\n              const data= item[1].map((dt:any)=>({...dt.data}))\n              return {data,label:item[0]}\n          }),\n\n          backgroundColor:getRandomRgb(),\n\n        },\n        options: {\n          responsive:true,\n          plugins:{\n            legend: {\n              position: 'top',\n            },\n\n            title:makeTitle(`Correlation entre les donnés d'un capteur pris de façon aleatoire dans ${this.selectedStation} et le reste des capteurs selon l'unité de mesure ${d.unit}. et le temps de transmission des données.`)\n          },\n          scales:{\n            y:{\n              type:'linear',\n              beginAtZero: true,\n              title:makeTitle(`autres capteurs(${d.unit})`,getRandomRgb()),\n              position:'left',\n              ticks: {\n                color: getRandomRgb()\n              },\n\n            },\n            x:{\n              type:'linear',\n              position:'bottom',\n              beginAtZero: true,\n              title:makeTitle(`${d.label}(${d.unit})`,getRandomRgb()),\n              ticks: {\n                color: getRandomRgb()\n              },\n            },\n\n          }\n      }\n      }\n      this.scatters.push('sc')\n      setTimeout(()=>{\n      this.scatterChart= new Chart('sc',scatterConfig)\n      },1000)\n    }\n  }\n\n\n\n\n\n\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n                \n                    ./diferred-data-chart.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DiferredDataChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiferredModeUsecases.html":{"url":"injectables/DiferredModeUsecases.html","title":"injectable - DiferredModeUsecases","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiferredModeUsecases\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/UseCases/diferred-mode-usecases.ts\n        \n\n\n            \n                Description\n            \n            \n                This class handles api calls for diferred mode data visualisation\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Async\n                                parallelExecution\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiInterface)\n                    \n                \n                        \n                            \n                                Defined in src/UseCases/diferred-mode-usecases.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(start: string, end: string, projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/diferred-mode-usecases.ts:52\n                        \n                    \n\n\n            \n                \n                        Here we are fetching the sessions information in order to pick randomly a station and request needed data for the  usecase.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Here we are fetching the sessions information in order to pick randomly a station and request needed data for the  usecase.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        parallelExecution\n                        \n                    \n                \n            \n            \n                \n                        \n                    parallelExecution(stationName: string, start: string, end: string, projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/diferred-mode-usecases.ts:31\n                        \n                    \n\n\n            \n                \n                         we know the station so we can make api call in parallel to retrieve needed information for that usecase.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                stationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                     we know the station so we can make api call in parallel to retrieve needed information for that usecase.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { ApiInterface, RangeDataSchema, SessionInfoSchema } from \"src/domain\";\nexport interface parallelExecutionResponseType{\n  raw_data:RangeDataSchema['raw_data']\n  station:string\n  sessionInfo:SessionInfoSchema[]\n}\n\n/**\n * This class handles api calls for diferred mode data visualisation\n *\n */\n@Injectable({providedIn:'root'})\nexport class DiferredModeUsecases {\n\n  /**\n   *\n   * @param api\n   */\n  constructor(@Inject('api') private readonly api:ApiInterface){}\n  /**\n   *\n   * @param stationName\n   * @param start\n   * @param end\n   * @param projectName\n   *  we know the station so we can make api call in parallel to retrieve needed information for that usecase.\n   * @returns\n   */\n\n async parallelExecution(stationName:string='',start:string,end:string,projectName:string):Promise{\n    try{\n      const [{raw_data,station},sessionInfo] = await Promise.all([\n        await this.api.getRange(stationName,start,end).toPromise(),\n        await this.api.getSessionInfo(projectName).toPromise()\n      ])\n    return {raw_data,station,sessionInfo}\n    }catch(err:any){\n     throw new Error(err.message)\n    }\n  }\n\n\n  /**\n   *\n   * @param start\n   * @param end\n   * @param projectName\n   * Here we are fetching the sessions information in order to pick randomly a station and request needed data for the  usecase.\n   */\n\n  async execute(start:string,end:string,projectName:string){\n    try{\n    const sessionInfo = await this.api.getSessionInfo(projectName).toPromise()\n    const {raw_data,station} = await this.api.getRange(sessionInfo[Math.floor(Math.random()*(sessionInfo.length-1))].station,start,end).toPromise()\n    return {raw_data,station,sessionInfo}\n\n  }catch(err:any){\n      throw new Error(err.message)\n    }\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeaturesModule.html":{"url":"modules/FeaturesModule.html","title":"module - FeaturesModule","body":"\n                   \n\n\n\n\n    Modules\n    FeaturesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeaturesModule\n\n\n\ncluster_FeaturesModule_imports\n\n\n\ncluster_FeaturesModule_declarations\n\n\n\n\nDiferredDataChartComponent\n\nDiferredDataChartComponent\n\n\n\nFeaturesModule\n\nFeaturesModule\n\nFeaturesModule -->\n\nDiferredDataChartComponent->FeaturesModule\n\n\n\n\n\nRealTimeChartComponent\n\nRealTimeChartComponent\n\nFeaturesModule -->\n\nRealTimeChartComponent->FeaturesModule\n\n\n\n\n\nFeaturesRoutingModule\n\nFeaturesRoutingModule\n\nFeaturesModule -->\n\nFeaturesRoutingModule->FeaturesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nFeaturesModule -->\n\nSharedModule->FeaturesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/features.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Features Module\nit's considered as submodule of the main module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DiferredDataChartComponent\n                        \n                        \n                            RealTimeChartComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeaturesRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RealTimeChartComponent } from './real-time-chart/real-time-chart.component';\nimport { DiferredDataChartComponent } from './diferred-data-chart/diferred-data-chart.component';\nimport { FeaturesRoutingModule } from './features-routing.module';\nimport { SharedModule } from '../shared';\n\n/**\n * Features Module\n * it's considered as submodule of the main module\n */\n@NgModule({\n    declarations: [\n        RealTimeChartComponent,\n        DiferredDataChartComponent\n    ],\n    imports: [\n        CommonModule,\n        FeaturesRoutingModule,\n        SharedModule\n    ],\n    schemas:[CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class FeaturesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeaturesRoutingModule.html":{"url":"modules/FeaturesRoutingModule.html","title":"module - FeaturesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FeaturesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/features-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DiferredDataChartComponent } from './diferred-data-chart/diferred-data-chart.component';\nimport { RealTimeChartComponent } from './real-time-chart/real-time-chart.component';\n\n/**\n * Here we set routing for features' components\n */\nconst routes: Routes = [\n{\n  component:DiferredDataChartComponent,\n  path:'diferred'\n},\n{\n  component:RealTimeChartComponent,\n  path:'real-time'\n}\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FeaturesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        *Footer component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  email:\"kouame.ndri1998@gmail.com\",\n  linkedIn:\"https://linkedin.com/in/kouamé-david-n-dri-1615a5186\"\n}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/footer/footer.component.ts:18\n                        \n                    \n\n            \n                \n                    We are just using that property to show user infomation in the footer component\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n/**\n * *Footer component\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\n/**\n * The footer component is placed at the bottom of the\n * main component and is aivaibled for every other components\n */\nexport class FooterComponent {\n/**\n * We are just using that property to show user infomation in the footer component\n */\nuser={\n  email:\"kouame.ndri1998@gmail.com\",\n  linkedIn:\"https://linkedin.com/in/kouamé-david-n-dri-1615a5186\"\n}\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n      {{user.email|lowercase}}\n  \n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                footer {\n  margin-top: 8px;\n  display: flex;\n  align-items: center;\n  line-height: 20px;\n  bottom: 0%;\n  position: fixed;\n  background: white !important;\n}\n\nfooter a {\n  display: flex;\n  align-items: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{user.email|lowercase}}  '\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        \nHeader component\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                docUrl\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"AQ54\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/header/header.component.ts:20\n                            \n                        \n                \n                    \n                        take the title of the website as input\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        docUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.docsURL\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/header/header.component.ts:24\n                        \n                    \n\n            \n                \n                    property that contains the url to documentation website\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input} from '@angular/core';\nimport { environment } from 'src/environments/environment.prod';\n/**\n ** Header component\n */\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\n/**\n * Header component\n * is placed in the main component and work\n * for every sub component or sub module compenent\n */\nexport class HeaderComponent {\n/**\n * take the title of the website as input\n */\n@Input('title') title=\"AQ54\"\n/**\n * property that contains the url to documentation website\n */\ndocUrl=environment.docsURL\n}\n\n    \n\n    \n        \n  \n  {{title}}\n   \n   \n    Différée\n    Temps Réel\n    Docs\n   \n    \n    Mon CV\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .spacer {\n  flex: 1;\n}\n\n\na{\n  text-decoration: none;\n  margin: 6px;\n}\n\n\n.menu{\n  width: 800px;\n  position: relative;\n  left: 30px;\n}\n.toolbar {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  background: #010f1d !important;\n  color: white;\n  font-weight: 500;\n  padding-right: 15px;\n  margin-right: 15px;\n}\n\n.toolbar img {\n  margin: 0 16px;\n}\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{title}}          Différée    Temps Réel    Docs           Mon CV'\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IsLoadingService.html":{"url":"injectables/IsLoadingService.html","title":"injectable - IsLoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IsLoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/Preloader/is-loading.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Here the preload spinner service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                load\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/@core/Preloader/is-loading.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setLoading\n                        \n                    \n                \n            \n            \n                \nsetLoading(value)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/Preloader/is-loading.service.ts:23\n                        \n                    \n\n\n            \n                \n                        setup spinner value\n\ntrue\nor\nfalse\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        load\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/@core/Preloader/is-loading.service.ts:13\n                        \n                    \n\n            \n                \n                    Property used to setup spinner\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n/**\n * Here the preload spinner service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsLoadingService {\n/**\n * Property used to setup spinner\n */\npublic load : BehaviorSubject= new BehaviorSubject(false)\n\n  constructor() { }\n/**\n *setup spinner value\n ** true\n or\n ** false\n * @param value\n */\n  setLoading(value=false){\n    this.load.next(value)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LatestTransmissionsResponseScema.html":{"url":"interfaces/LatestTransmissionsResponseScema.html","title":"interface - LatestTransmissionsResponseScema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LatestTransmissionsResponseScema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/api/api.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                this interface represents data type of api calls to retrieve the last transmission status of given station\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            last_transmission_utc\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                                \n                                        \n                                            station_id\n                                        \n                                \n                                \n                                        \n                                            station_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        last_transmission_utc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_transmission_utc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        station_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        station_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\n/**\n * used as return type of api calls for getting cirrent stations values\n */\nexport interface CurrentValuesSchema{\n    station_name: string,\n    timestamp: string,\n    values:Array\n\n}\n/**\n * used as type of the return values of calling api to retrieve stations' information\n */\nexport interface SessionInfoSchema{\n  station: string,\n  description: string,\n  sessiond_id: number,\n  integrated_sensors: Array\n}\n\n/**\n * this is typicaly for difered mode data retrieving the api call should return data as type this interface.\n */\nexport interface RangeDataSchema{\n  raw_data:Array\n  station:string\n}\n\n/**\n * this interface represents data type of api calls to retrieve the last transmission status of given station\n */\nexport interface LatestTransmissionsResponseScema\n  {\n    last_transmission_utc: string,\n    latitude: string,\n    longitude: number,\n    station_id: number,\n    station_name: string\n  }\n\n  /**\n   * Here is the api interface\n   * we gather here all the different api call usecases\n   */\nexport interface ApiInterface {\n  getCurrentValues(stationName:string):Observable\n  getSessionInfo(projectName:string):Observable>\n  getRange(station:string,start:string,end:string):Observable\n  getHourlyAvg(station:string,start:string,end:string):Observable\n  getLatestTransmissionStatus(stationId:number):Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OninitResponseSchema.html":{"url":"interfaces/OninitResponseSchema.html","title":"interface - OninitResponseSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OninitResponseSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/UseCases/real-time-use-cases.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface that is use as type for api call response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sessionInfo\n                                        \n                                \n                                \n                                        \n                                            stations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sessionInfo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionInfo:         SessionInfoSchema[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SessionInfoSchema[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stations:         CurrentValuesSchema[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CurrentValuesSchema[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport * as moment from \"moment\";\nimport { ApiInterface, CurrentValuesSchema, SessionInfoSchema } from \"src/domain\";\n\n/**\n * Interface that is use as type for api call response\n */\nexport interface OninitResponseSchema{\n  stations:CurrentValuesSchema[],\n  sessionInfo:SessionInfoSchema[]\n}\n\n\n/**\n * This class handles api calls for real time mode data visualisation\n *\n */\n\n@Injectable({providedIn:'root'})\nexport class RealTimeUseCases {\n  /**\n   *\n   * @param api\n   */\n  constructor(@Inject('api') private readonly api:ApiInterface){}\n/**\n *\n * @param projectName\n * @returns\n *   we retrieve needed data to start the realtime visualisation by fetching the current values of different sensors from all staions.\n\n */\n async Oninit(projectName:string):Promise{\ntry{\n  const sessionInfo= await this.api.getSessionInfo(projectName).toPromise();\n  const stations = await Promise.all(sessionInfo.map(async(station:SessionInfoSchema)=>await this.api.getCurrentValues(station.station).toPromise()));\n  return {stations,sessionInfo};\n}catch(err:any)\n{\n  throw new Error(err.message)\n}\n\n  }\n\n  /**\n   *Once a change is detected in a station we run api  call to get the latest values of the sensors in that station.\n    Doing that helps us in optimising the api calls.\n   * @param station\n    @returns\n   */\n async OnUpdate(station:string):Promise{\n  try{\n   return await this.api.getCurrentValues(station).toPromise()\n  }catch(err:any){\n   throw new Error(err.message)\n  }\n  }\n\n/**\n *we are fetching the latest transmission time in order to retrive the data of the give station.\n * @param sessionId\n * @returns\n */\n\n async canUpdate(sessionId:number):Promise{\n  try{\n    const response=await this.api.getLatestTransmissionStatus(sessionId).toPromise()\n\n      /** Here we retrieve the last transmission utc datetime */\n    const {last_transmission_utc} = response\n    const transTime= moment(last_transmission_utc);\n    const now=moment()\n    /**\n     * we compare that datetime to the caurrent datetime if both match then we enable api call for new entries then we disbale the call\n     */\n    const value= now.diff(transTime,'minutes',true)==0&&last_transmission_utc?true:true // unfortunately this will allways be true because the api does not return valid data so we decided to make it always true.\n    return value\n  }catch(err:any){\n    throw new Error(err.message)\n  }\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RangeDataSchema.html":{"url":"interfaces/RangeDataSchema.html","title":"interface - RangeDataSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RangeDataSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/api/api.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                this is typicaly for difered mode data retrieving the api call should return data as type this interface.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            raw_data\n                                        \n                                \n                                \n                                        \n                                            station\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        raw_data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        raw_data:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        station\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\n/**\n * used as return type of api calls for getting cirrent stations values\n */\nexport interface CurrentValuesSchema{\n    station_name: string,\n    timestamp: string,\n    values:Array\n\n}\n/**\n * used as type of the return values of calling api to retrieve stations' information\n */\nexport interface SessionInfoSchema{\n  station: string,\n  description: string,\n  sessiond_id: number,\n  integrated_sensors: Array\n}\n\n/**\n * this is typicaly for difered mode data retrieving the api call should return data as type this interface.\n */\nexport interface RangeDataSchema{\n  raw_data:Array\n  station:string\n}\n\n/**\n * this interface represents data type of api calls to retrieve the last transmission status of given station\n */\nexport interface LatestTransmissionsResponseScema\n  {\n    last_transmission_utc: string,\n    latitude: string,\n    longitude: number,\n    station_id: number,\n    station_name: string\n  }\n\n  /**\n   * Here is the api interface\n   * we gather here all the different api call usecases\n   */\nexport interface ApiInterface {\n  getCurrentValues(stationName:string):Observable\n  getSessionInfo(projectName:string):Observable>\n  getRange(station:string,start:string,end:string):Observable\n  getHourlyAvg(station:string,start:string,end:string):Observable\n  getLatestTransmissionStatus(stationId:number):Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RealTimeChartComponent.html":{"url":"components/RealTimeChartComponent.html","title":"component - RealTimeChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RealTimeChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/real-time-chart/real-time-chart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Real time data visualisation compenent\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                    chartBuilder\n                    RealTimeChartComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-real-time-chart\n            \n\n\n\n            \n                styleUrls\n                ./real-time-chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./real-time-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                data\n                            \n                            \n                                scatterChart\n                            \n                            \n                                scatters\n                            \n                            \n                                scatterSensors\n                            \n                            \n                                selectedSensor\n                            \n                            \n                                sensors\n                            \n                            \n                                stations\n                            \n                            \n                                time\n                            \n                            \n                                timeData\n                            \n                            \n                                times\n                            \n                            \n                                timesCahrt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                chartData\n                            \n                            \n                                initChartBar\n                            \n                            \n                                initScatter\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                onChartsInit\n                            \n                            \n                                    Async\n                                OntimeSerieChartInit\n                            \n                            \n                                scatterData\n                            \n                            \n                                    Async\n                                updateData\n                            \n                            \n                                    Async\n                                updateScatter\n                            \n                            \n                                    Async\n                                updateTimeSeries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usecases: RealTimeUseCases)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usecases\n                                                  \n                                                        \n                                                                        RealTimeUseCases\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        chartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    chartData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:253\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                set up data requirements for charts' config\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initChartBar\n                        \n                    \n                \n            \n            \n                \ninitChartBar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:84\n                        \n                    \n\n\n            \n                \n                        init chart bar chart config\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                ***chartbar instance\ninit chart bar chart config\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initScatter\n                        \n                    \n                \n            \n            \n                \ninitScatter(d: CurrentValuesSchema[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:100\n                        \n                    \n\n\n            \n                \n                        init the scatter chart config\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            CurrentValuesSchema[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:25\n                        \n                    \n\n\n            \n                \n                        clear the time interval once the component is destroyed\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:64\n                        \n                    \n\n\n            \n                \n                        call once the componentis loaded to initiate firts visualisation requirements.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onChartsInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onChartsInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:240\n                        \n                    \n\n\n            \n                \n                        init all  the charts\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        OntimeSerieChartInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    OntimeSerieChartInit(d: CurrentValuesSchema[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:341\n                        \n                    \n\n\n            \n                \n                        init time based chart config\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            CurrentValuesSchema[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterData\n                        \n                    \n                \n            \n            \n                \nscatterData(d: CurrentValuesSchema[], n: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:209\n                        \n                    \n\n\n            \n                \n                        build scatter data requirements\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            CurrentValuesSchema[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                n\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateData\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateData(s: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:275\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                s\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    update data by making api call\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateScatter\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateScatter(v: CurrentValuesSchema[], station: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                v\n                                            \n                                                            CurrentValuesSchema[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                            \n                                                    update scatter chart\n\n                                            \n                                        \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTimeSeries\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTimeSeries(d: CurrentValuesSchema, station: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:296\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            CurrentValuesSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    update time based chart config\n\n                                            \n                                        \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart | any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChartBarDataInterface | any\n\n                    \n                \n                \n                    \n                        Default value : {\n      labels: [],\n      datasets: [],\n      options: {\n      scales: {\n        y: {\n          beginAtZero: true,\n          min: 0,\n          max: 100\n        }\n      }\n    }\n\n    }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterChart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatters\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterSensors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedSensor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:32\n                        \n                    \n\n            \n                \n                    diffrent properties of the class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sensors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SessionInfoSchema[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        times\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timesCahrt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AQ54'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport Chart from 'chart.js/auto';\nimport {  chartBarDataSets, getRandomRgb, stationDataLabels, updateChartBarData,groupBy, RealTimeUseCases, makeTitle, makeAnimation } from '../../../@core';\nimport {  ChartBarDataInterface, CurrentValuesSchema, SessionInfoSchema, chartBuilder } from 'src/domain';\n\n/**\n * Real time data visualisation compenent\n */\n@Component({\n  selector: 'app-real-time-chart',\n  templateUrl: './real-time-chart.component.html',\n  styleUrls: ['./real-time-chart.component.scss']\n})\n/**\n *we implemented the different interfaces for the well being of this component.\n */\nexport class RealTimeChartComponent implements OnInit,OnDestroy,chartBuilder,RealTimeChartComponent {\n\n  constructor(\n    @Inject('realTime:mode') private readonly usecases:RealTimeUseCases,\n    ){}\n/**\n * clear the time interval once the component is destroyed\n */\n  ngOnDestroy(): void {\n    clearInterval(this.time)\n  }\n\n  /**\n   * diffrent properties of the class\n   */\n    selectedSensor:any\n    scatterSensors:any=[];\n    sensors:Array=[]\n\n    scatters:string[]=[]\n    scatterChart:any[]=[];\n    times:string[]=[]\n    timeData:any=[]\n    timesCahrt:any=[]\n    title = 'AQ54';\n    time:any=''\n    data:ChartBarDataInterface|any = {\n      labels: [],\n      datasets: [],\n      options: {\n      scales: {\n        y: {\n          beginAtZero: true,\n          min: 0,\n          max: 100\n        }\n      }\n    }\n\n    }\n    chart:Chart|any;\n    stations:SessionInfoSchema[]=[]\n\n/**\n * call once the componentis loaded to initiate firts visualisation requirements.\n */\n\n    async ngOnInit(): Promise {\n      try{\n        await  this.onChartsInit()\n       this.time= setInterval(async()=>{\n        this.stations.forEach(async(s:any)=>{\n          await this.usecases.canUpdate(s.sessiond_id)?this.updateData(s):null\n        })\n        },1000)\n      }catch(err:any){\n        throw new Error(err.message)\n      }\n\n    }\n\n    /**\n     *\n     * @returns ***chartbar instance\n     * init chart bar chart config\n     */\n\n    initChartBar(){\n      return new Chart('real-time-chart',{data:this.data,options:{\n        responsive:true,\n        maintainAspectRatio: true,\n        plugins:{\n          legend: {\n            position: 'top',\n          },\n          title: makeTitle('Distribution des données selon les types de capteurs par station.')\n        },\n      }})\n    }\n/**\n *init the scatter chart config\n * @param d\n */\n    initScatter(d:CurrentValuesSchema[]=[]){\n      var data =this.scatterData(d)\n      !data.length?data=this.scatterData(d,4):null\n     for(let sc=0;scthis.scatterChart.push({config,chart:new Chart((document.getElementById(this.scatters[sc]) as any),config)}),100)\n     }\n    }\n/**\n *\n * @param v update scatter chart\n * @param station\n */\n    async updateScatter(v:CurrentValuesSchema[]=[],station:string=''){\n     try{\n      let stationVal:CurrentValuesSchema[]=v\n      const data:any =this.scatterData(stationVal)\n    if(data.length){\n      const {chart}= this.scatterChart.find((sc:any)=>sc.config.station===station)\n      //console.log(chart.config.data,data)\n       chart.config.data.datasets.forEach((dt:any)=>{\n        const d=data[0].datasets.find((item:any)=>item.label===dt.label)\n        d?dt.data=dt.data.concat(d.data):null\n       });\n       chart.config.options=  {\n        responsive:true,\n        animations:makeAnimation(),\n        plugins:{\n          legend: {\n            position: 'top',\n          },\n          title:makeTitle(`Correlation entre les donnés d'un capteur pris de façon aleatoire dans ${data[0]?.station} et le reste des capteurs selon l'unité de mesure (${data[0]?.unit}).`)\n        },\n        scales:{\n          y:{\n            type:'linear',\n            position:'left',\n            beginAtZero: true,\n            title:makeTitle(`${data[0].sensors.join(',')}(${data[0].unit})`,getRandomRgb()),\n             ticks: {\n              color: getRandomRgb()\n            },\n\n          },\n          x:{\n            type: 'linear',\n             title:{\n               display:true,\n               text:`${data[0].sensor}(${data[0].unit})`\n             },\n            beginAtZero: true,\n            position:'bottom',\n            ticks: {\n              color: getRandomRgb()\n            },\n          },\n\n        }\n    }\n     chart.update()\n    }\n     }catch(err:any){\n      throw new Error(err.message)\n     }\n\n  }\n\n/**\n *build scatter data requirements\n * @param d\n * @param n\n * @returns\n */\n    scatterData(d:CurrentValuesSchema[],n:any=null){\n    let data:any=[]\n      const selectedSensor=this.selectedSensor?this.selectedSensor:this.sensors[n||Math.floor(Math.random()*(this.sensors.length-1))]\n\n        \n      if(selectedSensor)\n      d.forEach(item=>{\n        const values=item.values.filter(v=>!v.unit?null:v.unit.toLowerCase()===selectedSensor.unit?.toLowerCase() && v.sensor!=selectedSensor.type)\n        const selected=item.values.find(v=>v.sensor.toLowerCase()===selectedSensor.type.toLowerCase())\n        selected && values.length?data.push({\n          datasets:values.map(s=>({data:[{x:selected.value,y:s.value}],label:`${s.sensor}=f(${selected.sensor})`\n        })),\n        backgroundColor:getRandomRgb(),\n        station:item.station_name,\n        unit:selected?.unit,\n        sensor:selected.sensor,\n        sensors:values.map(s=>s.sensor)\n        }):null\n      })\n      let cnv=[]\n      for(let i=0;iu.label===s.station).forEach((item:any,index:number) => {\n         data.find((d:any)=>d.station==item.label)?item.data=data.find((d:any)=>d.station==item.label)?.data:this.chart.config.data.datasets.splice(index,1)\n        });\n        this.chart.update()\n        this.updateTimeSeries(stationData,s.station)\n        this.updateScatter([stationData],s.station)\n        }\n        catch(err:any){\n        throw new Error(err.message)\n      }\n    }\n\n    /**\n     *\n     * @param d update time based chart config\n     * @param station\n     */\n  async updateTimeSeries(d:CurrentValuesSchema,station:string){\n   const stationData:CurrentValuesSchema[]= [d]\n   let data:any=stationData.map(item=>({time:item.timestamp,station:item.station_name,values:groupBy(item.values,(v:any)=>v.unit)}));\n   const dt:any= data.map((item:any)=>({...item,values:Object.entries(item.values).map(e=>e[1])}))\n   const {chart} = this.timesCahrt.find((c:any)=>c.config.station===station)\n   const config:any=\n          {\n          type: 'bar',\n          time:dt[0].time,\n          data: {\n              datasets: dt[0].values.map((item:any)=>({\n                data:\n                  item.map((item:any)=>({y:item.value,x:dt[0].time})),\n                  label:`(${item[0].unit})`,\n                  backgroundColor:getRandomRgb(),\n\n              })\n              )\n          },\n          options: {\n            responsive:true,\n            plugins:{\n              legend: {\n                position: 'top',\n              },\n              title: makeTitle(`Distribution temporelle des données selon l'unité de mesure dans la station ${dt[0].station}`)\n\n            }\n\n        }\n        }\n          chart.config.options.plugins=config.options.plugins\n          //chart.config.options.scales.x.max=dt[0].time,\n         var update=false\n          config.data.datasets.forEach((dd:any)=>{\n           const its= chart.config.data.datasets.find((f:any)=>dd.label===f.label)\n           update= its&&!its.data.find((t:any)=>t.x===dt[0].time)?its.data.push(...dd.data):false\n          })\n          update?chart.update():null;\n  }\n\n  /**\n   *init time based chart config\n   * @param d\n   */\n   async OntimeSerieChartInit(d:CurrentValuesSchema[]){\n   const stationData:CurrentValuesSchema[]=d// await Promise.all(this.stations.map(async(s:SessionInfoSchema)=>await this.stattionCurrentVal.execute(s.station).toPromise()))\n\n   let data:any=stationData.map(item=>({time:item.timestamp,station:item.station_name,values:groupBy(item.values,(v:any)=>v.unit)}));\n\n   data=data.map((item:any)=>({...item,values:Object.entries(item.values).map(e=>e[1])}))\n\n   data.forEach((d:any,index:number)=>{\n   this.times.push(index+\"times\"+Date.now())\n    const config:any=\n      {\n      type: 'line',\n      time:d.time,\n      station:d.station,\n      data: {\n          datasets: d.values.map((item:any)=>({\n            data:\n              item.map((item:any)=>({y:item.value,x:d.time})),\n              label:`(${item[0].unit})`,\n              backgroundColor:getRandomRgb(),\n              borderColor:getRandomRgb(),\n              fill:false,\n              tension:0.8\n          })\n          )\n      },\n      options: {\n        responsive:true,\n        animations:makeAnimation(),\n        plugins:{\n          legend: {\n            position: 'top',\n          },\n          title: makeTitle(`Distribution temporelle des données selon l'unité de mesure dans la station ${d.station}`)\n        },\n        scales: {\n            x: {\n                min:d.time,\n            },\n            y:{\n              min:0\n            }\n        }\n    }\n\n    }\n    setTimeout(()=>{\n      let chart = new Chart(this.times[index],config);\n      this.timesCahrt.push({chart,config})\n        },1000)\n   })\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n\n\n    \n\n    \n                \n                    ./real-time-chart.component.scss\n                \n                \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RealTimeChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RealTimeChartComponentInterface.html":{"url":"interfaces/RealTimeChartComponentInterface.html","title":"interface - RealTimeChartComponentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RealTimeChartComponentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/chart.ts\n        \n\n\n            \n                Description\n            \n            \n                 Should be implemented in real time mode data visualisation\nto setup data requirements\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        initChartBar\n                                    \n                                \n                                \n                                    \n                                        initScatter\n                                    \n                                \n                                \n                                    \n                                        onChartsInit\n                                    \n                                \n                                \n                                    \n                                        OntimeSerieChartInit\n                                    \n                                \n                                \n                                    \n                                        scatterData\n                                    \n                                \n                                \n                                    \n                                        updateData\n                                    \n                                \n                                \n                                    \n                                        updateTimeSeries\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initChartBar\n                        \n                    \n                \n            \n            \n                \ninitChartBar(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Chart\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initScatter\n                        \n                    \n                \n            \n            \n                \ninitScatter(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChartsInit\n                        \n                    \n                \n            \n            \n                \nonChartsInit(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OntimeSerieChartInit\n                        \n                    \n                \n            \n            \n                \nOntimeSerieChartInit(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterData\n                        \n                    \n                \n            \n            \n                \nscatterData(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTimeSeries\n                        \n                    \n                \n            \n            \n                \nupdateTimeSeries(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Chart } from \"chart.js/auto\"\nimport { CurrentValuesSchema } from \"./api/api.interface\"\n/**\n * used as type  of chart title\n */\nexport\ninterface chartTitle{\n  display:boolean\n  text:string\n  color:string\n}\n/**\n * used as type of chart animation option\n */\nexport interface ChartAnimation{\n    tension: {\n      duration:number,\n      easing: string,\n      from: number,\n      to: number,\n      loop: boolean\n    }\n\n}\n/**\n * chartbar data requirements type\n */\nexport interface ChartBarDataInterface{\n\n    labels:string[]\n    datasets: Array\n  options: {\n    scales: {\n      y: {\n        beginAtZero: boolean,\n        min: number,\n        max: number\n      }\n    }\n  }\n\n\n}\n\n/**\n * Used in both diferred mode data visualisation and real time data\n * visualisation compenents as interface of methods to be implemented.\n */\nexport interface chartBuilder{\n  chartData():CurrentValuesSchema[]|any\n  updateScatter(...args:any):void\n}\n/**\n * Should be implemented in diferred mode data visualisation\n * to setup data requirements\n */\nexport interface DiferedComponentInterface{\n  barBasedChart(...args:any):void\n  scatterBasedChart(...args:any):void\n  builder(...args:any):any\n}\n\n\n/**\n *  Should be implemented in real time mode data visualisation\n * to setup data requirements\n */\nexport interface RealTimeChartComponentInterface{\n  initChartBar(...args:any):Chart\n  initScatter(...args:any):void\n  scatterData(...args:any):any\n  onChartsInit(...args:any):void\n  updateTimeSeries(...args:any):any\n  updateData(...args:any):any\n  OntimeSerieChartInit(...args:any):void\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RealTimeUseCases.html":{"url":"injectables/RealTimeUseCases.html","title":"injectable - RealTimeUseCases","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RealTimeUseCases\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/UseCases/real-time-use-cases.ts\n        \n\n\n            \n                Description\n            \n            \n                This class handles api calls for real time mode data visualisation\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canUpdate\n                            \n                            \n                                    Async\n                                Oninit\n                            \n                            \n                                    Async\n                                OnUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiInterface)\n                    \n                \n                        \n                            \n                                Defined in src/UseCases/real-time-use-cases.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canUpdate(sessionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/real-time-use-cases.ts:65\n                        \n                    \n\n\n            \n                \n                        we are fetching the latest transmission time in order to retrive the data of the give station.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        Oninit\n                        \n                    \n                \n            \n            \n                \n                        \n                    Oninit(projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/real-time-use-cases.ts:33\n                        \n                    \n\n\n            \n                \n                          we retrieve needed data to start the realtime visualisation by fetching the current values of different sensors from all staions.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                  we retrieve needed data to start the realtime visualisation by fetching the current values of different sensors from all staions.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        OnUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    OnUpdate(station: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/real-time-use-cases.ts:51\n                        \n                    \n\n\n            \n                \n                        Once a change is detected in a station we run api  call to get the latest values of the sensors in that station.\nDoing that helps us in optimising the api calls.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport * as moment from \"moment\";\nimport { ApiInterface, CurrentValuesSchema, SessionInfoSchema } from \"src/domain\";\n\n/**\n * Interface that is use as type for api call response\n */\nexport interface OninitResponseSchema{\n  stations:CurrentValuesSchema[],\n  sessionInfo:SessionInfoSchema[]\n}\n\n\n/**\n * This class handles api calls for real time mode data visualisation\n *\n */\n\n@Injectable({providedIn:'root'})\nexport class RealTimeUseCases {\n  /**\n   *\n   * @param api\n   */\n  constructor(@Inject('api') private readonly api:ApiInterface){}\n/**\n *\n * @param projectName\n * @returns\n *   we retrieve needed data to start the realtime visualisation by fetching the current values of different sensors from all staions.\n\n */\n async Oninit(projectName:string):Promise{\ntry{\n  const sessionInfo= await this.api.getSessionInfo(projectName).toPromise();\n  const stations = await Promise.all(sessionInfo.map(async(station:SessionInfoSchema)=>await this.api.getCurrentValues(station.station).toPromise()));\n  return {stations,sessionInfo};\n}catch(err:any)\n{\n  throw new Error(err.message)\n}\n\n  }\n\n  /**\n   *Once a change is detected in a station we run api  call to get the latest values of the sensors in that station.\n    Doing that helps us in optimising the api calls.\n   * @param station\n    @returns\n   */\n async OnUpdate(station:string):Promise{\n  try{\n   return await this.api.getCurrentValues(station).toPromise()\n  }catch(err:any){\n   throw new Error(err.message)\n  }\n  }\n\n/**\n *we are fetching the latest transmission time in order to retrive the data of the give station.\n * @param sessionId\n * @returns\n */\n\n async canUpdate(sessionId:number):Promise{\n  try{\n    const response=await this.api.getLatestTransmissionStatus(sessionId).toPromise()\n\n      /** Here we retrieve the last transmission utc datetime */\n    const {last_transmission_utc} = response\n    const transTime= moment(last_transmission_utc);\n    const now=moment()\n    /**\n     * we compare that datetime to the caurrent datetime if both match then we enable api call for new entries then we disbale the call\n     */\n    const value= now.diff(transTime,'minutes',true)==0&&last_transmission_utc?true:true // unfortunately this will allways be true because the api does not return valid data so we decided to make it always true.\n    return value\n  }catch(err:any){\n    throw new Error(err.message)\n  }\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SessionInfoSchema.html":{"url":"interfaces/SessionInfoSchema.html","title":"interface - SessionInfoSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SessionInfoSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/api/api.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                used as type of the return values of calling api to retrieve stations' information\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            integrated_sensors\n                                        \n                                \n                                \n                                        \n                                            sessiond_id\n                                        \n                                \n                                \n                                        \n                                            station\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        integrated_sensors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        integrated_sensors:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessiond_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessiond_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        station\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\n/**\n * used as return type of api calls for getting cirrent stations values\n */\nexport interface CurrentValuesSchema{\n    station_name: string,\n    timestamp: string,\n    values:Array\n\n}\n/**\n * used as type of the return values of calling api to retrieve stations' information\n */\nexport interface SessionInfoSchema{\n  station: string,\n  description: string,\n  sessiond_id: number,\n  integrated_sensors: Array\n}\n\n/**\n * this is typicaly for difered mode data retrieving the api call should return data as type this interface.\n */\nexport interface RangeDataSchema{\n  raw_data:Array\n  station:string\n}\n\n/**\n * this interface represents data type of api calls to retrieve the last transmission status of given station\n */\nexport interface LatestTransmissionsResponseScema\n  {\n    last_transmission_utc: string,\n    latitude: string,\n    longitude: number,\n    station_id: number,\n    station_name: string\n  }\n\n  /**\n   * Here is the api interface\n   * we gather here all the different api call usecases\n   */\nexport interface ApiInterface {\n  getCurrentValues(stationName:string):Observable\n  getSessionInfo(projectName:string):Observable>\n  getRange(station:string,start:string,end:string):Observable\n  getHourlyAvg(station:string,start:string,end:string):Observable\n  getLatestTransmissionStatus(stationId:number):Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nChartsComponent\n\nChartsComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nChartsComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nChartsComponent \n\nChartsComponent \n\nChartsComponent  -->\n\nSharedModule->ChartsComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Shared module\ncall in the needed module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChartsComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ChartsComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { ChartsComponent } from './charts/charts.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n/**\n * Shared module\n * call in the needed module\n */\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    ChartsComponent,\n    FooterComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule\n  ],\n  exports:[\n    HeaderComponent,\n    ChartsComponent,\n    FooterComponent\n  ]\n})\n\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/chartBuilder.html":{"url":"interfaces/chartBuilder.html","title":"interface - chartBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  chartBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/chart.ts\n        \n\n\n            \n                Description\n            \n            \n                Used in both diferred mode data visualisation and real time data\nvisualisation compenents as interface of methods to be implemented.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        chartData\n                                    \n                                \n                                \n                                    \n                                        updateScatter\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chartData\n                        \n                    \n                \n            \n            \n                \nchartData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     [] | any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateScatter\n                        \n                    \n                \n            \n            \n                \nupdateScatter(...args: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/chart.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Chart } from \"chart.js/auto\"\nimport { CurrentValuesSchema } from \"./api/api.interface\"\n/**\n * used as type  of chart title\n */\nexport\ninterface chartTitle{\n  display:boolean\n  text:string\n  color:string\n}\n/**\n * used as type of chart animation option\n */\nexport interface ChartAnimation{\n    tension: {\n      duration:number,\n      easing: string,\n      from: number,\n      to: number,\n      loop: boolean\n    }\n\n}\n/**\n * chartbar data requirements type\n */\nexport interface ChartBarDataInterface{\n\n    labels:string[]\n    datasets: Array\n  options: {\n    scales: {\n      y: {\n        beginAtZero: boolean,\n        min: number,\n        max: number\n      }\n    }\n  }\n\n\n}\n\n/**\n * Used in both diferred mode data visualisation and real time data\n * visualisation compenents as interface of methods to be implemented.\n */\nexport interface chartBuilder{\n  chartData():CurrentValuesSchema[]|any\n  updateScatter(...args:any):void\n}\n/**\n * Should be implemented in diferred mode data visualisation\n * to setup data requirements\n */\nexport interface DiferedComponentInterface{\n  barBasedChart(...args:any):void\n  scatterBasedChart(...args:any):void\n  builder(...args:any):any\n}\n\n\n/**\n *  Should be implemented in real time mode data visualisation\n * to setup data requirements\n */\nexport interface RealTimeChartComponentInterface{\n  initChartBar(...args:any):Chart\n  initScatter(...args:any):void\n  scatterData(...args:any):any\n  onChartsInit(...args:any):void\n  updateTimeSeries(...args:any):any\n  updateData(...args:any):any\n  OntimeSerieChartInit(...args:any):void\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/chartTitle.html":{"url":"interfaces/chartTitle.html","title":"interface - chartTitle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  chartTitle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/chart.ts\n        \n\n\n            \n                Description\n            \n            \n                used as type  of chart title\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            display\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Chart } from \"chart.js/auto\"\nimport { CurrentValuesSchema } from \"./api/api.interface\"\n/**\n * used as type  of chart title\n */\nexport\ninterface chartTitle{\n  display:boolean\n  text:string\n  color:string\n}\n/**\n * used as type of chart animation option\n */\nexport interface ChartAnimation{\n    tension: {\n      duration:number,\n      easing: string,\n      from: number,\n      to: number,\n      loop: boolean\n    }\n\n}\n/**\n * chartbar data requirements type\n */\nexport interface ChartBarDataInterface{\n\n    labels:string[]\n    datasets: Array\n  options: {\n    scales: {\n      y: {\n        beginAtZero: boolean,\n        min: number,\n        max: number\n      }\n    }\n  }\n\n\n}\n\n/**\n * Used in both diferred mode data visualisation and real time data\n * visualisation compenents as interface of methods to be implemented.\n */\nexport interface chartBuilder{\n  chartData():CurrentValuesSchema[]|any\n  updateScatter(...args:any):void\n}\n/**\n * Should be implemented in diferred mode data visualisation\n * to setup data requirements\n */\nexport interface DiferedComponentInterface{\n  barBasedChart(...args:any):void\n  scatterBasedChart(...args:any):void\n  builder(...args:any):any\n}\n\n\n/**\n *  Should be implemented in real time mode data visualisation\n * to setup data requirements\n */\nexport interface RealTimeChartComponentInterface{\n  initChartBar(...args:any):Chart\n  initScatter(...args:any):void\n  scatterData(...args:any):any\n  onChartsInit(...args:any):void\n  updateTimeSeries(...args:any):any\n  updateData(...args:any):any\n  OntimeSerieChartInit(...args:any):void\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/@core/Interceptor/http-interceptor.interceptor.ts\n            \n            interceptor\n            Aq54HttpInterceptor\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/@core/Preloader/is-loading.service.ts\n            \n            injectable\n            IsLoadingService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/@core/api/api.resource.service.ts\n            \n            injectable\n            ApiResourceService\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/UseCases/diferred-mode-usecases.ts\n            \n            injectable\n            DiferredModeUsecases\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/UseCases/diferred-mode-usecases.ts\n            \n            interface\n            parallelExecutionResponseType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/UseCases/real-time-use-cases.ts\n            \n            injectable\n            RealTimeUseCases\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/UseCases/real-time-use-cases.ts\n            \n            interface\n            OninitResponseSchema\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/about-candidate/about-candidate.component.ts\n            \n            component\n            AboutCandidateComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/features/diferred-data-chart/diferred-data-chart.component.ts\n            \n            component\n            DiferredDataChartComponent\n            \n                21 %\n                (6/28)\n            \n        \n        \n            \n                \n                src/app/features/real-time-chart/real-time-chart.component.ts\n            \n            component\n            RealTimeChartComponent\n            \n                34 %\n                (9/26)\n            \n        \n        \n            \n                \n                src/app/shared/charts/charts.component.ts\n            \n            component\n            ChartsComponent\n            \n                42 %\n                (9/21)\n            \n        \n        \n            \n                \n                src/app/shared/charts/charts.component.ts\n            \n            variable\n            require\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/charts/charts.component.ts\n            \n            variable\n            swal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/domain/api/api.interface.ts\n            \n            interface\n            ApiInterface\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/domain/api/api.interface.ts\n            \n            interface\n            CurrentValuesSchema\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/domain/api/api.interface.ts\n            \n            interface\n            LatestTransmissionsResponseScema\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/domain/api/api.interface.ts\n            \n            interface\n            RangeDataSchema\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/domain/api/api.interface.ts\n            \n            interface\n            SessionInfoSchema\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/domain/chart.ts\n            \n            interface\n            ChartAnimation\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/domain/chart.ts\n            \n            interface\n            ChartBarDataInterface\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/domain/chart.ts\n            \n            interface\n            chartBuilder\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/domain/chart.ts\n            \n            interface\n            chartTitle\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/domain/chart.ts\n            \n            interface\n            DiferedComponentInterface\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/domain/chart.ts\n            \n            interface\n            RealTimeChartComponentInterface\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            chartBarDataSets\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            chartBardDataSets\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getRandomRgb\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            makeAnimation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            makeTitle\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            mapData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            mapDiferedData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            mapToLabels\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            stationDataLabels\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            updateChartBarData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            variable\n            groupBy\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.0\n        \n            @angular/common : ~12.2.0\n        \n            @angular/compiler : ~12.2.0\n        \n            @angular/core : ~12.2.0\n        \n            @angular/forms : ~12.2.0\n        \n            @angular/platform-browser : ~12.2.0\n        \n            @angular/platform-browser-dynamic : ~12.2.0\n        \n            @angular/router : ~12.2.0\n        \n            @swimlane/ngx-charts : ^20.5.0\n        \n            bootstrap : ^5.3.2\n        \n            chart.js : ^4.4.1\n        \n            jquery : ^3.7.1\n        \n            moment : ^2.30.1\n        \n            morgan : ^1.10.0\n        \n            ng2-pdf-viewer : ^10.0.0\n        \n            ngx-csv-parser : ^1.3.1\n        \n            ngx-extended-pdf-viewer : ^19.0.3\n        \n            rxjs : ~6.6.0\n        \n            sweetalert : ^2.1.2\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            chartBarDataSets   (src/.../utils.ts)\n                        \n                        \n                            chartBardDataSets   (src/.../utils.ts)\n                        \n                        \n                            getRandomRgb   (src/.../utils.ts)\n                        \n                        \n                            makeAnimation   (src/.../utils.ts)\n                        \n                        \n                            makeTitle   (src/.../utils.ts)\n                        \n                        \n                            mapData   (src/.../utils.ts)\n                        \n                        \n                            mapDiferedData   (src/.../utils.ts)\n                        \n                        \n                            mapToLabels   (src/.../utils.ts)\n                        \n                        \n                            stationDataLabels   (src/.../utils.ts)\n                        \n                        \n                            updateChartBarData   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        chartBarDataSets\n                        \n                    \n                \n            \n            \n                \nchartBarDataSets(stationData, labels)\n                \n            \n\n\n\n\n            \n                \n                        we build datasets for chartbar config in case of\n\nreal time mode data visualisation\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                stationData\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                labels\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartBardDataSets\n                        \n                    \n                \n            \n            \n                \nchartBardDataSets(stationData)\n                \n            \n\n\n\n\n            \n                \n                        we build datasets for chartbar config in case of\n\ndiferred mode data visualisation\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                stationData\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomRgb\n                        \n                    \n                \n            \n            \n                \ngetRandomRgb()\n                \n            \n\n\n\n\n            \n                \n                        We generate a random RGB value from this function\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeAnimation\n                        \n                    \n                \n            \n            \n                \nmakeAnimation(duration: number, easing: string, from: number, to: number, loop)\n                \n            \n\n\n\n\n            \n                \n                        config animation option for given chart\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1000\n                                            \n\n                                        \n                                        \n                                                easing\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'linear'\n                                            \n\n                                        \n                                        \n                                                from\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                to\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                        \n                                                loop\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ChartAnimation\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTitle\n                        \n                    \n                \n            \n            \n                \nmakeTitle(text: string, color: string)\n                \n            \n\n\n\n\n            \n                \n                        make chart title according to given parameters\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'blue'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         chartTitle\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapData\n                        \n                    \n                \n            \n            \n                \nmapData(data, labels)\n                \n            \n\n\n\n\n            \n                \n                        this function maps the labels to the given lis of data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labels\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapDiferedData\n                        \n                    \n                \n            \n            \n                \nmapDiferedData(data, sensors)\n                \n            \n\n\n\n\n            \n                \n                        we map data acording to the unit of sensors\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sensors\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapToLabels\n                        \n                    \n                \n            \n            \n                \nmapToLabels(data: any, labels: any)\n                \n            \n\n\n\n\n            \n                \n                        this function do almost the same with 2\n*mapData\nbut is used for mapping data in case of diferred mode data visualisation\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                labels\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stationDataLabels\n                        \n                    \n                \n            \n            \n                \nstationDataLabels(stations)\n                \n            \n\n\n\n\n            \n                \n                        we grab station labels\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stations\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateChartBarData\n                        \n                    \n                \n            \n            \n                \nupdateChartBarData(stationData, labels)\n                \n            \n\n\n\n\n            \n                \n                        build dataset for updating chartbar in case of\n\nreal time mode data visualisation\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                stationData\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                labels\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAQ54 Data Visualization App with Angular and Docker-Compose and Nodejs\nOverview\nThis repository contains the source code and configurations for AQ54 data visualization app built with Angular, Docker-Compose,\n Node.js, and the AirQino API. The app is designed to fetch and display air quality data in a visually appealing manner.\n AirQino is a high-precision environmental monitoring platform, born from the need to create a network of stations for accurately assessing the quality of urban environment.\n for maore detail about AirQuino you can navigate to airqino.\n This repository is a well structured code based on clean Architecture in conjunction with SOLID principles\n clean architecture.\n It can served as best pratice coding guide to he or she looking to build scaleable software product in angular aligned with clean architecture implementation.\nPrerequisites\nBefore running the application, make sure you have the following software installed on your machine:\n\nDocker\nDocker-Compose\nNode.js(version 16 or latest)\nAngular (version 12.2.18)\nCode editor of your choice (e.g., Visual Studio Code)\n\nGetting Started\n\nClone the repository:\nExample :git clone https://github.com/NdriAriel/technical-challenge-data354.git\n\nchange directory\nExample :cd technical-challenge-data354\n\nDocker-Compose Configuration\nThe docker-compose.yml file defines the services, networks, and volumes needed for the application. It includes the following services:\n\naq54prod: AQ54 app server made of  nodejs.\naq54docprod: well structured documentation for AQ54 App.\naq54frontend: this is the Angular based frontend of AQ54 data visualisation app.\n\n\nStart the Docker containers:\nExample :sudo docker-compose build \n\nsudo docker-compose up \noutput of docker-compose up\n\n\n\n3. Open your web browser and navigate to http://localhost:8000 to access the Data Visualization App\n4. Open your brower and navigate to 'http://localhost:8001 to access the Data Visualisation App    documentation\nProject Structure\n\n  \n\n\nAQ54 Data visualisation app user interface\n\n  \nMaintenance and Support\nFor additional information or support, please contact the maintainers of this repository:\n\nDavid Kouamé N'DRI kouame.ndri1998@gmail.com\n\nLicense\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiProxyModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeaturesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeaturesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_FeaturesModule\n\n\n\ncluster_FeaturesModule_declarations\n\n\n\ncluster_FeaturesModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAboutCandidateComponent\n\nAboutCandidateComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutCandidateComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApiProxyModule\n\nApiProxyModule\n\nAppModule -->\n\nApiProxyModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nFeaturesModule\n\nFeaturesModule\n\nFeaturesModule -->\n\nSharedModule->FeaturesModule\n\n\n\n\n\nChartsComponent \n\nChartsComponent \n\nChartsComponent  -->\n\nSharedModule->ChartsComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nAq54HttpInterceptor\n\nAq54HttpInterceptor\n\nAppModule -->\n\nAq54HttpInterceptor->AppModule\n\n\n\n\n\nDiferredDataChartComponent\n\nDiferredDataChartComponent\n\nFeaturesModule -->\n\nDiferredDataChartComponent->FeaturesModule\n\n\n\n\n\nRealTimeChartComponent\n\nRealTimeChartComponent\n\nFeaturesModule -->\n\nRealTimeChartComponent->FeaturesModule\n\n\n\n\n\nFeaturesRoutingModule\n\nFeaturesRoutingModule\n\nFeaturesModule -->\n\nFeaturesRoutingModule->FeaturesModule\n\n\n\n\n\nChartsComponent\n\nChartsComponent\n\nSharedModule -->\n\nChartsComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/parallelExecutionResponseType.html":{"url":"interfaces/parallelExecutionResponseType.html","title":"interface - parallelExecutionResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  parallelExecutionResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/UseCases/diferred-mode-usecases.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            raw_data\n                                        \n                                \n                                \n                                        \n                                            sessionInfo\n                                        \n                                \n                                \n                                        \n                                            station\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        raw_data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        raw_data:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessionInfo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionInfo:         SessionInfoSchema[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SessionInfoSchema[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        station\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { ApiInterface, RangeDataSchema, SessionInfoSchema } from \"src/domain\";\nexport interface parallelExecutionResponseType{\n  raw_data:RangeDataSchema['raw_data']\n  station:string\n  sessionInfo:SessionInfoSchema[]\n}\n\n/**\n * This class handles api calls for diferred mode data visualisation\n *\n */\n@Injectable({providedIn:'root'})\nexport class DiferredModeUsecases {\n\n  /**\n   *\n   * @param api\n   */\n  constructor(@Inject('api') private readonly api:ApiInterface){}\n  /**\n   *\n   * @param stationName\n   * @param start\n   * @param end\n   * @param projectName\n   *  we know the station so we can make api call in parallel to retrieve needed information for that usecase.\n   * @returns\n   */\n\n async parallelExecution(stationName:string='',start:string,end:string,projectName:string):Promise{\n    try{\n      const [{raw_data,station},sessionInfo] = await Promise.all([\n        await this.api.getRange(stationName,start,end).toPromise(),\n        await this.api.getSessionInfo(projectName).toPromise()\n      ])\n    return {raw_data,station,sessionInfo}\n    }catch(err:any){\n     throw new Error(err.message)\n    }\n  }\n\n\n  /**\n   *\n   * @param start\n   * @param end\n   * @param projectName\n   * Here we are fetching the sessions information in order to pick randomly a station and request needed data for the  usecase.\n   */\n\n  async execute(start:string,end:string,projectName:string){\n    try{\n    const sessionInfo = await this.api.getSessionInfo(projectName).toPromise()\n    const {raw_data,station} = await this.api.getRange(sessionInfo[Math.floor(Math.random()*(sessionInfo.length-1))].station,start,end).toPromise()\n    return {raw_data,station,sessionInfo}\n\n  }catch(err:any){\n      throw new Error(err.message)\n    }\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            groupBy   (src/.../utils.ts)\n                        \n                        \n                            require   (src/.../charts.component.ts)\n                        \n                        \n                            swal   (src/.../charts.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  baseApi:\"https://airqino-api.magentalab.it/\",\n  docsURL:\"http://localhost:8001/docs\"\n}\n                    \n                \n\n            \n                \n                    Based Api endpoints and other static  resources are placed here.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        groupBy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (list: T[], getKey: (item: T) => K) =>\n  list.reduce((previous, currentItem) => {\n    const group = getKey(currentItem);\n    if (!previous[group]) previous[group] = [];\n    previous[group].push(currentItem);\n    return previous;\n  }, {} as Record)\n                    \n                \n\n            \n                \n                    This utility function is used as helper in making a group of data from a given list according to key parameter.\n\n                \n            \n\n        \n    \n\n    src/app/shared/charts/charts.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    Declare require as a const and type any\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SweetAlert\n\n                    \n                \n\n            \n                \n                    we declare swal as var and type\n*SweetAlert\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
