var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutCandidateComponent.html",[0,0.83,1,1.115]],["body/components/AboutCandidateComponent.html",[0,0.6,1,0.967,2,0.821,3,0.083,4,0.083,5,2.024,6,0.51,7,0.51,8,0.51,9,0.083,10,2.724,11,2.13,12,0.862,13,0.703,14,1.093,15,0.51,16,2.124,17,1.949,18,1.79,19,0.891,20,2.383,21,0.891,22,1.79,23,0.132,24,0.418,25,0.947,26,2.003,27,0.451,28,1.186,29,0.486,30,0.719,31,1.025,32,1.025,33,0.239,34,0.029,35,0.47,36,0.23,37,0.606,38,0.523,39,1.176,40,2.855,41,1.79,42,1.505,43,1.79,44,1.79,45,1.79,46,1.79,47,1.79,48,1.79,49,1.79,50,1.79,51,2.855,52,4.065,53,1.79,54,1.79,55,1.79,56,1.505,57,1.79,58,1.79,59,1.79,60,1.79,61,1.317,62,1.317,63,1.79,64,3.876,65,1.79,66,1.79,67,1.317,68,1.4,69,3.562,70,2.994,71,3.562,72,1.025,73,1.176,74,1.79,75,1.79,76,1.79,77,1.79,78,1.79,79,1.79,80,1.79,81,1.79,82,1.79,83,1.505,84,1.317,85,1.505,86,1.505,87,1.79,88,1.79,89,1.79,90,2.855,91,1.79,92,1.79,93,1.79,94,1.79,95,1.79,96,1.79,97,4.065,98,2.855,99,3.562,100,4.065,101,1.79,102,1.79,103,1.79,104,1.79,105,2.1,106,2.1,107,4.733,108,2.919,109,4.065,110,3.39,111,1.79,112,1.79,113,1.79,114,1.79,115,1.79,116,1.79,117,1.79,118,4.065,119,1.79,120,1.79,121,3.111,122,1.79,123,1.79,124,1.79,125,1.79,126,1.79,127,2.855,128,2.855,129,1.79,130,1.79,131,2.855,132,1.79,133,1.79,134,1.79,135,1.79,136,1.79,137,2.855,138,1.79,139,2.855,140,3.562,141,1.79,142,1.79,143,2.855,144,1.79,145,1.79,146,1.79,147,1.79,148,1.79,149,3.562,150,1.79,151,1.79,152,2.1,153,1.79,154,0.891,155,1.79,156,1.505,157,1.79,158,1.505,159,1.505,160,1.79,161,1.79,162,4.065,163,1.79,164,1.79,165,1.79,166,1.79,167,1.79,168,1.79,169,1.79,170,2.855,171,1.79,172,1.79,173,2.855,174,2.855,175,1.317,176,1.79,177,1.79,178,1.79,179,1.79,180,1.79,181,1.79,182,1.79,183,1.79,184,1.79,185,1.79,186,1.79,187,2.855,188,1.79,189,1.79,190,1.79,191,1.79,192,1.79,193,1.79,194,1.79,195,1.79,196,1.79,197,1.79,198,1.79,199,1.79,200,1.79,201,1.79,202,1.79,203,1.79,204,1.79,205,1.79,206,1.79,207,1.79,208,1.79,209,1.79,210,1.79,211,1.79,212,1.79,213,1.79,214,1.79,215,1.79,216,1.79,217,1.79,218,1.79,219,1.79,220,1.79,221,1.79,222,1.79,223,1.79,224,1.025,225,0.3,226,0.145,227,0.891,228,0.754,229,0.61,230,1.025,231,1.025,232,0.862,233,0.862,234,0.862,235,0.862,236,0.095,237,0.159,238,0.754,239,1.79,240,1.79,241,1.79,242,1.79,243,1.79,244,1.79,245,1.79,246,1.79,247,1.79,248,1.79,249,1.79,250,1.79,251,1.79,252,1.79,253,1.79,254,1.79,255,1.79,256,1.79,257,1.79,258,1.79,259,1.79,260,1.79,261,1.79,262,1.79,263,1.79,264,1.025,265,3.33,266,2.366,267,2.62,268,4.175,269,1.025,270,2.003,271,3.794,272,1.025,273,1.025,274,1.025,275,1.025,276,2.473,277,3.021,278,2.4,279,2.003,280,4.094,281,2.919,282,1.566,283,2.383,284,1.176,285,2.804,286,2.519,287,3.276,288,3.833,289,1.79,290,2.079,291,4.441,292,2.1,293,2.003,294,1.025,295,3.833,296,3.833,297,1.025,298,0.862,299,1.025,300,1.025,301,0.862,302,1.025,303,1.025,304,1.79,305,1.505,306,3.241,307,2.13,308,2.003,309,1.79,310,1.417,311,1.176,312,1.698,313,2.99,314,2.724,315,2.003,316,0.862,317,1.025,318,1.79,319,1.025,320,1.79,321,0.862,322,1.176,323,1.025,324,1.025,325,0.754,326,1.773,327,1.025,328,1.025,329,1.025,330,0.862,331,1.79,332,3.241,333,1.025,334,2.205,335,2.994,336,3.562,337,3.267,338,1.505,339,0.61,340,1.025,341,1.505,342,1.025,343,2.855,344,3.241,345,0.674,346,1.79,347,1.79,348,4.265,349,3.562,350,1.505,351,1.79,352,1.317,353,3.833,354,0.862,355,0.862,356,1.025,357,1.025,358,1.79,359,0.862,360,1.79,361,3.241,362,2.855,363,0.862,364,1.79,365,1.025,366,1.025,367,1.025,368,2.383,369,1.025,370,1.79,371,2.855,372,0.862,373,1.79,374,1.79,375,1.79,376,1.025,377,1.025,378,0.862,379,1.025,380,1.025,381,0.862,382,2.383,383,1.025,384,0.674,385,1.79,386,1.025,387,0.754,388,3.241,389,1.025,390,0.862,391,0.862,392,1.025,393,1.025,394,3.241,395,1.025,396,1.025,397,0.862,398,1.025,399,1.505,400,2.383,401,1.025,402,1.025,403,1.025,404,1.025,405,1.025,406,1.025,407,1.025,408,1.025,409,1.025,410,1.025,411,1.025,412,1.79,413,1.025,414,0.674,415,1.025,416,1.025,417,1.025,418,0.374,419,0.891,420,0.891,421,0.51,422,1.422,423,0.51,424,0.387,425,0.51,426,0.374,427,0.51,428,0.374,429,0.51,430,0.347,431,0.435,432,0.51,433,0.374,434,0.51,435,0.374,436,0.51,437,0.347,438,0.435,439,0.322,440,0.51,441,0.51,442,0.008,443,0.008]],["title/interfaces/ApiInterface.html",[444,0.962,445,0.962]],["body/interfaces/ApiInterface.html",[3,0.294,4,0.294,9,0.294,23,0.464,27,1.203,30,1.492,33,1.383,34,0.029,36,0.762,225,0.334,236,0.548,424,1.281,442,0.02,443,0.02,444,1.731,445,1.396,446,1.798,447,1.959,448,4.015,449,4.015,450,4.015,451,4.015,452,4.015,453,3.035,454,1.838,455,3.61,456,1.731,457,1.731,458,2.373,459,2.581,460,3.035,461,2.613,462,2.836,463,3.61,464,1.25,465,3.035,466,2.949,467,3.61,468,3.035,469,3.035,470,3.61,471,3.035,472,3.61,473,1.959,474,1.316,475,1.222,476,2.84,477,2.147,478,2.147,479,1.136,480,1.657,481,2.147,482,2.147,483,1.959,484,1.657,485,2.147,486,2.147,487,1.657,488,1.798,489,2.147,490,2.147,491,2.147,492,2.147,493,2.147,494,2.147,495,2.147,496,2.147]],["title/modules/ApiProxyModule.html",[497,1.294,498,1.958]],["body/modules/ApiProxyModule.html",[3,0.426,4,0.338,9,0.338,34,0.029,225,0.601,226,0.589,236,0.385,237,0.645,442,0.022,443,0.022,464,1.222,498,3.11,499,1.763,500,4.157,501,4.157,502,4.157,503,2.838,504,3.848,505,2.732,506,2.732,507,4.157,508,2.472,509,5.723,510,2.472,511,4.157,512,2.732,513,3.058,514,4.157,515,2.732,516,3.058,517,3.494,518,2.472,519,2.255,520,4.157,521,2.472,522,2.255,523,2.472,524,4.157,525,4.157,526,4.157,527,4.157,528,4.157,529,4.157,530,4.157,531,4.157,532,4.157,533,4.157,534,4.157,535,4.157,536,2.07]],["title/injectables/ApiResourceService.html",[506,2.164,537,0.769]],["body/injectables/ApiResourceService.html",[3,0.269,4,0.269,9,0.269,13,1.297,23,0.425,24,1.051,27,1.133,29,0.896,30,1.529,33,1.342,34,0.029,36,0.78,37,1.118,38,0.965,225,0.532,226,0.468,236,0.306,237,0.512,424,1.282,442,0.019,443,0.019,445,1.314,448,3.781,449,3.781,450,3.781,451,3.781,452,3.781,453,3.781,454,1.806,456,1.733,457,1.733,458,2.17,459,2.711,460,2.775,461,2.52,462,2.735,464,1.051,465,3.781,466,2.547,468,2.775,469,2.775,471,3.781,473,1.791,474,1.204,475,1.118,479,1.038,484,1.515,487,1.515,506,2.956,537,1.051,538,1.515,539,2.775,540,4.498,541,3.302,542,5.115,543,4.498,544,3.302,545,3.302,546,3.302,547,3.302,548,3.302,549,3.302,550,3.302,551,1.4,552,2.429,553,2.17,554,2.775,555,2.429,556,2.17,557,3.302,558,3.302,559,1.297,560,3.302,561,2.095,562,3.302,563,3.302,564,3.302,565,3.302,566,3.302,567,3.302,568,3.302]],["title/components/AppComponent.html",[0,0.83,426,1.2]],["body/components/AppComponent.html",[0,1.311,1,1.156,2,2.111,3,0.278,4,0.278,5,1.7,6,1.7,7,1.7,8,1.7,9,0.278,13,1.808,14,2.388,15,1.7,16,3.139,17,2.674,19,2.29,21,2.29,23,0.439,24,1.074,25,0.998,27,1.159,28,2.772,29,1.249,30,1.464,33,0.797,34,0.029,35,2.111,36,0.592,37,1.557,38,1.344,225,0.426,226,0.483,227,1.7,236,0.316,237,0.53,266,2.388,276,2.29,277,2.244,310,2.03,312,2.03,313,2.511,322,2.244,325,2.511,326,2.29,334,1.852,384,2.244,418,1.244,419,2.29,420,2.29,421,1.7,422,2.772,423,1.7,424,1.125,425,1.7,426,2.03,427,1.7,428,1.244,429,1.7,430,1.156,431,1.448,432,1.7,433,1.244,434,1.7,435,1.244,436,1.7,437,1.156,438,1.448,439,1.074,440,1.7,441,1.7,442,0.02,443,0.02,456,0.998,457,0.998,556,3.024,569,2.869,570,5.203,571,4.6,572,3.828,573,5.203,574,4.6,575,4.6,576,3.413,577,3.311,578,4.6,579,3.413,580,3.413,581,2.736,582,3.413,583,2.511,584,3.413,585,3.413,586,3.413,587,2.511,588,3.413,589,3.413,590,2.511,591,2.869,592,2.869,593,3.413,594,3.413,595,3.413]],["title/modules/AppModule.html",[497,1.294,596,2.164]],["body/modules/AppModule.html",[1,2.049,3,0.288,4,0.288,9,0.288,11,2.327,17,1.502,34,0.029,225,0.599,226,0.501,236,0.328,237,0.549,418,1.291,426,2.375,442,0.02,443,0.02,497,1.391,498,3.599,499,1.502,503,2.557,521,3.151,522,2.557,523,3.151,536,1.763,552,2.604,583,2.604,596,4.379,597,1.921,598,3.151,599,2.976,600,2.976,601,2.976,602,2.976,603,2.976,604,3.599,605,3.283,606,3.499,607,3.098,608,2.327,609,1.921,610,3.54,611,2.976,612,3.963,613,4.714,614,3.963,615,2.604,616,2.976,617,3.54,618,4.714,619,3.54,620,3.963,621,2.604,622,3.54,623,4.714,624,3.098,625,1.763,626,2.976,627,2.976,628,2.976,629,3.54,630,3.54,631,3.54]],["title/modules/AppRoutingModule.html",[497,1.294,604,1.958]],["body/modules/AppRoutingModule.html",[1,1.519,3,0.365,4,0.365,9,0.365,11,2.948,34,0.029,68,1.763,225,0.548,226,0.635,236,0.415,237,0.696,439,1.725,442,0.023,443,0.023,499,1.903,503,2.975,522,2.434,536,2.233,604,3.261,624,3.604,625,2.233,627,3.771,632,4.486,633,3.771,634,4.486,635,3.522,636,4.609,637,5.483,638,5.483,639,4.486,640,4.486,641,4.486,642,4.486,643,4.486,644,4.486,645,4.486]],["title/interceptors/Aq54HttpInterceptor.html",[606,1.958,646,2.768]],["body/interceptors/Aq54HttpInterceptor.html",[3,0.321,4,0.321,9,0.321,13,1.548,23,0.507,24,1.181,27,1.274,29,1.069,30,1.406,33,0.92,34,0.029,36,0.718,225,0.564,226,0.558,236,0.365,237,0.611,424,1.093,442,0.021,443,0.021,456,1.477,457,1.477,459,2.144,474,1.436,537,1.181,552,2.898,561,2.035,572,3.719,577,3.502,606,3.006,647,3.94,648,4.951,649,3.312,650,5.582,651,5.055,652,3.94,653,3.94,654,5.055,655,5.889,656,5.582,657,5.889,658,3.94,659,3.312,660,3.94,661,3.94,662,5.055,663,3.94,664,3.94,665,3.94,666,3.94,667,3.94,668,3.94,669,3.94,670,3.94,671,3.94,672,3.94,673,3.94,674,5.055,675,3.94,676,3.94,677,3.94,678,3.94]],["title/components/ChartsComponent.html",[0,0.83,428,1.2]],["body/components/ChartsComponent.html",[0,0.895,1,0.604,2,1.306,3,0.145,4,0.145,5,0.888,6,0.888,7,0.888,8,0.888,9,0.145,13,1.118,14,1.63,15,0.888,16,2.643,17,2.252,19,1.417,21,1.417,23,0.229,24,0.665,25,0.521,27,0.717,28,2.019,29,0.773,30,1.426,33,0.83,34,0.029,35,1.861,36,0.7,37,1.797,38,1.551,64,2.666,68,1.594,108,1.871,110,1.172,121,1.172,225,0.41,226,0.252,227,2.207,236,0.165,237,0.277,265,3.385,266,2.275,267,2.094,268,1.499,270,3.726,271,1.312,276,0.888,277,1.172,278,3.972,280,3.788,281,1.172,282,1.871,284,1.172,285,2.913,286,2.666,287,3.237,290,1.544,292,2.094,293,1.499,298,1.499,301,1.499,305,1.499,307,2.666,308,1.499,310,1.692,311,1.871,312,2.412,315,2.393,316,1.499,321,2.986,326,0.888,330,2.986,334,0.967,335,1.499,337,1.312,338,1.499,339,1.06,341,2.393,352,2.983,354,1.499,355,1.499,378,2.393,381,1.499,384,1.871,387,3.261,390,2.393,391,2.986,399,1.499,418,0.65,419,1.417,420,1.417,421,0.888,422,2.207,423,0.888,424,0.958,425,0.888,426,0.65,427,0.888,428,1.478,429,0.888,430,0.604,431,0.756,432,0.888,433,0.65,434,0.888,435,0.65,436,0.888,437,0.604,438,1.207,439,1.117,440,0.888,441,0.888,442,0.012,443,0.012,454,1.398,456,1.038,457,1.038,461,1.306,462,1.417,464,0.947,559,0.701,609,0.967,625,0.888,636,2.393,679,1.312,680,2.393,681,3.552,682,2.846,683,2.846,684,2.846,685,2.846,686,2.393,687,2.094,688,2.393,689,2.2,690,2.094,691,1.783,692,2.986,693,2.846,694,1.499,695,1.783,696,1.783,697,1.499,698,1.783,699,1.783,700,1.783,701,1.783,702,2.846,703,1.783,704,1.783,705,1.783,706,1.783,707,1.783,708,2.846,709,5.092,710,4.329,711,1.783,712,1.783,713,1.783,714,1.499,715,1.544,716,2.094,717,1.783,718,2.613,719,2.846,720,1.783,721,1.783,722,1.783,723,1.783,724,1.783,725,1.783,726,1.783,727,1.783,728,1.499,729,1.783,730,1.783,731,1.783,732,1.783,733,1.783,734,1.783,735,1.783,736,0.756,737,1.499,738,1.783,739,1.783,740,1.783,741,1.783,742,1.783,743,1.783,744,1.783,745,1.499,746,2.846,747,2.846,748,2.846,749,2.846,750,1.783,751,2.846,752,2.846,753,1.783,754,1.312,755,1.312,756,1.783,757,1.312,758,1.783,759,1.783,760,1.783,761,1.692,762,1.783,763,1.783,764,1.783,765,1.783,766,1.783,767,1.783,768,1.783,769,1.783,770,1.312,771,1.783,772,1.783,773,1.783,774,2.846,775,1.783,776,1.783,777,1.783,778,1.783,779,2.846,780,1.783,781,1.783,782,1.783,783,1.783,784,2.094,785,2.846,786,2.846,787,2.846,788,1.783,789,1.783,790,1.783,791,3.552,792,3.552,793,2.846,794,1.783,795,2.986,796,5.823,797,2.094,798,1.783,799,2.846,800,2.613,801,1.783,802,2.846,803,1.783,804,1.783,805,1.783,806,1.783,807,1.783,808,1.783,809,1.783,810,1.783,811,1.783,812,1.783,813,1.783,814,1.783,815,4.055,816,2.846,817,1.783,818,1.783,819,1.783,820,1.783,821,1.783,822,1.783,823,2.846,824,2.846,825,2.846,826,1.783,827,1.499,828,1.783,829,2.846,830,1.499,831,1.783,832,2.846,833,1.783,834,2.846,835,1.783,836,1.783,837,1.783,838,1.783,839,1.783,840,1.783]],["title/interfaces/CurrentValuesSchema.html",[444,0.962,475,1.115]],["body/interfaces/CurrentValuesSchema.html",[3,0.346,4,0.346,9,0.346,23,0.546,24,1.238,34,0.029,36,0.743,225,0.393,236,0.577,442,0.022,443,0.022,444,1.82,445,1.24,446,2.113,447,2.303,454,1.806,459,1.8,464,0.991,466,2.877,474,1.547,475,1.794,476,3.704,477,3.598,478,2.524,479,1.335,480,1.947,481,2.524,482,2.524,483,3.135,484,1.947,485,2.524,486,2.524,487,1.947,488,2.113,489,2.524,490,2.524,491,2.524,492,2.524,493,2.524,494,2.524,495,2.524,496,2.524,841,4.251]],["title/components/DiferredDataChartComponent.html",[0,0.83,430,1.115]],["body/components/DiferredDataChartComponent.html",[0,0.722,1,0.444,2,1.014,3,0.107,4,0.107,5,0.652,6,0.652,7,0.652,8,0.652,9,0.107,13,0.868,14,1.315,15,0.652,16,2.361,17,2.012,19,1.1,21,1.1,23,0.168,24,0.516,25,1.916,27,0.557,28,1.675,29,0.6,30,1.429,33,0.878,34,0.029,35,1.315,36,0.762,37,1.785,38,1.541,39,1.884,61,1.626,62,2.476,64,2.85,67,2.476,68,2.396,73,0.861,105,2.108,106,2.765,108,0.861,110,2.212,121,2.47,152,2.108,175,1.626,225,0.377,226,0.186,227,2.029,228,0.964,229,2.82,236,0.121,237,0.203,238,2.108,266,1.544,276,1.427,281,1.452,282,1.452,284,1.452,287,2.001,290,1.555,322,2.995,326,1.427,334,1.555,339,1.314,345,3.223,414,1.452,418,1.227,419,1.1,420,1.1,421,0.652,422,1.871,423,0.652,424,0.813,425,0.652,426,0.478,427,0.652,428,0.478,429,0.652,430,1.139,431,1.933,432,0.652,433,0.478,434,0.652,435,0.478,436,0.652,437,0.444,438,0.556,439,0.412,440,0.652,441,0.652,442,0.009,443,0.009,454,1.106,456,0.837,457,0.837,461,0.601,462,0.652,464,0.306,479,0.695,518,1.704,551,0.556,559,0.868,561,0.806,581,1.314,583,0.964,587,0.964,590,2.108,625,0.652,687,1.626,688,1.858,689,1.199,690,1.626,692,2.409,694,1.858,697,1.101,709,2.829,710,2.829,715,1.199,728,1.101,736,0.937,737,1.101,745,1.101,754,1.626,755,1.626,757,2.108,761,2.999,770,0.964,784,1.626,797,1.626,842,4.817,843,3.766,844,0.964,845,2.409,846,1.858,847,2.866,848,1.858,849,1.314,850,2.21,851,1.858,852,2.211,853,2.21,854,1.858,855,3.365,856,2.829,857,1.101,858,1.31,859,1.101,860,1.31,861,1.31,862,1.31,863,1.31,864,1.31,865,1.31,866,1.452,867,1.31,868,1.31,869,1.31,870,1.858,871,1.858,872,1.858,873,1.858,874,2.21,875,3.646,876,2.829,877,1.858,878,1.858,879,1.858,880,1.858,881,1.858,882,1.858,883,3.159,884,1.858,885,1.858,886,1.858,887,1.858,888,1.858,889,2.476,890,1.858,891,3.159,892,2.829,893,3.426,894,1.31,895,2.21,896,2.21,897,1.101,898,1.101,899,1.31,900,1.101,901,1.101,902,1.101,903,1.101,904,1.101,905,1.31,906,1.452,907,1.101,908,0.652,909,0.964,910,1.626,911,0.964,912,0.964,913,0.861,914,1.31,915,1.31,916,1.101,917,1.101,918,1.31,919,1.31,920,1.31,921,1.31,922,1.101,923,1.101,924,1.31,925,1.31,926,1.31,927,1.31,928,1.31,929,1.31,930,1.31,931,1.199,932,1.31,933,1.31,934,1.199,935,1.31,936,2.21,937,2.21,938,1.31,939,1.31,940,2.21,941,2.21,942,1.101,943,1.31,944,0.861,945,1.31,946,1.31,947,1.31,948,1.31,949,1.31,950,1.199,951,1.101,952,1.199,953,1.427,954,1.199,955,1.31,956,1.31,957,1.31,958,1.101,959,1.31,960,1.31,961,1.31,962,1.31,963,1.31,964,1.31,965,1.31,966,1.31,967,1.31,968,1.31,969,1.31,970,1.31,971,1.31,972,1.31,973,1.31,974,1.31,975,1.31,976,1.31,977,1.31,978,1.31,979,1.31,980,1.31,981,1.31,982,1.31,983,1.31,984,1.31,985,1.31,986,1.31,987,1.31,988,1.31,989,1.31,990,1.31,991,1.31,992,1.31,993,1.31,994,1.31,995,2.21,996,2.21,997,2.21,998,2.21,999,2.21,1000,2.21,1001,2.21,1002,2.21,1003,2.21,1004,2.21,1005,2.21,1006,2.21,1007,2.409,1008,2.409,1009,2.409,1010,1.858,1011,1.858,1012,1.858,1013,1.858,1014,1.858,1015,1.858,1016,1.858,1017,2.866,1018,1.858,1019,2.409,1020,1.858,1021,1.858,1022,2.21,1023,1.626,1024,2.829,1025,2.829,1026,2.21,1027,2.21,1028,1.858,1029,2.829,1030,2.409,1031,1.858,1032,2.21,1033,1.31,1034,1.31,1035,1.31,1036,2.21,1037,1.31,1038,1.31,1039,1.31,1040,1.31,1041,1.101,1042,1.31,1043,1.31,1044,1.101,1045,1.31,1046,1.101,1047,1.101,1048,1.101,1049,1.101,1050,1.31,1051,1.31,1052,1.31,1053,1.31,1054,1.31]],["title/injectables/DiferredModeUsecases.html",[518,1.958,537,0.769]],["body/injectables/DiferredModeUsecases.html",[3,0.27,4,0.27,9,0.27,23,0.426,25,0.968,27,1.136,29,0.899,30,1.291,33,1.197,34,0.029,36,0.659,37,1.122,38,0.968,68,2.014,154,2.245,225,0.417,226,0.469,236,0.307,237,0.514,424,1.108,442,0.019,443,0.019,445,1.498,454,1.771,456,1.498,457,1.498,458,2.963,461,2.64,462,2.956,464,1.053,473,3.221,480,2.069,517,3.79,518,2.681,537,0.774,538,1.52,551,1.406,559,1.302,561,1.644,659,2.786,736,1.406,852,3.221,908,1.65,931,2.446,934,3.122,942,3.79,944,2.178,950,2.446,952,2.446,953,1.912,954,2.446,1055,4.624,1056,4.624,1057,2.786,1058,2.681,1059,4.509,1060,1.971,1061,3.314,1062,3.314,1063,3.314,1064,3.79,1065,3.314,1066,3.314,1067,2.178,1068,1.798,1069,1.971,1070,4.468,1071,3.314,1072,3.314,1073,2.438,1074,3.314,1075,2.438,1076,3.317,1077,4.509,1078,3.314,1079,3.314,1080,3.314,1081,3.314,1082,3.317,1083,3.314,1084,2.438,1085,3.314,1086,2.438,1087,3.314,1088,3.314,1089,3.314,1090,3.314,1091,3.314,1092,3.314]],["title/modules/FeaturesModule.html",[497,1.294,1093,2.164]],["body/modules/FeaturesModule.html",[3,0.326,4,0.326,9,0.326,25,1.492,34,0.029,225,0.579,226,0.567,236,0.37,237,0.621,418,1.458,430,2.118,431,1.697,437,2.118,438,1.697,439,1.606,442,0.022,443,0.022,497,1.572,499,1.697,503,2.77,504,3.756,505,2.63,521,3.344,522,2.77,523,2.379,536,1.992,597,2.171,598,2.379,605,3.395,607,3.355,608,2.63,609,2.171,611,3.363,612,4.292,616,3.363,626,3.363,628,3.363,843,2.63,1093,4.358,1094,3.363,1095,3.363,1096,3.363,1097,3.721,1098,4.001,1099,2.63,1100,4.292,1101,4.001]],["title/modules/FeaturesRoutingModule.html",[497,1.294,1097,1.958]],["body/modules/FeaturesRoutingModule.html",[3,0.367,4,0.367,9,0.367,25,1.607,34,0.029,68,1.771,225,0.572,226,0.638,236,0.417,237,0.699,430,1.526,431,1.912,437,1.526,438,1.912,439,1.867,442,0.023,443,0.023,499,1.912,503,2.984,522,2.446,536,2.244,624,3.615,625,2.244,633,3.789,635,3.53,843,2.963,1097,3.271,1099,2.963,1100,4.623,1102,4.508,1103,4.508,1104,4.508,1105,4.508,1106,4.508,1107,4.508]],["title/components/FooterComponent.html",[0,0.83,433,1.2]],["body/components/FooterComponent.html",[0,1.324,1,1.178,2,2.138,3,0.283,4,0.283,5,1.732,6,1.732,7,1.732,8,1.732,9,0.283,13,1.831,14,2.411,15,1.732,16,3.152,17,2.685,19,2.32,21,2.32,23,0.447,24,1.088,25,1.017,26,4.416,27,1.174,28,2.794,29,1.426,30,1.324,33,0.813,34,0.029,35,2.138,36,0.447,37,1.178,38,1.017,73,2.287,83,3.917,84,3.428,85,3.917,86,3.917,225,0.322,226,0.493,227,1.732,236,0.322,237,0.54,265,2.287,266,1.596,276,1.732,285,2.287,286,2.287,290,2.528,307,3.062,310,2.771,311,3.062,312,2.771,313,2.559,314,2.924,326,1.732,339,2.069,418,1.268,419,2.32,420,2.32,421,1.732,422,2.794,423,1.732,424,1.008,425,1.732,426,1.268,427,1.732,428,1.268,429,1.732,430,1.178,431,1.476,432,1.732,433,2.046,434,1.732,435,1.268,436,1.732,437,1.178,438,1.476,439,1.094,440,1.732,441,1.732,442,0.02,443,0.02,592,2.924,795,2.924,800,2.559,1108,2.924,1109,5.611,1110,5.253,1111,4.659,1112,3.479,1113,3.479,1114,4.659,1115,4.659,1116,3.479,1117,4.659,1118,2.924]],["title/injectables/GetRangeUsecase.html",[515,2.164,537,0.769]],["body/injectables/GetRangeUsecase.html",[3,0.343,4,0.343,9,0.343,23,0.542,27,1.329,29,1.144,30,1.329,33,0.984,34,0.029,36,0.679,154,2.098,225,0.488,226,0.597,236,0.39,237,0.654,424,1.141,442,0.022,443,0.022,445,1.683,454,1.721,456,1.542,457,1.542,461,2.421,462,2.627,464,0.984,515,3.468,516,4.237,537,0.984,538,1.934,551,1.788,559,1.656,561,1.536,736,1.788,852,3.125,866,2.77,908,2.098,931,2.287,934,2.287,950,2.287,951,3.543,952,2.287,953,1.788,954,2.287,1058,3.137,1060,2.506,1067,2.77,1068,2.287,1069,2.506,1119,3.786,1120,3.543,1121,4.215,1122,4.215,1123,4.215,1124,4.215,1125,4.215]],["title/injectables/GetStationCurrentValuesService.html",[508,1.958,537,0.769]],["body/injectables/GetStationCurrentValuesService.html",[3,0.347,4,0.347,9,0.347,23,0.548,27,1.339,29,1.157,30,1.339,33,0.996,34,0.029,36,0.683,154,2.646,225,0.536,226,0.604,236,0.395,237,0.662,424,1.149,442,0.023,443,0.023,445,1.771,454,1.572,456,1.553,457,1.553,458,2.803,459,2.456,464,1.352,474,1.554,475,1.444,508,3.16,510,3.443,537,0.996,538,1.957,551,1.809,555,3.137,556,2.803,559,1.676,561,1.554,736,1.809,1058,3.16,1060,2.536,1068,2.313,1119,3.806,1126,3.585,1127,4.264,1128,5.315,1129,4.264,1130,4.264,1131,4.264]],["title/injectables/GetStationSessionInfoUsecasesService.html",[512,2.164,537,0.769]],["body/injectables/GetStationSessionInfoUsecasesService.html",[3,0.494,4,0.348,9,0.348,23,0.55,27,1.341,29,1.16,30,1.341,33,0.998,34,0.029,36,0.684,154,2.128,225,0.537,226,0.605,236,0.396,237,0.663,424,1.151,442,0.023,443,0.023,445,1.694,454,1.445,456,1.555,457,1.555,459,2.258,464,1.354,473,2.319,474,1.558,479,1.344,512,3.498,513,4.264,537,1.243,538,1.961,551,1.813,559,1.679,561,1.558,736,1.813,908,2.128,1058,3.165,1060,2.542,1068,2.319,1069,2.542,1119,3.81,1132,3.593,1133,4.274,1134,4.274,1135,4.274,1136,4.274,1137,4.274,1138,4.274]],["title/components/HeaderComponent.html",[0,0.83,435,1.2]],["body/components/HeaderComponent.html",[0,1.259,1,1.069,2,2.002,3,0.257,4,0.257,5,1.572,6,1.572,7,1.572,8,1.572,9,0.257,13,1.714,14,2.293,15,1.572,16,3.088,17,2.631,19,2.172,21,2.172,23,0.406,24,1.019,25,0.923,27,1.099,28,2.684,29,1.357,30,1.425,33,0.738,34,0.029,35,2.002,36,0.406,37,1.692,38,1.461,225,0.404,226,0.447,227,1.572,236,0.292,237,0.49,265,3.285,266,2.473,267,2.323,271,2.323,276,2.172,277,2.076,279,2.655,280,2.323,285,2.076,286,2.076,287,1.878,290,1.713,292,3.209,307,2.867,310,1.878,311,2.076,312,1.878,325,2.323,326,1.572,334,1.713,337,2.323,345,3.543,352,2.323,359,2.655,363,3.667,372,2.655,384,3.285,387,2.323,397,2.655,418,1.151,419,2.172,420,2.172,421,1.572,422,2.684,423,1.572,424,0.943,425,1.572,426,1.151,427,1.572,428,1.151,429,1.572,430,1.069,431,1.339,432,1.572,433,1.151,434,1.572,435,1.965,436,1.572,437,1.069,438,1.339,439,0.993,440,1.572,441,1.572,442,0.019,443,0.019,454,0.857,553,2.076,554,2.655,686,3.667,714,2.655,754,3.209,761,1.878,800,2.323,827,2.655,830,2.655,889,2.323,906,2.076,1118,2.655,1139,2.655,1140,4.362,1141,4.998,1142,4.362,1143,4.362,1144,4.362,1145,4.362,1146,3.158,1147,3.158,1148,3.158,1149,3.158,1150,3.158,1151,3.158,1152,3.158,1153,3.158,1154,4.362,1155,4.362,1156,4.362,1157,4.362,1158,4.362,1159,3.158,1160,3.158,1161,3.158,1162,4.362,1163,3.158]],["title/injectables/IsLoadingService.html",[537,0.769,577,1.958]],["body/injectables/IsLoadingService.html",[3,0.322,4,0.322,9,0.322,23,0.508,24,1.182,27,1.275,29,1.517,30,1.535,33,1.182,34,0.029,35,2.323,36,0.651,37,1.995,38,1.822,225,0.469,226,0.559,236,0.366,237,0.613,424,1.095,442,0.021,443,0.021,456,1.479,457,1.479,474,1.439,537,1.182,538,1.812,555,2.905,556,2.595,572,4.587,577,3.01,581,3.01,591,4.697,953,2.5,1164,5.242,1165,3.319,1166,5.588,1167,5.062,1168,5.062,1169,5.062,1170,3.948,1171,3.948,1172,3.948,1173,3.948,1174,6.094,1175,5.894,1176,3.948,1177,3.948,1178,3.948,1179,3.948,1180,3.948]],["title/interfaces/LatestTransmissionsResponseScema.html",[444,0.962,487,1.511]],["body/interfaces/LatestTransmissionsResponseScema.html",[3,0.335,4,0.335,9,0.335,23,0.529,24,1.213,34,0.029,36,0.793,225,0.38,236,0.571,442,0.022,443,0.022,444,1.803,445,1.201,446,2.046,447,2.23,454,1.814,459,1.743,464,0.96,466,3.185,474,1.498,475,1.391,476,3.668,477,2.444,478,2.444,479,1.293,480,1.886,481,2.444,482,2.444,483,2.23,484,1.886,485,2.444,486,2.444,487,2.383,488,2.978,489,3.557,490,3.557,491,3.557,492,2.444,493,2.444,494,2.444,495,2.444,496,2.444]],["title/interfaces/OninitResponseSchema.html",[444,0.962,1181,2.164]],["body/interfaces/OninitResponseSchema.html",[3,0.281,4,0.281,9,0.281,23,0.443,24,1.081,25,1.353,33,1.221,34,0.029,36,0.595,38,1.353,68,2.411,154,2.305,225,0.484,226,0.488,236,0.429,237,0.535,439,1.456,442,0.02,443,0.02,444,1.007,445,1.007,446,1.716,461,1.581,464,1.306,473,1.87,475,1.77,479,1.644,480,2.399,488,1.716,510,2.049,519,1.87,537,0.805,551,1.462,559,1.354,561,1.906,689,3.033,715,2.512,736,1.462,841,3.406,849,2.753,852,2.837,908,1.716,931,2.837,934,2.837,944,3.674,950,2.837,952,2.837,953,2.218,954,2.837,1023,2.535,1067,2.265,1068,1.87,1069,2.049,1070,3.846,1073,2.535,1075,2.535,1076,2.535,1082,2.535,1084,3.406,1086,2.535,1181,3.043,1182,2.535,1183,2.265,1184,2.535,1185,2.897,1186,2.897,1187,2.897,1188,2.897,1189,2.897,1190,2.897,1191,2.897,1192,2.897,1193,2.897,1194,2.897,1195,2.897,1196,2.897,1197,2.535,1198,2.897,1199,2.535,1200,3.892,1201,2.897,1202,2.897,1203,2.897,1204,2.897,1205,2.897,1206,2.897,1207,2.897,1208,2.897,1209,2.897,1210,2.897,1211,2.897,1212,3.892,1213,2.897,1214,2.897,1215,2.897,1216,2.897,1217,2.897,1218,2.897,1219,2.897]],["title/interfaces/RangeDataSchema.html",[444,0.962,484,1.511]],["body/interfaces/RangeDataSchema.html",[3,0.351,4,0.351,9,0.351,23,0.555,24,1.251,34,0.029,36,0.689,225,0.399,236,0.579,442,0.023,443,0.023,444,1.829,445,1.261,446,2.148,447,2.341,454,1.788,459,1.83,464,1.422,466,2.898,474,1.573,475,1.461,476,3.184,477,2.566,478,2.566,479,1.357,480,1.98,481,2.566,482,2.566,483,3.158,484,2.457,485,2.566,486,2.566,487,1.98,488,2.148,489,2.566,490,2.566,491,2.566,492,2.566,493,2.566,494,2.566,495,2.566,496,2.566,1220,5.821]],["title/components/RealTimeChartComponent.html",[0,0.83,437,1.115]],["body/components/RealTimeChartComponent.html",[0,0.714,1,0.437,2,1.001,3,0.105,4,0.105,5,0.643,6,0.643,7,0.643,8,0.643,9,0.105,13,0.857,14,1.001,15,0.643,16,2.347,17,1.999,19,1.086,21,1.086,23,0.166,24,0.51,25,1.502,27,0.55,28,1.659,29,0.592,30,1.498,33,1.172,34,0.029,35,1.301,36,0.774,37,1.777,38,1.534,39,1.434,61,2.452,62,2.452,64,2.449,67,2.452,68,2.063,70,1.834,84,1.605,105,2.085,106,0.949,108,1.434,110,0.848,121,2.19,152,2.085,175,1.605,225,0.345,226,0.183,227,2.347,228,0.949,229,2.561,236,0.119,237,0.2,238,2.085,266,1.529,276,1.659,281,1.434,282,1.434,284,1.434,287,1.297,290,1.808,322,2.975,326,1.659,334,1.808,339,1.685,345,3.098,414,1.434,418,1.358,419,1.086,420,1.086,421,0.643,422,2.013,423,0.643,424,1.019,425,0.643,426,0.47,427,0.643,428,0.47,429,0.643,430,0.437,431,0.547,432,0.643,433,0.47,434,0.643,435,0.47,436,0.643,437,1.128,438,1.92,439,2.067,440,0.643,441,0.643,442,0.009,443,0.009,454,1.169,456,1.258,457,1.258,464,1.006,475,1.698,479,0.686,483,0.7,508,0.767,519,1.538,551,0.547,559,0.507,561,0.47,581,1.297,587,0.949,590,2.452,687,1.605,689,1.184,690,1.605,715,1.184,736,0.547,755,1.605,757,0.949,761,2.983,770,1.605,784,1.605,797,1.605,844,0.949,845,2.383,846,1.834,848,1.834,849,1.297,851,1.834,852,3.066,854,2.383,856,1.834,857,1.085,859,1.085,866,1.434,870,1.834,871,1.834,872,1.834,873,1.834,875,3.62,876,2.802,877,1.834,878,1.834,879,1.834,880,1.834,881,1.834,882,1.834,883,2.802,884,1.834,885,1.834,886,1.834,887,1.834,888,2.383,889,2.085,890,1.834,891,2.802,892,2.802,893,2.802,897,1.085,898,1.085,900,1.085,901,1.085,902,1.085,903,1.085,904,1.085,906,1.434,907,1.085,908,0.643,913,0.848,916,1.085,917,1.085,922,1.085,923,1.085,931,1.184,934,1.538,950,1.538,952,1.538,953,1.58,954,1.538,958,3.132,1007,2.383,1008,2.802,1009,2.802,1010,1.085,1011,1.085,1012,1.085,1013,1.085,1014,1.085,1015,1.085,1016,1.085,1018,1.085,1019,2.802,1020,2.383,1021,2.383,1024,1.085,1025,1.834,1028,1.085,1029,1.834,1030,1.834,1031,1.085,1041,1.834,1044,1.085,1046,1.085,1047,1.085,1048,2.383,1049,1.834,1064,1.085,1099,3.933,1221,5.03,1222,2.182,1223,2.182,1224,2.182,1225,3.333,1226,2.182,1227,3.333,1228,2.834,1229,2.182,1230,2.182,1231,2.182,1232,2.182,1233,1.291,1234,1.291,1235,1.291,1236,1.291,1237,1.291,1238,1.291,1239,1.291,1240,1.291,1241,1.291,1242,1.291,1243,1.291,1244,1.291,1245,1.291,1246,1.291,1247,1.291,1248,1.291,1249,1.291,1250,1.291,1251,1.291,1252,1.291,1253,1.291,1254,1.291,1255,1.291,1256,1.291,1257,0.949,1258,1.291,1259,1.291,1260,1.291,1261,1.291,1262,1.291,1263,1.291,1264,1.291,1265,1.291,1266,1.291,1267,1.291,1268,1.291,1269,1.291,1270,1.291,1271,1.291,1272,1.291,1273,1.291,1274,1.291,1275,1.291,1276,1.291,1277,1.291,1278,1.291,1279,1.291,1280,1.291,1281,1.291,1282,1.291,1283,1.291,1284,1.291,1285,1.291,1286,1.291,1287,1.291,1288,1.291,1289,1.291,1290,1.291,1291,1.291,1292,1.291,1293,1.291,1294,1.291,1295,1.291,1296,1.291,1297,1.291,1298,1.291,1299,1.291,1300,1.291,1301,1.291,1302,1.291,1303,1.291,1304,1.291,1305,1.291,1306,1.291,1307,1.291,1308,1.291,1309,1.291,1310,1.291,1311,1.291,1312,1.291,1313,1.291,1314,1.291,1315,1.291,1316,1.291,1317,1.291,1318,1.291,1319,1.291,1320,1.291,1321,1.291,1322,1.291,1323,2.182,1324,1.291,1325,1.291,1326,1.291,1327,1.291,1328,1.291,1329,1.291,1330,2.182,1331,1.291,1332,1.291,1333,1.291,1334,1.291,1335,1.291,1336,1.291,1337,1.291,1338,1.291,1339,1.291,1340,1.291,1341,1.291,1342,1.291,1343,1.291,1344,1.291,1345,1.291,1346,1.291,1347,1.291,1348,1.291,1349,1.291,1350,1.291,1351,1.291,1352,1.291,1353,1.291,1354,1.291,1355,1.291]],["title/injectables/RealTimeUseCases.html",[519,1.787,537,0.769]],["body/injectables/RealTimeUseCases.html",[3,0.243,4,0.243,9,0.243,14,1.923,23,0.383,25,1.416,27,1.056,29,0.809,30,1.325,33,1.342,34,0.029,36,0.676,38,1.225,68,2.319,154,2.618,225,0.449,226,0.422,236,0.388,237,0.463,424,1.137,439,1.807,442,0.018,443,0.018,444,0.871,445,1.416,454,1.427,456,1.536,457,1.536,461,1.923,464,1.294,466,2.087,473,2.274,475,1.009,479,0.938,480,2.412,488,1.484,510,2.492,519,2.274,537,0.696,538,1.368,551,1.265,559,1.171,561,1.767,689,1.618,715,2.274,736,1.265,841,3.565,849,2.882,852,3.322,866,3.185,908,1.484,931,2.629,934,2.629,944,1.96,950,2.629,952,2.629,953,2.056,954,2.629,1023,2.193,1060,1.773,1067,1.96,1068,1.618,1069,1.773,1070,3.565,1073,2.193,1075,3.083,1076,3.083,1082,2.193,1084,3.565,1086,2.193,1181,1.96,1182,4.075,1183,3.641,1184,2.193,1185,2.506,1186,2.506,1187,3.523,1188,3.523,1189,3.523,1190,3.523,1191,2.506,1192,2.506,1193,2.506,1194,2.506,1195,2.506,1196,2.506,1197,2.193,1198,2.506,1199,2.193,1200,3.523,1201,3.523,1202,3.523,1203,3.523,1204,3.523,1205,2.506,1206,2.506,1207,2.506,1208,2.506,1209,3.523,1210,2.506,1211,2.506,1212,3.523,1213,2.506,1214,2.506,1215,2.506,1216,2.506,1217,2.506,1218,2.506,1219,2.506,1356,4.191,1357,4.191,1358,2.981,1359,2.981,1360,2.981,1361,2.981,1362,2.981,1363,2.981,1364,2.981]],["title/interfaces/SessionInfoSchema.html",[444,0.962,479,1.036]],["body/interfaces/SessionInfoSchema.html",[3,0.34,4,0.34,9,0.34,23,0.537,24,1.225,34,0.029,36,0.774,225,0.387,236,0.574,442,0.022,443,0.022,444,1.811,445,1.22,446,2.079,447,2.266,454,1.801,459,1.771,464,1.405,466,3.086,474,1.522,475,1.414,476,3.119,477,2.483,478,2.483,479,1.65,480,2.761,481,3.578,482,3.578,483,3.112,484,1.916,485,2.483,486,2.483,487,1.916,488,2.079,489,2.483,490,2.483,491,2.483,492,2.483,493,2.483,494,2.483,495,2.483,496,2.483]],["title/modules/SharedModule.html",[497,1.294,605,1.787]],["body/modules/SharedModule.html",[3,0.317,4,0.317,9,0.317,34,0.029,225,0.585,226,0.552,236,0.361,237,0.605,418,1.421,428,2.408,433,2.408,435,2.408,442,0.021,443,0.021,497,1.531,499,1.653,503,2.724,504,3.693,505,2.562,521,3.303,522,2.115,523,2.318,536,2.765,597,2.115,598,2.318,605,3.602,607,3.3,608,2.562,609,2.115,620,4.22,621,2.867,624,3.3,625,1.941,1365,3.276,1366,3.276,1367,3.276,1368,3.898,1369,3.898,1370,3.898,1371,3.898]],["title/coverage.html",[1372,3.774]],["body/coverage.html",[0,1.505,1,1.054,3,0.254,9,0.254,10,2.618,11,2.047,12,2.618,25,1.263,34,0.029,36,0.401,156,2.618,229,1.852,266,3.116,414,2.047,426,1.135,428,1.135,430,1.054,433,1.135,435,1.135,437,1.054,439,1.685,442,0.018,443,0.018,444,1.702,445,0.91,447,3.054,464,1.009,475,1.054,479,0.98,484,1.429,487,1.429,506,2.047,508,1.852,510,1.852,512,2.047,513,2.291,515,2.047,516,2.291,518,1.852,519,1.69,537,1.395,539,2.618,553,2.84,569,2.618,577,1.852,606,1.852,646,2.618,648,2.618,649,2.618,679,3.65,718,2.291,842,2.618,843,2.047,844,3.179,909,2.291,910,2.291,911,2.291,912,2.291,913,2.047,953,1.321,1055,2.618,1056,2.618,1057,2.618,1099,2.047,1108,2.618,1119,3.261,1120,2.618,1126,2.618,1132,2.618,1139,2.618,1164,2.618,1165,2.618,1181,2.047,1182,3.179,1183,2.84,1184,3.179,1221,2.618,1257,2.291,1372,2.618,1373,3.114,1374,3.114,1375,5.358,1376,5.629,1377,3.114,1378,5.629,1379,3.114,1380,4.321,1381,3.114,1382,3.114,1383,3.114,1384,5.629,1385,2.618,1386,6.427,1387,2.618,1388,2.618,1389,4.549,1390,6.09,1391,2.618,1392,2.618,1393,3.114,1394,3.114]],["title/dependencies.html",[597,2.148,1395,2.025]],["body/dependencies.html",[34,0.029,226,0.605,232,4.474,233,3.593,234,4.474,235,4.474,442,0.023,443,0.023,474,1.558,505,2.809,597,2.319,598,2.542,614,4.474,615,3.916,621,3.144,625,2.128,680,3.593,715,2.319,716,3.144,1396,4.274,1397,6.522,1398,4.274,1399,4.274,1400,4.274,1401,4.274,1402,4.274,1403,4.274,1404,4.274,1405,4.274,1406,4.274,1407,4.274,1408,4.274,1409,4.274,1410,4.274,1411,4.274,1412,4.274,1413,4.274,1414,4.274,1415,4.274,1416,4.274,1417,4.274,1418,4.274,1419,4.274,1420,4.274,1421,4.274,1422,4.274,1423,4.274,1424,4.274,1425,4.274,1426,4.274,1427,4.274]],["title/miscellaneous/functions.html",[1428,1.809,1429,3.328]],["body/miscellaneous/functions.html",[23,0.536,25,1.674,34,0.029,36,0.536,37,2.035,38,1.757,39,4.266,229,3.407,424,1.388,442,0.022,443,0.022,456,1.875,457,1.875,689,2.26,849,3.115,909,3.853,911,3.853,912,3.853,913,3.443,1257,3.853,1389,3.065,1391,4.403,1392,4.403,1428,2.738,1429,3.502,1430,5.456,1431,4.166,1432,5.729,1433,4.166,1434,4.166,1435,4.166,1436,4.166,1437,4.166,1438,4.166]],["title/index.html",[23,0.354,1439,2.752,1440,2.752]],["body/index.html",[0,1.433,4,0.334,13,1.611,17,1.739,34,0.022,42,4.781,56,3.447,158,3.447,159,4.359,424,0.887,442,0.022,443,0.022,462,3.135,609,2.225,906,2.695,953,1.739,1058,3.084,1183,3.738,1197,3.016,1199,4.535,1395,3.016,1441,5.185,1442,4.1,1443,5.687,1444,3.447,1445,4.1,1446,5.185,1447,6.394,1448,4.1,1449,4.1,1450,4.1,1451,4.1,1452,4.1,1453,4.1,1454,4.1,1455,4.1,1456,5.687,1457,4.1,1458,5.976,1459,4.1,1460,4.1,1461,4.1,1462,4.1,1463,5.185,1464,5.185,1465,5.976,1466,4.1,1467,4.1,1468,4.1,1469,4.1,1470,4.1,1471,5.185,1472,4.1,1473,4.1,1474,4.1,1475,4.1,1476,4.1,1477,4.1,1478,5.687,1479,4.1,1480,4.1,1481,4.1,1482,3.016,1483,4.1,1484,4.1]],["title/modules.html",[499,1.904]],["body/modules.html",[34,0.025,442,0.025,443,0.025,498,2.928,499,2.089,596,3.236,604,2.928,605,2.671,615,4.535,1093,3.236,1097,2.928,1485,6.164,1486,6.164,1487,6.578,1488,6.164,1489,6.164]],["title/overview.html",[1482,3.303]],["body/overview.html",[1,1.857,2,1.743,34,0.029,418,1.385,426,2.291,428,2.291,430,1.857,433,2.291,435,2.291,437,1.857,442,0.021,443,0.021,446,1.892,497,1.493,498,3.263,499,1.612,521,2.259,523,2.259,536,1.892,538,1.743,596,4.385,597,2.061,598,2.259,599,3.194,600,3.194,601,3.194,602,3.194,603,3.194,604,3.263,605,3.59,606,3.263,607,3.246,608,2.497,609,2.061,635,2.259,1093,4.27,1094,3.194,1095,3.194,1096,3.194,1097,3.263,1365,3.194,1366,3.194,1367,3.194,1482,2.795,1490,4.938,1491,4.938,1492,3.8]],["title/properties.html",[24,0.925,1395,2.025]],["body/properties.html",[24,1.23,34,0.027,442,0.026,443,0.026,1444,4.428,1493,5.267]],["title/routes.html",[635,2.67]],["body/routes.html",[34,0.026,442,0.026,443,0.026,635,3.16]],["title/miscellaneous/variables.html",[1428,1.809,1494,3.328]],["body/miscellaneous/variables.html",[23,0.556,34,0.029,36,0.783,37,1.973,38,1.703,68,1.699,73,3.524,350,3.636,442,0.023,443,0.023,553,4.004,561,1.577,581,2.572,679,3.182,716,3.182,718,3.944,761,2.572,910,3.944,1385,4.507,1387,3.636,1388,3.636,1389,3.182,1428,2.843,1430,3.636,1494,3.636,1495,4.325,1496,4.325,1497,5.362,1498,5.362,1499,4.325,1500,4.325,1501,4.325,1502,5.362,1503,4.325,1504,4.325,1505,4.325,1506,4.325,1507,4.325,1508,4.325,1509,4.325,1510,5.362,1511,4.325,1512,4.325,1513,4.325]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":266,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{}}}],["0.1",{"_index":302,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["0.11.4",{"_index":1427,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":319,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["0.2s",{"_index":809,"title":{},"body":{"components/ChartsComponent.html":{}}}],["0.35",{"_index":820,"title":{},"body":{"components/ChartsComponent.html":{}}}],["0.8em",{"_index":342,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["0/1",{"_index":1386,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1383,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1381,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1382,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1375,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1376,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["003147",{"_index":304,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["010f1d",{"_index":1163,"title":{},"body":{"components/HeaderComponent.html":{}}}],["02",{"_index":102,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["03a9f4",{"_index":361,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["080fe1",{"_index":385,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["081921",{"_index":373,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["0b043f",{"_index":834,"title":{},"body":{"components/ChartsComponent.html":{}}}],["1",{"_index":889,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["1))].station,start,end).topromise",{"_index":1092,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["1.0.0",{"_index":1493,"title":{},"body":{"properties.html":{}}}],["1.10.0",{"_index":1415,"title":{},"body":{"dependencies.html":{}}}],["1.3.1",{"_index":1420,"title":{},"body":{"dependencies.html":{}}}],["1.4em",{"_index":340,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["1.5em",{"_index":333,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["10.0.0",{"_index":1417,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":281,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["1000",{"_index":590,"title":{},"body":{"components/AppComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["1000px",{"_index":283,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["103",{"_index":823,"title":{},"body":{"components/ChartsComponent.html":{}}}],["10px",{"_index":353,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["12.2.0",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["12.2.18",{"_index":1445,"title":{},"body":{"index.html":{}}}],["125699",{"_index":831,"title":{},"body":{"components/ChartsComponent.html":{}}}],["13",{"_index":877,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["132",{"_index":881,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["150px",{"_index":389,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["15px",{"_index":363,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{}}}],["1615a5186",{"_index":86,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{}}}],["168px",{"_index":814,"title":{},"body":{"components/ChartsComponent.html":{}}}],["16px",{"_index":387,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["17px",{"_index":819,"title":{},"body":{"components/ChartsComponent.html":{}}}],["18px",{"_index":360,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["19.0.3",{"_index":1421,"title":{},"body":{"dependencies.html":{}}}],["1976d2",{"_index":825,"title":{},"body":{"components/ChartsComponent.html":{}}}],["1fr",{"_index":296,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["1px",{"_index":315,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["2.1.2",{"_index":1423,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1425,"title":{},"body":{"dependencies.html":{}}}],["2.30.1",{"_index":1413,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1406,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":878,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["20.5.0",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":369,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["200px",{"_index":293,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["2017",{"_index":218,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["2020",{"_index":209,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["2022",{"_index":162,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["2023",{"_index":139,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["207",{"_index":807,"title":{},"body":{"components/ChartsComponent.html":{}}}],["20px",{"_index":314,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{}}}],["24px",{"_index":793,"title":{},"body":{"components/ChartsComponent.html":{}}}],["255",{"_index":318,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["27999299",{"_index":88,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["280df5",{"_index":804,"title":{},"body":{"components/ChartsComponent.html":{}}}],["2fr",{"_index":297,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["3.1.9",{"_index":1408,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":1412,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":784,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["300",{"_index":343,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["30px",{"_index":359,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{}}}],["32px",{"_index":789,"title":{},"body":{"components/ChartsComponent.html":{}}}],["350",{"_index":386,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["350px",{"_index":383,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["35px",{"_index":299,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["3px",{"_index":818,"title":{},"body":{"components/ChartsComponent.html":{}}}],["4.18.2",{"_index":1410,"title":{},"body":{"dependencies.html":{}}}],["4.4.1",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["4.5,4.5,4.5,2.5,4,3,3,3,2.5,4,3,3,2.8,3,2.3,4.5",{"_index":66,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["40",{"_index":414,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{}}}],["400",{"_index":365,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["40px",{"_index":305,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["45",{"_index":410,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["4px",{"_index":802,"title":{},"body":{"components/ChartsComponent.html":{}}}],["5.3.2",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":322,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["500",{"_index":397,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{}}}],["50000",{"_index":949,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["50px",{"_index":289,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["55px",{"_index":300,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["5px",{"_index":374,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["6",{"_index":1490,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":1422,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":416,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["600",{"_index":338,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["600px",{"_index":402,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["60px",{"_index":827,"title":{},"body":{"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["6px",{"_index":372,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{}}}],["7",{"_index":1491,"title":{},"body":{"overview.html":{}}}],["70",{"_index":412,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["72px",{"_index":839,"title":{},"body":{"components/ChartsComponent.html":{}}}],["767px",{"_index":836,"title":{},"body":{"components/ChartsComponent.html":{}}}],["8",{"_index":1492,"title":{},"body":{"overview.html":{}}}],["800px",{"_index":1161,"title":{},"body":{"components/HeaderComponent.html":{}}}],["82px",{"_index":788,"title":{},"body":{"components/ChartsComponent.html":{}}}],["848c90",{"_index":392,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["85",{"_index":404,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["888",{"_index":798,"title":{},"body":{"components/ChartsComponent.html":{}}}],["8px",{"_index":795,"title":{},"body":{"components/ChartsComponent.html":{},"components/FooterComponent.html":{}}}],["9",{"_index":806,"title":{},"body":{"components/ChartsComponent.html":{}}}],["90",{"_index":406,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["980px",{"_index":790,"title":{},"body":{"components/ChartsComponent.html":{}}}],["99",{"_index":880,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["a:hover",{"_index":829,"title":{},"body":{"components/ChartsComponent.html":{}}}],["a:visited",{"_index":828,"title":{},"body":{"components/ChartsComponent.html":{}}}],["abidjan",{"_index":207,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["about:last",{"_index":377,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["aboutcandidatecomponent",{"_index":1,"title":{"components/AboutCandidateComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["absolute",{"_index":279,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/HeaderComponent.html":{}}}],["activatedroute",{"_index":692,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["active",{"_index":1143,"title":{},"body":{"components/HeaderComponent.html":{}}}],["active=true",{"_index":1152,"title":{},"body":{"components/HeaderComponent.html":{}}}],["activeroute",{"_index":694,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["activeroute:activatedroute",{"_index":737,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["actual_component",{"_index":441,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["add",{"_index":1474,"title":{},"body":{"index.html":{}}}],["address:\"ariana",{"_index":89,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["adw70",{"_index":417,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["aleatoire",{"_index":1016,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["align",{"_index":310,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["allez",{"_index":751,"title":{},"body":{"components/ChartsComponent.html":{}}}],["analyse",{"_index":117,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["anglais",{"_index":252,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["angular",{"_index":42,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1396,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":505,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":552,"title":{},"body":{"injectables/ApiResourceService.html":{},"modules/AppModule.html":{},"interceptors/Aq54HttpInterceptor.html":{}}}],["angular/compiler",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":226,"title":{},"body":{"components/AboutCandidateComponent.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":621,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":614,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":625,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["animations",{"_index":884,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["années",{"_index":103,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["any),config)}),100",{"_index":1285,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["api",{"_index":154,"title":{},"body":{"components/AboutCandidateComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["api.magentalab.it",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/api.resource.service",{"_index":507,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["api:apiinterface",{"_index":1069,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["apiinterface",{"_index":445,"title":{"interfaces/ApiInterface.html":{}},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/CurrentValuesSchema.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{}}}],["apiproxymodule",{"_index":498,"title":{"modules/ApiProxyModule.html":{}},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apiresourceservice",{"_index":506,"title":{"injectables/ApiResourceService.html":{}},"body":{"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"coverage.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"index.html":{}}}],["app.component",{"_index":617,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":571,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":570,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":426,"title":{"components/AppComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":596,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approfondie",{"_index":125,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["approutingmodule",{"_index":604,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["april",{"_index":873,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["aq54",{"_index":906,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"index.html":{}}}],["aq54httpinterceptor",{"_index":606,"title":{"interceptors/Aq54HttpInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["aquitaine",{"_index":147,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["architecture",{"_index":52,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["array",{"_index":483,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/SessionInfoSchema.html":{}}}],["artifacts",{"_index":1459,"title":{},"body":{"index.html":{}}}],["async",{"_index":852,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["auto",{"_index":330,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["automatically",{"_index":1452,"title":{},"body":{"index.html":{}}}],["aux",{"_index":133,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["available",{"_index":1486,"title":{},"body":{"modules.html":{}}}],["avec",{"_index":100,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["await",{"_index":934,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["backend",{"_index":150,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["background",{"_index":286,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["backgroundcolor",{"_index":882,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["backgroundcolor:getrandomrgb",{"_index":1007,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["bar",{"_index":875,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["bas",{"_index":173,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["base",{"_index":151,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["baseapi",{"_index":540,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["baseapi:\"https://airqino",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baseapi:string=environment.baseapi",{"_index":557,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["beginatzero",{"_index":893,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["behaviorsubject",{"_index":1174,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["behaviorsubject(false",{"_index":1175,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["besoins",{"_index":134,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["bg:any",{"_index":69,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["black",{"_index":396,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["block",{"_index":358,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["bootstrap",{"_index":598,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":270,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["bordercolor",{"_index":67,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["bordercolor:getrandomrgb",{"_index":1044,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["bottom",{"_index":313,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["box",{"_index":268,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["browse",{"_index":1487,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":615,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":619,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":618,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":613,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":832,"title":{},"body":{"components/ChartsComponent.html":{}}}],["build",{"_index":1458,"title":{},"body":{"index.html":{}}}],["builder",{"_index":853,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["builder(st",{"_index":860,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["builder(st:string",{"_index":930,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["buttons",{"_index":759,"title":{},"body":{"components/ChartsComponent.html":{}}}],["c",{"_index":223,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["call",{"_index":1073,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["calls",{"_index":1204,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["cancel",{"_index":760,"title":{},"body":{"components/ChartsComponent.html":{}}}],["candidate",{"_index":18,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate'},{'name",{"_index":425,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["candidate.component",{"_index":627,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["candidate.component.html",{"_index":22,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate.component.scss",{"_index":20,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate.component.ts",{"_index":12,"title":{},"body":{"components/AboutCandidateComponent.html":{},"coverage.html":{}}}],["candidate.component.ts:12",{"_index":224,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate.component.ts:125",{"_index":31,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate.component.ts:128",{"_index":32,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate.component.ts:86",{"_index":72,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["candidate/about",{"_index":11,"title":{},"body":{"components/AboutCandidateComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["canupdate",{"_index":1356,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["canupdate(sessionid",{"_index":1359,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["canupdate(sessionid:number):promise",{"_index":1210,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["capabilities",{"_index":1476,"title":{},"body":{"index.html":{}}}],["capteur",{"_index":757,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["capteurs",{"_index":755,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["capteurs(${d.unit",{"_index":1027,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["card",{"_index":796,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card):hover",{"_index":816,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card.card",{"_index":812,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card.card.highlight",{"_index":826,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card.highlight",{"_index":824,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card:not(.highlight",{"_index":815,"title":{},"body":{"components/ChartsComponent.html":{}}}],["card:not(:last",{"_index":811,"title":{},"body":{"components/ChartsComponent.html":{}}}],["cases.ts",{"_index":1184,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["cases.ts:11",{"_index":1358,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["cases.ts:20",{"_index":1362,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["cases.ts:39",{"_index":1364,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["cases.ts:53",{"_index":1360,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["catch(err:any",{"_index":950,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["catcherror((error:any",{"_index":675,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["catcherror,finalize",{"_index":664,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["center",{"_index":312,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["centres",{"_index":262,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["change",{"_index":1197,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"index.html":{}}}],["changer",{"_index":752,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changerange",{"_index":684,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changerange(station",{"_index":701,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changerange(station:string='',message",{"_index":765,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changestation",{"_index":685,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changestation(ev",{"_index":704,"title":{},"body":{"components/ChartsComponent.html":{}}}],["changestation(ev:any",{"_index":743,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart",{"_index":227,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart',{data:this.data,options",{"_index":1276,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart'},{'name",{"_index":432,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart('chart',config",{"_index":1051,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart('real",{"_index":1275,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart('sc',scatterconfig",{"_index":1054,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart((document.getelementbyid(this.scatters[sc",{"_index":1284,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart(this.times[index],config",{"_index":1354,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component",{"_index":1100,"title":{},"body":{"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{}}}],["chart.component.html",{"_index":846,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.scss",{"_index":845,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts",{"_index":844,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{}}}],["chart.component.ts:106",{"_index":1237,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:12",{"_index":1233,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:123",{"_index":864,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:13",{"_index":858,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:159",{"_index":1249,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:176",{"_index":868,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:18",{"_index":1238,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:19",{"_index":899,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:20",{"_index":905,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:21",{"_index":898,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:218",{"_index":1244,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:22",{"_index":903,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:23",{"_index":902,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:24",{"_index":900,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:244",{"_index":867,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:245",{"_index":1240,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:25",{"_index":901,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:253",{"_index":1234,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:26",{"_index":897,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:269",{"_index":1246,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:27",{"_index":1255,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:28",{"_index":1256,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:285",{"_index":1252,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:29",{"_index":1254,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:30",{"_index":907,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:31",{"_index":894,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:330",{"_index":1242,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:72",{"_index":1253,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:73",{"_index":869,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:74",{"_index":904,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:75",{"_index":1239,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:76",{"_index":865,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.component.ts:90",{"_index":1235,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.component.ts:92",{"_index":861,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chart.config.data.datasets.find((f:any)=>dd.label===f.label",{"_index":1336,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.config.data.datasets.foreach((dt:any",{"_index":1292,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.config.options",{"_index":1295,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.config.options.plugins=config.options.plugins",{"_index":1332,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.config.options.scales.x.max=dt[0].time",{"_index":1333,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart.js",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["chart.js/auto",{"_index":228,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart.update",{"_index":1300,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["chart/diferred",{"_index":843,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"coverage.html":{}}}],["chart/real",{"_index":1099,"title":{},"body":{"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{}}}],["chart:any",{"_index":922,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chart='real",{"_index":730,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chartbardatasets",{"_index":1257,"title":{},"body":{"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["chartbardatasets(stationdata",{"_index":1431,"title":{},"body":{"miscellaneous/functions.html":{}}}],["chartbarddatasets",{"_index":909,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["chartbarddatasets(stationdata",{"_index":1433,"title":{},"body":{"miscellaneous/functions.html":{}}}],["chartdata",{"_index":854,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["chartdata(data",{"_index":863,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["chartdata(data:any",{"_index":955,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["charts",{"_index":680,"title":{},"body":{"components/ChartsComponent.html":{},"dependencies.html":{}}}],["charts'},{'name",{"_index":429,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["charts.component.html",{"_index":682,"title":{},"body":{"components/ChartsComponent.html":{}}}],["charts.component.scss",{"_index":681,"title":{},"body":{"components/ChartsComponent.html":{}}}],["charts/charts.component",{"_index":1370,"title":{},"body":{"modules/SharedModule.html":{}}}],["chartscomponent",{"_index":428,"title":{"components/ChartsComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":1481,"title":{},"body":{"index.html":{}}}],["child",{"_index":378,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["child(2",{"_index":367,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["choice",{"_index":1470,"title":{},"body":{"index.html":{}}}],["class",{"_index":237,"title":{},"body":{"components/AboutCandidateComponent.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"modules/SharedModule.html":{}}}],["clean",{"_index":51,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["clearinterval(this.time",{"_index":1263,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["cli",{"_index":1443,"title":{},"body":{"index.html":{}}}],["clients",{"_index":136,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["cloud",{"_index":54,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["cluster_appmodule",{"_index":599,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":603,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":602,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":601,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":600,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_featuresmodule",{"_index":1094,"title":{},"body":{"modules/FeaturesModule.html":{},"overview.html":{}}}],["cluster_featuresmodule_declarations",{"_index":1096,"title":{},"body":{"modules/FeaturesModule.html":{},"overview.html":{}}}],["cluster_featuresmodule_imports",{"_index":1095,"title":{},"body":{"modules/FeaturesModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1365,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1366,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1367,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cnv",{"_index":1315,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["code",{"_index":158,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["collaboration",{"_index":120,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["color",{"_index":287,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["column",{"_index":309,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["columns",{"_index":295,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["command",{"_index":1471,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":504,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{}}}],["company:\"aladin",{"_index":164,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["company:\"laboratoire",{"_index":180,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["company:\"seewatch",{"_index":144,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["competence",{"_index":65,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["competences",{"_index":261,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["complexes",{"_index":119,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["component",{"_index":0,"title":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"index.html":{}}}],["component:aboutcandidatecomponent",{"_index":639,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:diferreddatachartcomponent",{"_index":1103,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["component:realtimechartcomponent",{"_index":1105,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["component_template",{"_index":423,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"overview.html":{}}}],["compétences",{"_index":114,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["conception",{"_index":109,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["config.data.datasets.foreach((dd:any",{"_index":1335,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["config:any",{"_index":1041,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["confirm",{"_index":762,"title":{},"body":{"components/ChartsComponent.html":{}}}],["console.log(chart.config.data,data",{"_index":1291,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["console.log(data",{"_index":1004,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["console.log(err",{"_index":951,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/GetRangeUsecase.html":{}}}],["console.log(err.message",{"_index":1195,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["console.log(error",{"_index":676,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["console.log(group,item",{"_index":976,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["console.log(item[0],item[1",{"_index":1002,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["console.log(response,sessionid",{"_index":1213,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["console.log(scatterconfig",{"_index":1036,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["console.log(value",{"_index":1219,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["const",{"_index":68,"title":{},"body":{"components/AboutCandidateComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesRoutingModule.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AboutCandidateComponent.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["constructor(@inject('api",{"_index":1068,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["constructor(activeroute",{"_index":691,"title":{},"body":{"components/ChartsComponent.html":{}}}],["constructor(api",{"_index":1060,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"injectables/RealTimeUseCases.html":{}}}],["constructor(http",{"_index":541,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["constructor(isloading",{"_index":576,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(loader",{"_index":652,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["constructor(private",{"_index":558,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["constructor(public",{"_index":668,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["constructor(usecases",{"_index":857,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["contactinfo",{"_index":344,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["contactinfo.education",{"_index":362,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["contactinfo.language",{"_index":370,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["contacts",{"_index":241,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["container",{"_index":278,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["content",{"_index":391,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["core",{"_index":1259,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["correlation",{"_index":1010,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["cors",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["cover",{"_index":328,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["coverage",{"_index":1372,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cssws45",{"_index":409,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["csv",{"_index":1418,"title":{},"body":{"dependencies.html":{}}}],["current",{"_index":510,"title":{},"body":{"modules/ApiProxyModule.html":{},"injectables/GetStationCurrentValuesService.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["currentitem",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentvaluesschema",{"_index":475,"title":{"interfaces/CurrentValuesSchema.html":{}},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/CurrentValuesSchema.html":{},"injectables/GetStationCurrentValuesService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{}}}],["cursor",{"_index":354,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["custom_elements_schema",{"_index":612,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{}}}],["cv",{"_index":1158,"title":{},"body":{"components/HeaderComponent.html":{}}}],["d",{"_index":958,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["d'information",{"_index":204,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["d'un",{"_index":1013,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["d.foreach(item",{"_index":1304,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["d.station",{"_index":1351,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["d.unit",{"_index":1022,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["d.values.map((item:any",{"_index":1349,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["d=data[0].datasets.find((item:any)=>item.label===dt.label",{"_index":1293,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["d=dt[math.floor(math.random()*(dt.length",{"_index":997,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["d?dt.data=dt.data.concat(d.data):null",{"_index":1294,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["dans",{"_index":105,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["data",{"_index":25,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["data,label:item[0",{"_index":1005,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["data.find((d:any)=>d.station==item.label)?item.data=data.find((d:any)=>d.station==item.label)?.data:this.chart.config.data.datasets.splice(index,1",{"_index":1317,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data.foreach((d:any,index:number",{"_index":1345,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data.length?data=this.scatterdata(d,4):null",{"_index":1282,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data.map((item:any)=>({...item,values:object.entries(item.values).map(e=>e[1",{"_index":1325,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data:any",{"_index":238,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["data:any=stationdata.map(item=>({time:item.timestamp,station:item.station_name,values:groupby(item.values,(v:any)=>v.unit",{"_index":1323,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data:d?.scattervalues,label:d.label",{"_index":1006,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["data:diffrange?data.monthdata:data.daydata",{"_index":1043,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["data=data.map((item:any)=>({...item,values:object.entries(item.values).map(e=>e[1",{"_index":1344,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data[0]?.station",{"_index":1296,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["data[0]?.unit",{"_index":1297,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["dataset",{"_index":876,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["datasets",{"_index":61,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["datasets:object.entries(d.dayval).map((item:any",{"_index":1001,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["datasets:this.timedata.filter((f:any)=>f.gunit).map((data:any",{"_index":1042,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["datasets:values.map(s=>({data:[{x:selected.value,y:s.value}],label:`${s.sensor}=f(${selected.sensor",{"_index":1310,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["david",{"_index":83,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{}}}],["dd",{"_index":710,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["dd')!=moment().subtract(1,'days').format('yyyy",{"_index":747,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd')!=this.today",{"_index":749,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd');this.start=moment(this.start).subtract(math.abs(diff),'days').format('yyyy",{"_index":769,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd')||moment(this.start).format('yyyy",{"_index":748,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd')}&&end=${moment(this.end).format('yyyy",{"_index":774,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dd')}`:location.href=`${'/visualisation/diferred?station'}=${this.selected}&&start=${moment(this.start).format('yyyy",{"_index":775,"title":{},"body":{"components/ChartsComponent.html":{}}}],["de",{"_index":64,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["declarations",{"_index":521,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["declare",{"_index":719,"title":{},"body":{"components/ChartsComponent.html":{}}}],["decoration",{"_index":830,"title":{},"body":{"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["default",{"_index":37,"title":{},"body":{"components/AboutCandidateComponent.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["degree:\"baccalauréat",{"_index":219,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["degree:\"licence",{"_index":210,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["degree:\"master",{"_index":203,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["dependencies",{"_index":597,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":121,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["description",{"_index":480,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["descriptioon",{"_index":149,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["detected",{"_index":1198,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["deux",{"_index":101,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["dev",{"_index":1449,"title":{},"body":{"index.html":{}}}],["developer",{"_index":143,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["development",{"_index":56,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["diferred",{"_index":431,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["diferreddatachartcomponent",{"_index":430,"title":{"components/DiferredDataChartComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["diferredmodeusecases",{"_index":518,"title":{"injectables/DiferredModeUsecases.html":{}},"body":{"modules/ApiProxyModule.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"coverage.html":{}}}],["diff",{"_index":766,"title":{},"body":{"components/ChartsComponent.html":{}}}],["different",{"_index":1189,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["diffrange=moment(this.ranges.end).diff(moment(this.ranges.start),'days')>=30",{"_index":1037,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["diffrange?x0=`${starttime[2]}/${starttime[1]}`:null",{"_index":1040,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["diff{this.end=moment(this.end).add(math.abs(diff),'days').format('yyyy",{"_index":768,"title":{},"body":{"components/ChartsComponent.html":{}}}],["différée",{"_index":1154,"title":{},"body":{"components/HeaderComponent.html":{}}}],["direction",{"_index":308,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["directive",{"_index":421,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["directives",{"_index":440,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1457,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1462,"title":{},"body":{"index.html":{}}}],["display",{"_index":290,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["display:true",{"_index":1025,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["dist",{"_index":1461,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":1048,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["div",{"_index":375,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["django",{"_index":45,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["docker",{"_index":57,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["docs",{"_index":1156,"title":{},"body":{"components/HeaderComponent.html":{}}}],["docsurl:\"http://localhost:8080/docs",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":156,"title":{},"body":{"components/AboutCandidateComponent.html":{},"coverage.html":{}}}],["docurl",{"_index":1144,"title":{},"body":{"components/HeaderComponent.html":{}}}],["docurl=environment.docsurl",{"_index":1153,"title":{},"body":{"components/HeaderComponent.html":{}}}],["doing",{"_index":1201,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["doit",{"_index":781,"title":{},"body":{"components/ChartsComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["domaine",{"_index":63,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["données",{"_index":152,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["donnés",{"_index":1012,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["dri",{"_index":85,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{}}}],["dt",{"_index":995,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["dt:any",{"_index":1324,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["dt=chartbarddatasets(d",{"_index":960,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["dt[0].station",{"_index":1331,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["dt[0].values.map((item:any",{"_index":1328,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["dts.push({data:{y:yd.ydata[key][id].y,x:xd.y},label:`${yd.label}=f(${item.label",{"_index":987,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["dts:any",{"_index":983,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["du",{"_index":157,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["duration",{"_index":886,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["dynamic",{"_index":1399,"title":{},"body":{"dependencies.html":{}}}],["début",{"_index":785,"title":{},"body":{"components/ChartsComponent.html":{}}}],["développement",{"_index":107,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["d’architectures",{"_index":172,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["d’intérêts",{"_index":263,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["d’un",{"_index":187,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["e2e",{"_index":1468,"title":{},"body":{"index.html":{}}}],["ease",{"_index":810,"title":{},"body":{"components/ChartsComponent.html":{}}}],["easing",{"_index":887,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["ed",{"_index":275,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["education",{"_index":247,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["educations",{"_index":199,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["eee",{"_index":803,"title":{},"body":{"components/ChartsComponent.html":{}}}],["efficaces",{"_index":130,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["ejs",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["el",{"_index":260,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["element",{"_index":420,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["email1:\"kouame.ndri1998@gmail.com",{"_index":80,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["email2:\"kouame.ndri@supcom.tn",{"_index":81,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["email:\"kouame.ndri1998@gmail.com",{"_index":1114,"title":{},"body":{"components/FooterComponent.html":{}}}],["en",{"_index":97,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["enabled',preloadingstrategy:preloadallmodules",{"_index":645,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":462,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"index.html":{}}}],["end:moment().format('yyyy",{"_index":896,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["end:string=moment().format('yyyy",{"_index":734,"title":{},"body":{"components/ChartsComponent.html":{}}}],["end?this.end=end:null",{"_index":741,"title":{},"body":{"components/ChartsComponent.html":{}}}],["engineer",{"_index":78,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["englishw85",{"_index":403,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["entre",{"_index":1011,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["environment",{"_index":553,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/HeaderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.baseapi",{"_index":550,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["environment.docsurl",{"_index":1149,"title":{},"body":{"components/HeaderComponent.html":{}}}],["error(err.message",{"_index":954,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["et",{"_index":110,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["etat",{"_index":183,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["ev",{"_index":706,"title":{},"body":{"components/ChartsComponent.html":{}}}],["ev?.target.value",{"_index":744,"title":{},"body":{"components/ChartsComponent.html":{}}}],["exceder",{"_index":783,"title":{},"body":{"components/ChartsComponent.html":{}}}],["execute",{"_index":1058,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"index.html":{}}}],["execute(projectname",{"_index":1134,"title":{},"body":{"injectables/GetStationSessionInfoUsecasesService.html":{}}}],["execute(projectname:string):observable",{"_index":1137,"title":{},"body":{"injectables/GetStationSessionInfoUsecasesService.html":{}}}],["execute(start",{"_index":1062,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["execute(start:string,end:string,projectname:string",{"_index":1089,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["execute(station",{"_index":1122,"title":{},"body":{"injectables/GetRangeUsecase.html":{}}}],["execute(station:string,start:string,end:string):promise",{"_index":1124,"title":{},"body":{"injectables/GetRangeUsecase.html":{}}}],["execute(stationname",{"_index":1128,"title":{},"body":{"injectables/GetStationCurrentValuesService.html":{}}}],["experience",{"_index":137,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["export",{"_index":236,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{}}}],["exports",{"_index":536,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["express",{"_index":1409,"title":{},"body":{"dependencies.html":{}}}],["expérience",{"_index":124,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["extended",{"_index":233,"title":{},"body":{"components/AboutCandidateComponent.html":{},"dependencies.html":{}}}],["f0f0f0",{"_index":393,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["fa",{"_index":398,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["factorisation",{"_index":191,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["false",{"_index":581,"title":{},"body":{"components/AppComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":272,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["façon",{"_index":1015,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["features",{"_index":1101,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["featuresmodule",{"_index":1093,"title":{"modules/FeaturesModule.html":{}},"body":{"modules/FeaturesModule.html":{},"modules.html":{},"overview.html":{}}}],["featuresroutingmodule",{"_index":1097,"title":{"modules/FeaturesRoutingModule.html":{}},"body":{"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["february",{"_index":871,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["fetching",{"_index":1084,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["fff",{"_index":288,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["files",{"_index":1454,"title":{},"body":{"index.html":{}}}],["fill",{"_index":797,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["fill:false",{"_index":1046,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["fin",{"_index":786,"title":{},"body":{"components/ChartsComponent.html":{}}}],["finalize",{"_index":673,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["first",{"_index":1473,"title":{},"body":{"index.html":{}}}],["fit",{"_index":327,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["fixed",{"_index":592,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["flask",{"_index":46,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["flex",{"_index":307,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["font",{"_index":271,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["football",{"_index":92,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["footer",{"_index":1109,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":434,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["footer.component.html",{"_index":1111,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1110,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":1371,"title":{},"body":{"modules/SharedModule.html":{}}}],["footercomponent",{"_index":433,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["for(let",{"_index":70,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["formsmodule",{"_index":620,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["fortes",{"_index":113,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["france",{"_index":148,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["français",{"_index":253,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["frenchw100",{"_index":407,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["function",{"_index":1390,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1429,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1477,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1456,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1442,"title":{},"body":{"index.html":{}}}],["genie",{"_index":205,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["gestion",{"_index":166,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["getcurrentvalues",{"_index":448,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getcurrentvalues(stationname",{"_index":453,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getcurrentvalues(stationname:string):observable",{"_index":492,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["gethourlyavg",{"_index":449,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["gethourlyavg(station",{"_index":460,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["gethourlyavg(station:string,start:string,end:string",{"_index":563,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["gethourlyavg(station:string,start:string,end:string):observable",{"_index":495,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["getkey",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getkey(currentitem",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getlatesttransmissionstatus",{"_index":450,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getlatesttransmissionstatus(stationid",{"_index":465,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getlatesttransmissionstatus(stationid:number):observable",{"_index":496,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["getrandomrgb",{"_index":229,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getrange",{"_index":451,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getrange(station",{"_index":469,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getrange(station:string,start:string,end:string",{"_index":567,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["getrange(station:string,start:string,end:string):observable",{"_index":494,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["getrangeusecase",{"_index":515,"title":{"injectables/GetRangeUsecase.html":{}},"body":{"modules/ApiProxyModule.html":{},"injectables/GetRangeUsecase.html":{},"coverage.html":{}}}],["getsessioninfo",{"_index":452,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getsessioninfo(projectname",{"_index":471,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["getsessioninfo(projectname:string):observable",{"_index":493,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["getstationcurrentvaluesservice",{"_index":508,"title":{"injectables/GetStationCurrentValuesService.html":{}},"body":{"modules/ApiProxyModule.html":{},"injectables/GetStationCurrentValuesService.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{}}}],["getstationsessioninfousecasesservice",{"_index":512,"title":{"injectables/GetStationSessionInfoUsecasesService.html":{}},"body":{"modules/ApiProxyModule.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"coverage.html":{}}}],["getting",{"_index":1439,"title":{"index.html":{}},"body":{}}],["give",{"_index":1208,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["go",{"_index":1480,"title":{},"body":{"index.html":{}}}],["gp",{"_index":967,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["gp?gp.values.filter((v:any)=>v.label!=item.label",{"_index":972,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["gp?gp.values.find((v:any)=>v.label===item.label):null",{"_index":970,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["graph",{"_index":1485,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":291,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["group",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group=item.group.find((f:any)=>f.unit===item.unit&&!units.find(u=>u==f.unit",{"_index":966,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["group?.values.foreach((v:any",{"_index":991,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["groupby",{"_index":910,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["groupby(ydata,(g:any)=>g.label",{"_index":975,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["grp",{"_index":974,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["génie",{"_index":98,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["h2",{"_index":331,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["h4",{"_index":368,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["h4:nth",{"_index":366,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["h5",{"_index":364,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["header",{"_index":1140,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":436,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["header.component.html",{"_index":1142,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1141,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":1369,"title":{},"body":{"modules/SharedModule.html":{}}}],["headercomponent",{"_index":435,"title":{"components/HeaderComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":285,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["help",{"_index":1478,"title":{},"body":{"index.html":{}}}],["helps",{"_index":1202,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["here",{"_index":1083,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["hidden",{"_index":324,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["hobbies",{"_index":91,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["html",{"_index":419,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["htmlws30",{"_index":408,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["http",{"_index":544,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["http://localhost:4200",{"_index":1451,"title":{},"body":{"index.html":{}}}],["http:httpclient",{"_index":560,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["http_interceptors",{"_index":622,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":542,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["httpclientmodule",{"_index":623,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":661,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["httphandler",{"_index":657,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["httpinterceptor",{"_index":662,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["httprequest",{"_index":655,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["i=0;i",{"_index":71,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["i=0;iu.label===s.station).foreach((item:any,index:number",{"_index":1316,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["icon",{"_index":356,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["icon:'error",{"_index":776,"title":{},"body":{"components/ChartsComponent.html":{}}}],["icon:'warning",{"_index":758,"title":{},"body":{"components/ChartsComponent.html":{}}}],["icons",{"_index":792,"title":{},"body":{"components/ChartsComponent.html":{}}}],["icons:not(:last",{"_index":794,"title":{},"body":{"components/ChartsComponent.html":{}}}],["identifier",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["if(d",{"_index":998,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["if(data.length",{"_index":1289,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["if(diff",{"_index":771,"title":{},"body":{"components/ChartsComponent.html":{}}}],["if(moment(this.end).format('yyyy",{"_index":746,"title":{},"body":{"components/ChartsComponent.html":{}}}],["if(request.url.includes('getrange')||request.url.includes('getsessioninfo",{"_index":670,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["if(resp",{"_index":772,"title":{},"body":{"components/ChartsComponent.html":{}}}],["if(selectedsensor",{"_index":1303,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["if(st",{"_index":932,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["if(station",{"_index":745,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["if(ydata.length&&xdata",{"_index":978,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["ilws60",{"_index":415,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["img",{"_index":325,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["imgbx",{"_index":320,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["implements",{"_index":13,"title":{},"body":{"components/AboutCandidateComponent.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"index.html":{}}}],["implicites",{"_index":193,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["import",{"_index":225,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{}}}],["important",{"_index":1118,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["imports",{"_index":522,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index:0",{"_index":594,"title":{},"body":{"components/AppComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["information",{"_index":1077,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["informatiques",{"_index":212,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["ingénieur",{"_index":179,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["initchartbar",{"_index":1225,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["initscatter",{"_index":1226,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["initscatter(d",{"_index":1236,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["initscatter(d:currentvaluesschema",{"_index":1280,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["inject",{"_index":908,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["inject('diferred:mode",{"_index":914,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["inject('realtime:mode",{"_index":1261,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["injectable",{"_index":537,"title":{"injectables/ApiResourceService.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"injectables/IsLoadingService.html":{},"injectables/RealTimeUseCases.html":{}},"body":{"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["injectable({providedin:'root",{"_index":1067,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["injectable,inject",{"_index":1130,"title":{},"body":{"injectables/GetStationCurrentValuesService.html":{}}}],["injectables",{"_index":538,"title":{},"body":{"injectables/ApiResourceService.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"injectables/IsLoadingService.html":{},"injectables/RealTimeUseCases.html":{},"overview.html":{}}}],["inline",{"_index":357,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["input",{"_index":714,"title":{},"body":{"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["input('chart",{"_index":729,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('scatters",{"_index":725,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('selectedstation",{"_index":731,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('stations",{"_index":727,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('times",{"_index":723,"title":{},"body":{"components/ChartsComponent.html":{}}}],["input('title",{"_index":1150,"title":{},"body":{"components/HeaderComponent.html":{}}}],["inputs",{"_index":686,"title":{},"body":{"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["integrated_sensors",{"_index":482,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["intercept",{"_index":651,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["intercept(request",{"_index":654,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["interceptor",{"_index":646,"title":{"interceptors/Aq54HttpInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptor.interceptor.ts",{"_index":649,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{},"coverage.html":{}}}],["interceptor.interceptor.ts:14",{"_index":653,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["interceptor.interceptor.ts:16",{"_index":660,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["interceptor.interceptor.ts:18",{"_index":658,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["interceptors",{"_index":647,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["interest",{"_index":394,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["interface",{"_index":444,"title":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{}}}],["interfaces",{"_index":446,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"overview.html":{}}}],["interfonctionnelles",{"_index":123,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["internet",{"_index":94,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["isloading",{"_index":573,"title":{},"body":{"components/AppComponent.html":{}}}],["isloading:isloadingservice",{"_index":586,"title":{},"body":{"components/AppComponent.html":{}}}],["isloadingservice",{"_index":577,"title":{"injectables/IsLoadingService.html":{}},"body":{"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"injectables/IsLoadingService.html":{},"coverage.html":{}}}],["item",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item.company",{"_index":258,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item.degree",{"_index":249,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item.group.find((g:any)=>g.unit===item.unit",{"_index":968,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item.jobtitle",{"_index":259,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item.map((item:any)=>({y:item.value,x:d.time",{"_index":1350,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["item.map((item:any)=>({y:item.value,x:dt[0].time",{"_index":1329,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["item.school",{"_index":250,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item.station",{"_index":787,"title":{},"body":{"components/ChartsComponent.html":{}}}],["item.time",{"_index":257,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item.year",{"_index":248,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["item['daydata']?item['daydata']=item['daydata'].concat(v.dayvalues):item['daydata']=v.dayvalues",{"_index":993,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item['dayval']=groupby(dts,(d:any)=>d.label",{"_index":988,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item['gunit']=v.unit",{"_index":992,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item['monthdata']?item['monthdata']=item['monthdata'].concat(v.monthdays):item['monthdata']=v.monthdays",{"_index":994,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item['scattervalues']=scatterdata",{"_index":989,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["item[1].map((dt:any)=>({...dt.data",{"_index":1003,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["items",{"_index":311,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["its&&!its.data.find((t:any)=>t.x===dt[0].time)?its.data.push(...dd.data):false",{"_index":1338,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["january",{"_index":870,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["javascript/typescript",{"_index":60,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["jobtitle:\"lead",{"_index":163,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["jobtitle:\"remote",{"_index":141,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["jobtitle:\"sofware",{"_index":77,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["jobtitle:\"stage",{"_index":178,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["jours",{"_index":779,"title":{},"body":{"components/ChartsComponent.html":{}}}],["jquery",{"_index":1411,"title":{},"body":{"dependencies.html":{}}}],["jsws70",{"_index":411,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["juin",{"_index":140,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["justify",{"_index":390,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["k",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":1467,"title":{},"body":{"index.html":{}}}],["know",{"_index":1071,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["kouam",{"_index":75,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["l'unit",{"_index":1020,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["la",{"_index":108,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["label",{"_index":62,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["label:`${data.gunit",{"_index":1045,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["label:`(${item[0].unit",{"_index":1330,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["labels",{"_index":39,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/functions.html":{}}}],["languages",{"_index":251,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["last_transmission_utc",{"_index":488,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["latest",{"_index":1200,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["latesttransmissionsresponsescema",{"_index":487,"title":{"interfaces/LatestTransmissionsResponseScema.html":{}},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{}}}],["latitude",{"_index":489,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["le",{"_index":106,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["learning",{"_index":50,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["lecture",{"_index":95,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["left",{"_index":292,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["left:0",{"_index":595,"title":{},"body":{"components/AppComponent.html":{}}}],["left_side",{"_index":303,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["legend",{"_index":418,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["les",{"_index":175,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["letter",{"_index":346,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["li",{"_index":349,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["line",{"_index":339,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["linear",{"_index":888,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["link",{"_index":838,"title":{},"body":{"components/ChartsComponent.html":{}}}],["linkedin:\"https://linkedin.com/in/kouam",{"_index":1115,"title":{},"body":{"components/FooterComponent.html":{}}}],["linkedin:\"linkedin.com/in/kouam",{"_index":82,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["list",{"_index":350,"title":{},"body":{"components/AboutCandidateComponent.html":{},"miscellaneous/variables.html":{}}}],["list.reduce((previous",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["load",{"_index":1166,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["loadchildren:()=>\"import('./features').then(m=>m.featuresmodule",{"_index":642,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":650,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["loader:isloadingservice",{"_index":669,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["loading.service",{"_index":667,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["loading.service.ts",{"_index":1165,"title":{},"body":{"injectables/IsLoadingService.html":{},"coverage.html":{}}}],["loading.service.ts:13",{"_index":1171,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["loading.service.ts:17",{"_index":1173,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["loading.service.ts:8",{"_index":1176,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["loading.service.ts:9",{"_index":1169,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["logiciel",{"_index":99,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["logicielles",{"_index":127,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["logiciels",{"_index":112,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["longitude",{"_index":490,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["loop",{"_index":890,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["l’aide",{"_index":192,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["l’approche",{"_index":189,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["l’art",{"_index":184,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["machine",{"_index":49,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["maintainaspectratio",{"_index":1277,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["maintenance",{"_index":111,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["make",{"_index":1072,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["mapdata",{"_index":1391,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapdata(data",{"_index":1434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdifereddata",{"_index":911,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapdifereddata(data",{"_index":1435,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapdifereddata(raw_data,this.stationsinfo[1].integrated_sensors",{"_index":940,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["maptolabels",{"_index":912,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["maptolabels(data",{"_index":1436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maptolabels(data,labels",{"_index":959,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["march",{"_index":872,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["margin",{"_index":265,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["matching",{"_index":443,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":821,"title":{},"body":{"components/ChartsComponent.html":{}}}],["matrix",{"_index":190,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["max",{"_index":282,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["media",{"_index":399,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["menu",{"_index":1160,"title":{},"body":{"components/HeaderComponent.html":{}}}],["message",{"_index":702,"title":{},"body":{"components/ChartsComponent.html":{}}}],["mesure",{"_index":1021,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["methode",{"_index":168,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["microservice",{"_index":53,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["microservices",{"_index":198,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["min",{"_index":284,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["min:0",{"_index":1353,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["min:d.time",{"_index":1352,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["min:x0",{"_index":1050,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["miscellaneous",{"_index":1428,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":170,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["mm",{"_index":709,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["mode",{"_index":1056,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"coverage.html":{}}}],["modelisation",{"_index":186,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["moderne",{"_index":215,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["module",{"_index":497,"title":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":499,"title":{"modules.html":{}},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["modèle",{"_index":188,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["moment",{"_index":715,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"dependencies.html":{}}}],["moment().format('yyyy",{"_index":708,"title":{},"body":{"components/ChartsComponent.html":{}}}],["moment().subtract(1,'days').format('yyyy",{"_index":712,"title":{},"body":{"components/ChartsComponent.html":{}}}],["moment(last_transmission_utc",{"_index":1216,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["moment(this.end).diff(moment(this.start),'days",{"_index":767,"title":{},"body":{"components/ChartsComponent.html":{}}}],["mon",{"_index":1157,"title":{},"body":{"components/HeaderComponent.html":{}}}],["more",{"_index":1479,"title":{},"body":{"index.html":{}}}],["morgan",{"_index":1414,"title":{},"body":{"dependencies.html":{}}}],["multi:true",{"_index":630,"title":{},"body":{"modules/AppModule.html":{}}}],["musique",{"_index":93,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["médiatron",{"_index":181,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["n",{"_index":84,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["n'dri",{"_index":76,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["name",{"_index":424,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name:\"david",{"_index":74,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["native",{"_index":55,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["navigate",{"_index":1450,"title":{},"body":{"index.html":{}}}],["ne",{"_index":780,"title":{},"body":{"components/ChartsComponent.html":{}}}],["need",{"_index":1472,"title":{},"body":{"index.html":{}}}],["needed",{"_index":1076,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["nestjs",{"_index":41,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["new",{"_index":953,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":656,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["next.handle(request",{"_index":678,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":672,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["ng",{"_index":1447,"title":{},"body":{"index.html":{}}}],["ng2",{"_index":1416,"title":{},"body":{"dependencies.html":{}}}],["ngmodule",{"_index":503,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngondestroy",{"_index":1227,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["ngoninit",{"_index":28,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["ngx",{"_index":232,"title":{},"body":{"components/AboutCandidateComponent.html":{},"dependencies.html":{}}}],["nodejs",{"_index":40,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["nombre",{"_index":778,"title":{},"body":{"components/ChartsComponent.html":{}}}],["none",{"_index":352,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["not(.circle",{"_index":837,"title":{},"body":{"components/ChartsComponent.html":{}}}],["nouvelle",{"_index":146,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["now.diff(transtime,'minutes',true)==0&&last_transmission_utc?true:true",{"_index":1218,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["now=moment",{"_index":1217,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["null",{"_index":770,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["number",{"_index":466,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["obj=object.entries(grp",{"_index":981,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["object",{"_index":73,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(xgroup).foreach((key:any",{"_index":984,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["observable",{"_index":459,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/CurrentValuesSchema.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["observable,throwerror",{"_index":663,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["once",{"_index":1196,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["onchartsinit",{"_index":1228,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["ondestroy",{"_index":1222,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["oninit(projectname",{"_index":1361,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["oninit(projectname:string):promise",{"_index":1191,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["oninit,ondestroy",{"_index":1260,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["oninitresponseschema",{"_index":1181,"title":{"interfaces/OninitResponseSchema.html":{}},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["ontimeseriechartinit",{"_index":1229,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["ontimeseriechartinit(d",{"_index":1241,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["ontimeseriechartinit(d:currentvaluesschema",{"_index":1340,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["onupdate",{"_index":1357,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["onupdate(station",{"_index":1363,"title":{},"body":{"injectables/RealTimeUseCases.html":{}}}],["onupdate(station:string):promise",{"_index":1205,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["optimising",{"_index":1203,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["option",{"_index":221,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["optional",{"_index":457,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":883,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["order",{"_index":1086,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["oum",{"_index":216,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["out",{"_index":609,"title":{},"body":{"modules/AppModule.html":{},"components/ChartsComponent.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":323,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["overview",{"_index":1482,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":380,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["package",{"_index":1395,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":267,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["page",{"_index":1484,"title":{},"body":{"index.html":{}}}],["paiement",{"_index":155,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["par",{"_index":1279,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["parallel",{"_index":1074,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["parallelexecution",{"_index":1059,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["parallelexecution(stationname",{"_index":1065,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["parallelexecution(stationname:string='',start:string,end:string,projectname:string",{"_index":1078,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["param",{"_index":1070,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["parameters",{"_index":456,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":1419,"title":{},"body":{"dependencies.html":{}}}],["pas",{"_index":782,"title":{},"body":{"components/ChartsComponent.html":{}}}],["path",{"_index":636,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{}}}],["path:'david",{"_index":640,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:'diferred",{"_index":1104,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["path:'real",{"_index":1106,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["path:'visualisation",{"_index":641,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch:'full",{"_index":638,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pau",{"_index":145,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["pdf",{"_index":234,"title":{},"body":{"components/AboutCandidateComponent.html":{},"dependencies.html":{}}}],["pdfdefaultoptions",{"_index":231,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["percent",{"_index":371,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["phone:\"+216",{"_index":87,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["photo",{"_index":329,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["photo:\"assets/david.png",{"_index":79,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["phws40",{"_index":413,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["pick",{"_index":1087,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["place",{"_index":171,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["plage",{"_index":753,"title":{},"body":{"components/ChartsComponent.html":{}}}],["platform",{"_index":1469,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":1009,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["pointer",{"_index":355,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["poppins",{"_index":273,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["position",{"_index":276,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["position:'bottom",{"_index":1031,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["position:'left",{"_index":1028,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["pour",{"_index":131,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["pratique",{"_index":104,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["preloadallmodules",{"_index":634,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloader/is",{"_index":666,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["previous",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["previous[group",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["previous[group].push(currentitem",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primary",{"_index":833,"title":{},"body":{"components/ChartsComponent.html":{}}}],["principes",{"_index":176,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["pris",{"_index":1014,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["private",{"_index":736,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["problèmes",{"_index":116,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["production",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["professionnel",{"_index":255,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["profil",{"_index":254,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["profile:`ingénieur",{"_index":96,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["profiletext",{"_index":306,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["project",{"_index":1441,"title":{},"body":{"index.html":{}}}],["projectname",{"_index":473,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["projet",{"_index":167,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["promise",{"_index":866,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/GetRangeUsecase.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["promise.all",{"_index":1080,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["promise.all(sessioninfo.map(async(station:sessioninfoschema)=>await",{"_index":1192,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["promise.all(this.stations.map(async(s:sessioninfoschema)=>await",{"_index":1342,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AboutCandidateComponent.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"interfaces/SessionInfoSchema.html":{},"properties.html":{}}}],["provide:\"diferred:mode",{"_index":532,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["provide:\"station:range",{"_index":530,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["provide:'api",{"_index":526,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["provide:'realtime:mode",{"_index":534,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["provide:'station:currentval",{"_index":524,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["provide:'station:sessioninfo",{"_index":528,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["provide:http_interceptors",{"_index":629,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":555,"title":{},"body":{"injectables/ApiResourceService.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/IsLoadingService.html":{}}}],["providedin:\"root",{"_index":1136,"title":{},"body":{"injectables/GetStationSessionInfoUsecasesService.html":{}}}],["providers",{"_index":523,"title":{},"body":{"modules/ApiProxyModule.html":{},"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["proxy.module.ts",{"_index":502,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["proxy/api",{"_index":501,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["public",{"_index":572,"title":{},"body":{"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"injectables/IsLoadingService.html":{}}}],["python",{"_index":44,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["quipes",{"_index":122,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["radius",{"_index":321,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["randomly",{"_index":1088,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["range",{"_index":516,"title":{},"body":{"modules/ApiProxyModule.html":{},"injectables/GetRangeUsecase.html":{},"coverage.html":{}}}],["rangedataschema",{"_index":484,"title":{"interfaces/RangeDataSchema.html":{}},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{}}}],["ranges",{"_index":847,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["raw_data",{"_index":1220,"title":{},"body":{"interfaces/RangeDataSchema.html":{}}}],["raw_data,station",{"_index":1090,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["raw_data,station,sessioninfo",{"_index":942,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{}}}],["raw_data,station,sessioninfo:stationinfo",{"_index":933,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["raw_data,station},sessioninfo",{"_index":1079,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["raw_data:array",{"_index":485,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["reactjs",{"_index":43,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["readonly",{"_index":559,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["real",{"_index":438,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["realtime",{"_index":1187,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["realtimechartcomponent",{"_index":437,"title":{"components/RealTimeChartComponent.html":{}},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["realtimeusecases",{"_index":519,"title":{"injectables/RealTimeUseCases.html":{}},"body":{"modules/ApiProxyModule.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["recomandation",{"_index":185,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["recommendation",{"_index":196,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["recommender",{"_index":47,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["record",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirectto:'/visualisation/real",{"_index":637,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1483,"title":{},"body":{"index.html":{}}}],["relative",{"_index":277,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["reload",{"_index":1453,"title":{},"body":{"index.html":{}}}],["repeat(1",{"_index":400,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["repeat(2",{"_index":401,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["repeat(4",{"_index":395,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["request",{"_index":659,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{},"injectables/DiferredModeUsecases.html":{}}}],["require",{"_index":1385,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require:any",{"_index":720,"title":{},"body":{"components/ChartsComponent.html":{}}}],["res?location.href=`${'/visualisation/diferred?station'}=${station}`:null",{"_index":764,"title":{},"body":{"components/ChartsComponent.html":{}}}],["reseaux",{"_index":211,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["reset",{"_index":608,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["response//await",{"_index":1214,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["response=await",{"_index":1211,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["responsive:true",{"_index":1008,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["reste",{"_index":1018,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["results",{"_index":442,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1075,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["retrive",{"_index":1207,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["return",{"_index":561,"title":{},"body":{"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":33,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["rgb(105",{"_index":822,"title":{},"body":{"components/ChartsComponent.html":{}}}],["rgb(255",{"_index":879,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["rgb(75",{"_index":805,"title":{},"body":{"components/ChartsComponent.html":{}}}],["rgba(0",{"_index":301,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["rgba(255",{"_index":317,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["right",{"_index":384,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["right_side",{"_index":376,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["robustes",{"_index":128,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["root",{"_index":556,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/IsLoadingService.html":{}}}],["root'},{'name",{"_index":427,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["routermodule",{"_index":624,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FeaturesRoutingModule.html":{},"modules/SharedModule.html":{}}}],["routermodule.forchild(routes",{"_index":1107,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":643,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":635,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/FeaturesRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":616,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{}}}],["routing.module.ts",{"_index":633,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FeaturesRoutingModule.html":{}}}],["row",{"_index":381,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["run",{"_index":1199,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"index.html":{}}}],["running",{"_index":1463,"title":{},"body":{"index.html":{}}}],["russianw90",{"_index":405,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["rxjs",{"_index":474,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interceptors/Aq54HttpInterceptor.html":{},"interfaces/CurrentValuesSchema.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":665,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["réel",{"_index":1155,"title":{},"body":{"components/HeaderComponent.html":{}}}],["répondre",{"_index":132,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["résolution",{"_index":115,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["s",{"_index":1247,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["sansserif",{"_index":274,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["sc=0;scthis.scatterchart.push({config,chart:new",{"_index":1283,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["scaffolding",{"_index":1455,"title":{},"body":{"index.html":{}}}],["scales",{"_index":891,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["scatter",{"_index":1000,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["scatterchart",{"_index":848,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["scatterchart:any",{"_index":1266,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["scatterchart:any=null",{"_index":918,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["scatterconfig:any",{"_index":999,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["scatterdata",{"_index":1230,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["scatterdata(d",{"_index":1243,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["scatterdata(d:currentvaluesschema[],n:any=null",{"_index":1301,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["scatterdata:array",{"_index":977,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["scatters",{"_index":687,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["scatters:any",{"_index":726,"title":{},"body":{"components/ChartsComponent.html":{}}}],["scatters:string",{"_index":916,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["schemas",{"_index":611,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{}}}],["schemas:[custom_elements_schema",{"_index":628,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{}}}],["school:\"esatic",{"_index":206,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["school:\"lycée",{"_index":214,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["school:\"sup'com",{"_index":200,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["scientifique",{"_index":220,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["screen",{"_index":835,"title":{},"body":{"components/ChartsComponent.html":{}}}],["scrollpositionrestoration",{"_index":644,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["scrum/up",{"_index":59,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["select",{"_index":840,"title":{},"body":{"components/ChartsComponent.html":{}}}],["selected",{"_index":1308,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["selected='smart188",{"_index":732,"title":{},"body":{"components/ChartsComponent.html":{}}}],["selected=item.values.find(v=>v.sensor.tolowercase()===selectedsensor.type.tolowercase",{"_index":1307,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["selectedsensor",{"_index":1223,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["selectedsensor:any",{"_index":1264,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["selectedsensor=this.selectedsensor?this.selectedsensor:this.sensors[n||math.floor(math.random()*(this.sensors.length",{"_index":1302,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["selectedstation",{"_index":688,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["selectedstation:string='smart188",{"_index":920,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["selon",{"_index":1019,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["sensor:selected.sensor",{"_index":1313,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["sensors",{"_index":849,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/functions.html":{}}}],["sensors:any",{"_index":921,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["sensors:array",{"_index":1265,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["sensors:values.map(s=>s.sensor",{"_index":1314,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["serie",{"_index":222,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["serve",{"_index":1448,"title":{},"body":{"index.html":{}}}],["server",{"_index":1446,"title":{},"body":{"index.html":{}}}],["services",{"_index":197,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["session",{"_index":513,"title":{},"body":{"modules/ApiProxyModule.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"coverage.html":{}}}],["sessiond_id",{"_index":481,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["sessionid",{"_index":1209,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["sessioninfo",{"_index":944,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["sessioninfo:sessioninfoschema",{"_index":1186,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["sessioninfoschema",{"_index":479,"title":{"interfaces/SessionInfoSchema.html":{}},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{}}}],["sessions",{"_index":1085,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["setinterval",{"_index":947,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["setinterval(async",{"_index":1272,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["setloading",{"_index":1167,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["setloading(value",{"_index":1170,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["setloading(value=false",{"_index":1177,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["setsettinging",{"_index":1168,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["setsettinging(value",{"_index":1172,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["setsettinging(value=false",{"_index":1179,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["settimeout",{"_index":587,"title":{},"body":{"components/AppComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["setting",{"_index":591,"title":{},"body":{"components/AppComponent.html":{},"injectables/IsLoadingService.html":{}}}],["settingspinner",{"_index":574,"title":{},"body":{"components/AppComponent.html":{}}}],["settingspinner=false",{"_index":585,"title":{},"body":{"components/AppComponent.html":{}}}],["shadow",{"_index":298,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["shared",{"_index":626,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{}}}],["sharedmodule",{"_index":605,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["size",{"_index":332,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["sizing",{"_index":269,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["skills",{"_index":388,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["small",{"_index":813,"title":{},"body":{"components/ChartsComponent.html":{}}}],["smart188",{"_index":697,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["software",{"_index":142,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["solid",{"_index":316,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["solutions",{"_index":126,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["spacer",{"_index":1159,"title":{},"body":{"components/HeaderComponent.html":{}}}],["spacing",{"_index":347,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["span",{"_index":341,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["spinning",{"_index":575,"title":{},"body":{"components/AppComponent.html":{}}}],["spinning=false",{"_index":584,"title":{},"body":{"components/AppComponent.html":{}}}],["src/.../charts.component.ts",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1430,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/@core",{"_index":583,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DiferredDataChartComponent.html":{}}}],["src/@core/api",{"_index":500,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["src/@core/api/api.resource.service.ts",{"_index":539,"title":{},"body":{"injectables/ApiResourceService.html":{},"coverage.html":{}}}],["src/@core/api/api.resource.service.ts:11",{"_index":543,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/api/api.resource.service.ts:15",{"_index":547,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/api/api.resource.service.ts:19",{"_index":546,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/api/api.resource.service.ts:23",{"_index":545,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/api/api.resource.service.ts:27",{"_index":549,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/api/api.resource.service.ts:31",{"_index":548,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["src/@core/interceptor/http",{"_index":648,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{},"coverage.html":{}}}],["src/@core/preloader/is",{"_index":1164,"title":{},"body":{"injectables/IsLoadingService.html":{},"coverage.html":{}}}],["src/app/about",{"_index":10,"title":{},"body":{"components/AboutCandidateComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":632,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":569,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":582,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":578,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":580,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":579,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":610,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/features/diferred",{"_index":842,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"coverage.html":{}}}],["src/app/features/features",{"_index":1102,"title":{},"body":{"modules/FeaturesRoutingModule.html":{}}}],["src/app/features/features.module.ts",{"_index":1098,"title":{},"body":{"modules/FeaturesModule.html":{}}}],["src/app/features/real",{"_index":1221,"title":{},"body":{"components/RealTimeChartComponent.html":{},"coverage.html":{}}}],["src/app/shared/charts/charts.component.ts",{"_index":679,"title":{},"body":{"components/ChartsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/charts/charts.component.ts:16",{"_index":700,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:17",{"_index":696,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:18",{"_index":699,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:19",{"_index":695,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:20",{"_index":698,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:22",{"_index":713,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:23",{"_index":711,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:24",{"_index":693,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:33",{"_index":707,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:44",{"_index":705,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/charts/charts.component.ts:65",{"_index":703,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":1108,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:12",{"_index":1112,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:15",{"_index":1113,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:9",{"_index":1116,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":1139,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts:10",{"_index":1146,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:11",{"_index":1148,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:12",{"_index":1145,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:15",{"_index":1147,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1368,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/domain",{"_index":551,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["src/domain/api/api.interface.ts",{"_index":447,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{}}}],["src/domain/api/api.interface.ts:57",{"_index":455,"title":{},"body":{"interfaces/ApiInterface.html":{}}}],["src/domain/api/api.interface.ts:58",{"_index":472,"title":{},"body":{"interfaces/ApiInterface.html":{}}}],["src/domain/api/api.interface.ts:59",{"_index":470,"title":{},"body":{"interfaces/ApiInterface.html":{}}}],["src/domain/api/api.interface.ts:60",{"_index":463,"title":{},"body":{"interfaces/ApiInterface.html":{}}}],["src/domain/api/api.interface.ts:61",{"_index":467,"title":{},"body":{"interfaces/ApiInterface.html":{}}}],["src/environments/environment.prod",{"_index":554,"title":{},"body":{"injectables/ApiResourceService.html":{},"components/HeaderComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":1387,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1388,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/usecases",{"_index":520,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["src/usecases/diferred",{"_index":1055,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"coverage.html":{}}}],["src/usecases/get",{"_index":1119,"title":{},"body":{"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"coverage.html":{}}}],["src/usecases/real",{"_index":1182,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["src/utils",{"_index":230,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["src/utils.ts",{"_index":1389,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["st",{"_index":862,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["staions",{"_index":1190,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["start",{"_index":461,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["start,end,station}=param",{"_index":739,"title":{},"body":{"components/ChartsComponent.html":{}}}],["start:moment().subtract(1,'days').format('yyyy",{"_index":895,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["start:string=moment().subtract(1,'days').format('yyyy",{"_index":733,"title":{},"body":{"components/ChartsComponent.html":{}}}],["start?this.start=start:null",{"_index":740,"title":{},"body":{"components/ChartsComponent.html":{}}}],["started",{"_index":1440,"title":{"index.html":{}},"body":{}}],["starttime=moment(this.ranges.start).tolocalestring().split",{"_index":1038,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["statements",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["station",{"_index":464,"title":{},"body":{"interfaces/ApiInterface.html":{},"modules/ApiProxyModule.html":{},"injectables/ApiResourceService.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{}}}],["station,start,end}=param",{"_index":925,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["station:d.station",{"_index":1348,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["station:item.station_name",{"_index":1311,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["station:string",{"_index":486,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["station?location.href=`${'/visualisation/diferred?station'}=${station}&&start=${moment(this.start).format('yyyy",{"_index":773,"title":{},"body":{"components/ChartsComponent.html":{}}}],["station?this.builder(station):this.builder",{"_index":929,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["station?this.selected=station:null",{"_index":742,"title":{},"body":{"components/ChartsComponent.html":{}}}],["station_id",{"_index":491,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["station_name",{"_index":476,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["stationdata",{"_index":1432,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stationdata:currentvaluesschema",{"_index":1322,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["stationdata:currentvaluesschema[]=d",{"_index":1341,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["stationdatalabels",{"_index":913,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stationdatalabels(stations",{"_index":1437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stationdatalabels(this.stationsinfo",{"_index":956,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["stationid",{"_index":468,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{}}}],["stationinfo",{"_index":938,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["stationname",{"_index":458,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetStationCurrentValuesService.html":{}}}],["stations",{"_index":689,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/functions.html":{}}}],["stations,sessioninfo",{"_index":1194,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["stations:any",{"_index":728,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{}}}],["stations:currentvaluesschema",{"_index":1185,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["stations:sessioninfoschema",{"_index":1269,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["stationsinfo",{"_index":850,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["stationsinfo:sessioninfoschema",{"_index":919,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["stationval:currentvaluesschema[]=v",{"_index":1287,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["stored",{"_index":1460,"title":{},"body":{"index.html":{}}}],["string",{"_index":454,"title":{},"body":{"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"components/HeaderComponent.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{}}}],["style",{"_index":351,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["support",{"_index":1488,"title":{},"body":{"modules.html":{}}}],["sup’com",{"_index":182,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["sur",{"_index":174,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["svg",{"_index":1489,"title":{},"body":{"modules.html":{}}}],["svg.material",{"_index":791,"title":{},"body":{"components/ChartsComponent.html":{}}}],["swagger",{"_index":160,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["swal",{"_index":718,"title":{},"body":{"components/ChartsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["swal:sweetalert",{"_index":721,"title":{},"body":{"components/ChartsComponent.html":{}}}],["swal=require('sweetalert",{"_index":722,"title":{},"body":{"components/ChartsComponent.html":{}}}],["sweetalert",{"_index":716,"title":{},"body":{"components/ChartsComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["sweetalert/typings/core",{"_index":717,"title":{},"body":{"components/ChartsComponent.html":{}}}],["swimlane/ngx",{"_index":1400,"title":{},"body":{"dependencies.html":{}}}],["system",{"_index":48,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["système",{"_index":195,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["systèmes",{"_index":118,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["t",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":1394,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1393,"title":{},"body":{"coverage.html":{}}}],["technologies,abidjan",{"_index":165,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["telecom",{"_index":213,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["temporelle",{"_index":1049,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["temps",{"_index":754,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{}}}],["tension",{"_index":885,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["tension:0.8",{"_index":1047,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["test",{"_index":1466,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1475,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1465,"title":{},"body":{"index.html":{}}}],["text",{"_index":334,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["text:'le",{"_index":777,"title":{},"body":{"components/ChartsComponent.html":{}}}],["text:'vous",{"_index":756,"title":{},"body":{"components/ChartsComponent.html":{}}}],["text:`${d.label}(${d.unit",{"_index":1032,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["text:`${data[0].sensors.join(',')}(${data[0].unit",{"_index":1298,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["text:`${data[0].sensor}(${data[0].unit",{"_index":1299,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["text:`autres",{"_index":1026,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["then(res",{"_index":763,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.activeroute.queryparams.subscribe((param:any",{"_index":738,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.activeroute.queryparams.subscribe(async(param:any",{"_index":924,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.api.getcurrentvalues(station).topromise",{"_index":1206,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["this.api.getcurrentvalues(station.station).topromise",{"_index":1193,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["this.api.getcurrentvalues(stationname",{"_index":1131,"title":{},"body":{"injectables/GetStationCurrentValuesService.html":{}}}],["this.api.getlatesttransmissionstatus(sessionid).topromise",{"_index":1212,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["this.api.getrange(sessioninfo[math.floor(math.random()*(sessioninfo.length",{"_index":1091,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["this.api.getrange(station,start,end).topromise",{"_index":1125,"title":{},"body":{"injectables/GetRangeUsecase.html":{}}}],["this.api.getrange(stationname,start,end).topromise",{"_index":1081,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["this.api.getsessioninfo(projectname",{"_index":1138,"title":{},"body":{"injectables/GetStationSessionInfoUsecasesService.html":{}}}],["this.api.getsessioninfo(projectname).topromise",{"_index":1082,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["this.builder(station",{"_index":928,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.changerange(station,'vous",{"_index":750,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.chart.update",{"_index":1318,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.chartdata(data",{"_index":941,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.data.datasets=dt",{"_index":961,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.data.labels=labels",{"_index":957,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.http.get(`${this.baseapi}${'getstationstatus'}/${stationid",{"_index":562,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["this.http.get(`${this.baseapi}gethourlyavg/${station}/${start}/${end}?pivot=${true",{"_index":564,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["this.http.get(this.baseapi+`getcurrentvalues/${stationname",{"_index":565,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["this.http.get(this.baseapi+`getrange/${station}/${start}/${end",{"_index":568,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["this.http.get(this.baseapi+`getsessioninfo/${projectname",{"_index":566,"title":{},"body":{"injectables/ApiResourceService.html":{}}}],["this.isloading.load.subscribe((res:boolean",{"_index":588,"title":{},"body":{"components/AppComponent.html":{}}}],["this.load.next(value",{"_index":1178,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["this.loader.setloading(false",{"_index":674,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["this.loader.setloading(true",{"_index":671,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["this.onchartsinit",{"_index":1270,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.ranges.end=end",{"_index":926,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.ranges.start=start",{"_index":927,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterchart",{"_index":1053,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterchart.data=scatterconfig.data",{"_index":1034,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterchart.find((sc:any)=>sc.config.station===station",{"_index":1290,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.scatterchart.options=scatterconfig.options",{"_index":1033,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterchart.update",{"_index":1035,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.scatterdata(d",{"_index":1281,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.scatterdata(stationval",{"_index":1288,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.scatters.push('sc",{"_index":1052,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.selectedstation",{"_index":1017,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.selectedstation=station",{"_index":936,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.setting.next(value",{"_index":1180,"title":{},"body":{"injectables/IsLoadingService.html":{}}}],["this.spinning=res",{"_index":589,"title":{},"body":{"components/AppComponent.html":{}}}],["this.stations.foreach(async(s:any",{"_index":1273,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.stations=this.stationsinfo.map((item:sessioninfoschema)=>({station:item.station,selected:item.station==this.selectedstation?true:false",{"_index":939,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.stations=this.stationsinfo.map((item:sessioninfoschema,index:number)=>({station:item.station,selected:index==0",{"_index":945,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.stationsinfo",{"_index":937,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.stattioncurrentval.execute(s.station).topromise",{"_index":1343,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.time",{"_index":1271,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.timechart",{"_index":946,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.timedata.filter((item:any)=>item.dayval",{"_index":996,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.timedata.foreach((item:any,index:any",{"_index":965,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.timedata=dt",{"_index":962,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.timedata=this.timedata.map((item:any)=>({...item,group:object.entries(groupby(this.timedata,(t:any)=>t.unit)).map((e:any)=>({unit:e[0],values:e[1],label:item.label",{"_index":963,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.times.push(index+\"times\"+date.now",{"_index":1346,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.timescahrt.find((c:any)=>c.config.station===station",{"_index":1326,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.timescahrt.push({chart,config",{"_index":1355,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.updatescatter",{"_index":948,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.updatescatter([stationdata],s.station",{"_index":1320,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.updatetimeseries(stationdata,s.station",{"_index":1319,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.usecases.canupdate(s.sessiond_id)?this.updatedata(s):null",{"_index":1274,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["this.usecases.execute(this.ranges.start,this.ranges.end,this.title",{"_index":943,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["this.usecases.parallelexecution(st,this.ranges.start,this.ranges.end,this.title",{"_index":935,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["throw",{"_index":952,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["throwerror(error",{"_index":677,"title":{},"body":{"interceptors/Aq54HttpInterceptor.html":{}}}],["ticks",{"_index":1029,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["time",{"_index":439,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"modules/FeaturesModule.html":{},"modules/FeaturesRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{}}}],["time:\"depuis",{"_index":161,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["time:\"février",{"_index":177,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["time:\"mars",{"_index":138,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["time:any",{"_index":1268,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["time:d.time",{"_index":1347,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["time:dt[0].time",{"_index":1327,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["timechart",{"_index":855,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["timedata",{"_index":851,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["timedata:any",{"_index":923,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["times",{"_index":690,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["times:any",{"_index":724,"title":{},"body":{"components/ChartsComponent.html":{}}}],["times:string",{"_index":917,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["timescahrt",{"_index":1224,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["timescahrt:any",{"_index":1267,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["timestamp",{"_index":477,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["title",{"_index":345,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["title2",{"_index":379,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["title=\"aq54",{"_index":1151,"title":{},"body":{"components/HeaderComponent.html":{}}}],["today",{"_index":683,"title":{},"body":{"components/ChartsComponent.html":{}}}],["today=moment().format('yyyy",{"_index":735,"title":{},"body":{"components/ChartsComponent.html":{}}}],["toolbar",{"_index":1162,"title":{},"body":{"components/HeaderComponent.html":{}}}],["top",{"_index":326,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["top:60px",{"_index":294,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["transform",{"_index":335,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{}}}],["transition",{"_index":808,"title":{},"body":{"components/ChartsComponent.html":{}}}],["translatey",{"_index":817,"title":{},"body":{"components/ChartsComponent.html":{}}}],["transmission",{"_index":1023,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["transtime",{"_index":1215,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["true",{"_index":761,"title":{},"body":{"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":931,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"injectables/GetRangeUsecase.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{}}}],["tslib",{"_index":1424,"title":{},"body":{"dependencies.html":{}}}],["tunis",{"_index":201,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["tunisie",{"_index":90,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AboutCandidateComponent.html":{},"interfaces/ApiInterface.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"interceptors/Aq54HttpInterceptor.html":{},"components/ChartsComponent.html":{},"interfaces/CurrentValuesSchema.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"injectables/GetRangeUsecase.html":{},"injectables/GetStationCurrentValuesService.html":{},"injectables/GetStationSessionInfoUsecasesService.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/OninitResponseSchema.html":{},"interfaces/RangeDataSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"interfaces/SessionInfoSchema.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type:'line",{"_index":874,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["type:'linear",{"_index":1024,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["types",{"_index":1278,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["ul",{"_index":348,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["uml",{"_index":58,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["unit",{"_index":1464,"title":{},"body":{"index.html":{}}}],["unit:selected?.unit",{"_index":1312,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["units.push(group?.unit",{"_index":990,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["units:any",{"_index":964,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["unknown",{"_index":1064,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"components/RealTimeChartComponent.html":{}}}],["unset",{"_index":801,"title":{},"body":{"components/ChartsComponent.html":{}}}],["up",{"_index":169,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["update",{"_index":1337,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["update=false",{"_index":1334,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["update?chart.update():null",{"_index":1339,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatechartbardata",{"_index":1392,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatechartbardata(stationdata",{"_index":1438,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updatechartbardata,groupby",{"_index":1258,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatedata",{"_index":1231,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatedata(s",{"_index":1245,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatescatter",{"_index":856,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["updatescatter(v",{"_index":1248,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatescatter(v:currentvaluesschema[]=[],station:string",{"_index":1286,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatetimeseries",{"_index":1232,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatetimeseries(d",{"_index":1251,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["updatetimeseries(d:currentvaluesschema,station:string",{"_index":1321,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["uppercase",{"_index":336,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["url(\"https://fonts.googleapis.com/css2?family=poppins:wght@200;300;400;500;600;700;800;900&display=swap",{"_index":264,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["use",{"_index":1183,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{},"coverage.html":{},"index.html":{}}}],["usecase",{"_index":517,"title":{},"body":{"modules/ApiProxyModule.html":{},"injectables/DiferredModeUsecases.html":{}}}],["usecase.ts",{"_index":1120,"title":{},"body":{"injectables/GetRangeUsecase.html":{},"coverage.html":{}}}],["usecase.ts:5",{"_index":1121,"title":{},"body":{"injectables/GetRangeUsecase.html":{}}}],["usecase.ts:8",{"_index":1123,"title":{},"body":{"injectables/GetRangeUsecase.html":{}}}],["usecases",{"_index":859,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["usecases.service",{"_index":514,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["usecases.service.ts",{"_index":1132,"title":{},"body":{"injectables/GetStationSessionInfoUsecasesService.html":{},"coverage.html":{}}}],["usecases.service.ts:13",{"_index":1135,"title":{},"body":{"injectables/GetStationSessionInfoUsecasesService.html":{}}}],["usecases.service.ts:9",{"_index":1133,"title":{},"body":{"injectables/GetStationSessionInfoUsecasesService.html":{}}}],["usecases.ts",{"_index":1057,"title":{},"body":{"injectables/DiferredModeUsecases.html":{},"coverage.html":{}}}],["usecases.ts:18",{"_index":1066,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["usecases.ts:39",{"_index":1063,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["usecases.ts:6",{"_index":1061,"title":{},"body":{"injectables/DiferredModeUsecases.html":{}}}],["usecases/get",{"_index":509,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["usecases:diferredmodeusecases",{"_index":915,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["usecases:realtimeusecases",{"_index":1262,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["useclass:apiresourceservice",{"_index":527,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["useclass:aq54httpinterceptor",{"_index":631,"title":{},"body":{"modules/AppModule.html":{}}}],["useclass:diferredmodeusecases",{"_index":533,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["useclass:getrangeusecase",{"_index":531,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["useclass:getstationcurrentvaluesservice",{"_index":525,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["useclass:getstationsessioninfousecasesservice",{"_index":529,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["useclass:realtimeusecases",{"_index":535,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["user",{"_index":26,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/FooterComponent.html":{}}}],["user.address",{"_index":246,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.email1",{"_index":243,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.email2",{"_index":244,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.email|lowercase",{"_index":1117,"title":{},"body":{"components/FooterComponent.html":{}}}],["user.jobtitle",{"_index":240,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.linkedin",{"_index":245,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.name",{"_index":239,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.phone",{"_index":242,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["user.profile",{"_index":256,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["utilisateurs",{"_index":135,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["utilisation",{"_index":153,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["uvre",{"_index":194,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["v",{"_index":1250,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["v.sensor!=selectedsensor.type",{"_index":1306,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["v.unit===item.unit",{"_index":973,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["value",{"_index":38,"title":{},"body":{"components/AboutCandidateComponent.html":{},"injectables/ApiResourceService.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"injectables/DiferredModeUsecases.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"interfaces/OninitResponseSchema.html":{},"components/RealTimeChartComponent.html":{},"injectables/RealTimeUseCases.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":841,"title":{},"body":{"interfaces/CurrentValuesSchema.html":{},"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["values.length?data.push",{"_index":1309,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["values.service",{"_index":511,"title":{},"body":{"modules/ApiProxyModule.html":{}}}],["values.service.ts",{"_index":1126,"title":{},"body":{"injectables/GetStationCurrentValuesService.html":{},"coverage.html":{}}}],["values.service.ts:11",{"_index":1129,"title":{},"body":{"injectables/GetStationCurrentValuesService.html":{}}}],["values.service.ts:9",{"_index":1127,"title":{},"body":{"injectables/GetStationCurrentValuesService.html":{}}}],["values:array",{"_index":478,"title":{},"body":{"interfaces/ApiInterface.html":{},"interfaces/CurrentValuesSchema.html":{},"interfaces/LatestTransmissionsResponseScema.html":{},"interfaces/RangeDataSchema.html":{},"interfaces/SessionInfoSchema.html":{}}}],["values=item.values.filter(v=>!v.unit?null:v.unit.tolowercase()===selectedsensor.unit?.tolowercase",{"_index":1305,"title":{},"body":{"components/RealTimeChartComponent.html":{}}}],["var",{"_index":422,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["variable",{"_index":1384,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1494,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1444,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":159,"title":{},"body":{"components/AboutCandidateComponent.html":{},"index.html":{}}}],["viewer",{"_index":235,"title":{},"body":{"components/AboutCandidateComponent.html":{},"dependencies.html":{}}}],["visualisation",{"_index":1188,"title":{},"body":{"interfaces/OninitResponseSchema.html":{},"injectables/RealTimeUseCases.html":{}}}],["void",{"_index":35,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/DiferredDataChartComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/IsLoadingService.html":{},"components/RealTimeChartComponent.html":{}}}],["volutives",{"_index":129,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["weight",{"_index":337,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["white",{"_index":800,"title":{},"body":{"components/ChartsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["width",{"_index":280,"title":{},"body":{"components/AboutCandidateComponent.html":{},"components/ChartsComponent.html":{},"components/HeaderComponent.html":{}}}],["wrap",{"_index":799,"title":{},"body":{"components/ChartsComponent.html":{}}}],["x",{"_index":1030,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["x0=`${starttime[1]}/${starttime[3",{"_index":1039,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["xdata",{"_index":969,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["xgroup:any=groupby(xdata.dayvalues,(d:any)=>d.x",{"_index":979,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["xgroup[key].foreach((xd:any,id:number",{"_index":986,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["y",{"_index":892,"title":{},"body":{"components/DiferredDataChartComponent.html":{},"components/RealTimeChartComponent.html":{}}}],["y.foreach((yd:any",{"_index":985,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["y:any",{"_index":980,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["y:any=obj.map((yd:any)=>({label:yd[0],ydata:groupby(yd[1][0].dayvalues,(f:any)=>f.x",{"_index":982,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["ydata",{"_index":971,"title":{},"body":{"components/DiferredDataChartComponent.html":{}}}],["year:\"2010",{"_index":217,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["year:\"2017",{"_index":208,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["year:\"2021",{"_index":202,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["year_company",{"_index":382,"title":{},"body":{"components/AboutCandidateComponent.html":{}}}],["z",{"_index":593,"title":{},"body":{"components/AppComponent.html":{}}}],["zone.js",{"_index":1426,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":607,"title":{},"body":{"modules/AppModule.html":{},"modules/FeaturesModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutCandidateComponent.html":{"url":"components/AboutCandidateComponent.html","title":"component - AboutCandidateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutCandidateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about-candidate/about-candidate.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about-candidate\n            \n\n\n\n            \n                styleUrls\n                ./about-candidate.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about-candidate.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/about-candidate/about-candidate.component.ts:125\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/about-candidate/about-candidate.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  labels: [\n    'Nodejs',\n    \"Nestjs\",\n    \"Angular\",\n    \"Reactjs\",\n    \"Python\",\n    \"Django\",\n    \"Flask\",\n    \"Recommender system\",\n    \"Machine learning\",\n    \"Clean Architecture\",\n    \"Microservice Architecture\",\n    'Cloud native app development',\n    \"Docker\",\n    \"UML\",\n    \"SCRUM/UP\",\n    \"JavaScript/TypeScript\"\n  ],\n  datasets: [{\n    label: 'Domaine de competence.',\n    data: [4.5,4.5,4.5,2.5,4,3,3,3,2.5,4,3,3,2.8,3,2.3,4.5],\n    borderColor: (()=>{\n      const bg:any=[]\n      for(let i=0;i{\n      const bg:any=[]\n      for(let i=0;i\n                    \n                \n                    \n                        \n                                Defined in src/app/about-candidate/about-candidate.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  name:\"David Kouamé N'DRI\",\n  jobTitle:\"Sofware Engineer\",\n  photo:\"assets/david.png\",\n  email1:\"kouame.ndri1998@gmail.com\",\n  email2:\"kouame.ndri@supcom.tn\",\n  linkedIn:\"linkedin.com/in/kouamé-david-n-dri-1615a5186\",\n  phone:\"+216 27999299\",\n  address:\"Ariana, Tunisie\",\n  hobbies:[\n    'Football',\n    \"Musique\",\n    \"Internet\",\n    \"Lecture\"\n  ],\n  profile:`Ingénieur en génie logiciel avec deux (02) années de pratique dans le développement, la conception et la maintenance de logiciels.\n  Fortes compétences en résolution de problèmes, analyse de systèmes complexes et collaboration avec des équipes interfonctionnelles.\n  Expérience approfondie dans le développement de solutions logicielles robustes, évolutives et efficaces pour répondre aux besoins des utilisateurs et des clients.`,\n  experience:[\n    {\n      time:\"Mars 2023-Juin 2023\",\n      jobTitle:\"Remote software Developer\",\n      company:\"SeeWatch, Pau, Nouvelle Aquitaine France\",\n      descriptioon:[\n        \" Développement Backend avec Nodejs\",\n        \"conception de la base de données\",\n        \"\tUtilisation des API de paiement\",\n        \"\tdocumentation du code via Swagger.\",\n        ]\n    },\n    {\n      time:\"Depuis Juin 2022\",\n      jobTitle:\"Lead Developer\",\n      company:\"Aladin Technologies,Abidjan\",\n      descriptioon:[\n        \"Conception et développement\",\n        \"gestion de projet avec la methode UP\",\n        \"mise en place d’architectures logicielles robustes\",\n        \"développement basé sur les principes de Clean Architecture\"\n        ]\n    },\n    {\n      time:\"Février 2022- Juin 2022\",\n      jobTitle:\"Stage Ingénieur génie logiciel\",\n      company:\"Laboratoire Médiatron Sup’Com Tunisie\",\n      descriptioon:[\n        \"Conception et développement\",\n        \"Etat de l’art des systèmes de recomandation\",\n        \"modelisation d’un modèle basé sur l’approche Matrix Factorisation à l’aide des données implicites pour la mise en œuvre d’un système de recommendation de services \",\n        \"architecture microservices.\"\n        ]\n    }\n\n  ],\neducations:[\n\n  {\n   school:\"Sup'com Tunis\",\n   year:\"2021-2022\",\n   degree:\"Master systèmes d'information et  genie Logiciel \"\n  },\n  {\n    school:\"ESATIC, Abidjan\",\n    year:\"2017-2020\",\n    degree:\"Licence systèmes reseaux informatiques et telecom \"\n   },\n   {\n    school:\"Lycée Moderne Oumé.\",\n    year:\"2010-2017\",\n    degree:\"Baccalauréat scientifique option serie C. \"\n   }\n  ]\n}\n                    \n                \n                    \n                        \n                                Defined in src/app/about-candidate/about-candidate.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport Chart from 'chart.js/auto';\nimport { getRandomRgb } from 'src/utils';\n//import { pdfDefaultOptions } from 'ngx-extended-pdf-viewer';\n\n@Component({\n  selector: 'app-about-candidate',\n  templateUrl: './about-candidate.component.html',\n  styleUrls: ['./about-candidate.component.scss']\n})\nexport class AboutCandidateComponent implements OnInit {\nuser={\n  name:\"David Kouamé N'DRI\",\n  jobTitle:\"Sofware Engineer\",\n  photo:\"assets/david.png\",\n  email1:\"kouame.ndri1998@gmail.com\",\n  email2:\"kouame.ndri@supcom.tn\",\n  linkedIn:\"linkedin.com/in/kouamé-david-n-dri-1615a5186\",\n  phone:\"+216 27999299\",\n  address:\"Ariana, Tunisie\",\n  hobbies:[\n    'Football',\n    \"Musique\",\n    \"Internet\",\n    \"Lecture\"\n  ],\n  profile:`Ingénieur en génie logiciel avec deux (02) années de pratique dans le développement, la conception et la maintenance de logiciels.\n  Fortes compétences en résolution de problèmes, analyse de systèmes complexes et collaboration avec des équipes interfonctionnelles.\n  Expérience approfondie dans le développement de solutions logicielles robustes, évolutives et efficaces pour répondre aux besoins des utilisateurs et des clients.`,\n  experience:[\n    {\n      time:\"Mars 2023-Juin 2023\",\n      jobTitle:\"Remote software Developer\",\n      company:\"SeeWatch, Pau, Nouvelle Aquitaine France\",\n      descriptioon:[\n        \" Développement Backend avec Nodejs\",\n        \"conception de la base de données\",\n        \"\tUtilisation des API de paiement\",\n        \"\tdocumentation du code via Swagger.\",\n        ]\n    },\n    {\n      time:\"Depuis Juin 2022\",\n      jobTitle:\"Lead Developer\",\n      company:\"Aladin Technologies,Abidjan\",\n      descriptioon:[\n        \"Conception et développement\",\n        \"gestion de projet avec la methode UP\",\n        \"mise en place d’architectures logicielles robustes\",\n        \"développement basé sur les principes de Clean Architecture\"\n        ]\n    },\n    {\n      time:\"Février 2022- Juin 2022\",\n      jobTitle:\"Stage Ingénieur génie logiciel\",\n      company:\"Laboratoire Médiatron Sup’Com Tunisie\",\n      descriptioon:[\n        \"Conception et développement\",\n        \"Etat de l’art des systèmes de recomandation\",\n        \"modelisation d’un modèle basé sur l’approche Matrix Factorisation à l’aide des données implicites pour la mise en œuvre d’un système de recommendation de services \",\n        \"architecture microservices.\"\n        ]\n    }\n\n  ],\neducations:[\n\n  {\n   school:\"Sup'com Tunis\",\n   year:\"2021-2022\",\n   degree:\"Master systèmes d'information et  genie Logiciel \"\n  },\n  {\n    school:\"ESATIC, Abidjan\",\n    year:\"2017-2020\",\n    degree:\"Licence systèmes reseaux informatiques et telecom \"\n   },\n   {\n    school:\"Lycée Moderne Oumé.\",\n    year:\"2010-2017\",\n    degree:\"Baccalauréat scientifique option serie C. \"\n   }\n  ]\n}\n\ndata:any = {\n  labels: [\n    'Nodejs',\n    \"Nestjs\",\n    \"Angular\",\n    \"Reactjs\",\n    \"Python\",\n    \"Django\",\n    \"Flask\",\n    \"Recommender system\",\n    \"Machine learning\",\n    \"Clean Architecture\",\n    \"Microservice Architecture\",\n    'Cloud native app development',\n    \"Docker\",\n    \"UML\",\n    \"SCRUM/UP\",\n    \"JavaScript/TypeScript\"\n  ],\n  datasets: [{\n    label: 'Domaine de competence.',\n    data: [4.5,4.5,4.5,2.5,4,3,3,3,2.5,4,3,3,2.8,3,2.3,4.5],\n    borderColor: (()=>{\n      const bg:any=[]\n      for(let i=0;i{\n      const bg:any=[]\n      for(let i=0;i{\n          const bg:any=[]\n          for(let i=0;i{\n          const bg:any=[]\n          for(let i=0;i\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n                \n            \n            \n            {{user.name}} {{user.jobTitle}} \n        \n\n        \n            Contacts\n            \n                \n                    \n                    {{user.phone}}\n                \n                \n                    \n                    {{user.email1}}\n                \n                \n                  \n                  {{user.email2}}\n              \n                \n                    \n                    \n                    \n                      {{user.linkedIn}}\n                    \n                \n                \n                    \n                    {{user.address}}\n                \n            \n        \n        \n            Education\n            \n                \n                    {{item.year}}\n                    {{item.degree}}\n                    {{item.school}}\n                \n\n            \n        \n        \n            Languages\n            \n                \n                    Anglais\n                    \n                        \n                    \n                \n            \n\n\n            \n                \n                    Français\n                    \n                        \n                    \n                \n            \n          \n\n        \n    \n        \n            Profil professionnel\n            \n              {{user.profile}}\n            \n        \n        \n            Experience\n            \n                \n                    {{item.time}}\n                    {{item.company}}\n                \n                \n                    {{item.jobTitle}}\n                    \n                      \n                            {{el}}\n                      \n                    \n                \n            \n\n\n        \n        \n            Competences\n            \n        \n        \n            Centres d’intérêts\n            \n\n        \n\n\n    \n    -->\n\n\n\n\n    \n\n    \n                \n                    ./about-candidate.component.scss\n                \n                @import url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700;800;900&display=swap\");\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: \"Poppins\", SansSerif;\n}\n\n.ed{\n  position: relative;\n  padding: 0%;\n}\n\n\n.container {\n  position: absolute;\n  width: 100%;\n  max-width: 1000px;\n  min-height: 1000px;\n  background-color: #fff;\n  margin: 50px;\n  display: grid;\n  left: 200px;\n  top:60px;\n  grid-template-columns: 1fr 2fr;\n  box-shadow: 0 35px 55px rgba(0, 0, 0, 0.1);\n}\n.container .left_Side {\n  position: relative;\n  background-color: #003147;\n  padding: 40px;\n}\n.profileText {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 20px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n}\n.profileText .imgBx {\n  position: relative;\n  width: 200px;\n  height: 200px;\n  border-radius: 50%;\n  overflow: hidden;\n}\n.profileText .imgBx img {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n.photo {\n  width: 100%;\n  height: auto;\n}\n.profileText h2 {\n  color: #fff;\n  font-size: 1.5em;\n  margin-top: 20px;\n  text-transform: uppercase;\n  text-align: center;\n  font-weight: 600;\n  line-height: 1.4em;\n}\n.profileText h2 span {\n  font-size: 0.8em;\n  font-weight: 300;\n}\n.contactInfo {\n  padding-top: 20px;\n}\n.title {\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: 600;\n  letter-spacing: 1px;\n  margin-bottom: 20px;\n}\n.contactInfo ul {\n  position: relative;\n}\n.contactInfo ul li {\n  list-style: none;\n  position: relative;\n  margin: 10px 0;\n  cursor: pointer;\n}\n.contactInfo ul li .icon {\n  display: inline-block;\n  width: 30px;\n  font-size: 18px;\n  color: #03a9f4;\n}\n.contactInfo ul li span {\n  color: #fff;\n  font-weight: 300;\n}\n.contactInfo.education li {\n  margin-bottom: 15px;\n}\n.contactInfo.education h5 {\n  color: #03a9f4;\n  font-weight: 400;\n}\n.contactInfo.education h4:nth-child(2) {\n  color: #fff;\n  font-weight: 300;\n}\n.contactInfo.education h4 {\n  color: #fff;\n  font-weight: 200;\n}\n.contactInfo.language .percent {\n  position: relative;\n  width: 100%;\n  height: 6px;\n  background-color: #081921;\n  display: block;\n  margin-top: 5px;\n}\n.contactInfo.language .percent div {\n  position: relative;\n  top: 0;\n  left: 0;\n  height: 100%;\n  background-color: #03a9f4;\n}\n.container .right_Side {\n  position: relative;\n  background-color: #fff;\n  padding: 40px;\n}\n.about {\n  margin-bottom: 50px;\n}\n.about:last-child {\n  margin-bottom: 0;\n}\n.title2 {\n  color: #003147;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  margin-bottom: 10px;\n}\np {\n  color: #081921;\n}\n.about .box {\n  display: flex;\n  flex-direction: row;\n  margin: 10px 0;\n}\n.about .box .year_company {\n  min-width: 350px;\n  margin-right: 10px;\n}\n.about .box .year_company h5 {\n  text-transform: uppercase;\n  color: #080fe1;\n  font-weight: 350;\n}\n.about .box .text h4 {\n  text-transform: uppercase;\n  color: #080fe1;\n  font-size: 16px;\n}\n.skills .box {\n  position: relative;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 150px 1fr;\n  justify-content: center;\n  align-items: center;\n}\n.skills .box h4 {\n  text-transform: uppercase;\n  color: #848c90;\n  font-weight: 300;\n}\n.skills .box .percent {\n  position: relative;\n  width: 100%;\n  height: 10px;\n  background-color: #f0f0f0;\n}\n.skills .box .percent div {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  background-color: #03a9f4;\n}\n.interest ul {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n}\n.interest ul li {\n  list-style: none;\n  color: black;\n  font-weight: 500;\n  margin: 10px 0;\n}\n.interest ul li .fa {\n  color: #03a9f4;\n  font-size: 18px;\n  width: 20px;\n}\n@media (max-width: 1000px) {\n  .container {\n    margin: 10px;\n    grid-template-columns: repeat(1, 1fr);\n  }\n  .interest ul {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n@media (max-width: 600px) {\n  .about .box {\n    flex-direction: column;\n  }\n  .about .box .year_company {\n    margin-bottom: 5px;\n  }\n  .interest ul {\n    grid-template-columns: repeat(1, 1fr);\n  }\n  .skills .box {\n    grid-template-columns: repeat(1, 1fr);\n  }\n}\n.englishw85 {\n  width: 85%;\n}\n.russianw90 {\n  width: 90%;\n}\n.frenchw100 {\n  width: 100%;\n}\n.htmlws30 {\n  width: 50%;\n}\n.cssws45 {\n  width: 45%;\n}\n.jsws70 {\n  width: 70%;\n}\n.phws40 {\n  width: 40%;\n}\n.ilws60 {\n  width: 60%;\n}\n.adw70 {\n  width: 70%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{user.name}} {{user.jobTitle}}                             Contacts                                                                    {{user.phone}}                                                                        {{user.email1}}                                                                    {{user.email2}}                                                                                                                {{user.linkedIn}}                                                                                            {{user.address}}                                                        Education                                                {{item.year}}                    {{item.degree}}                    {{item.school}}                                                        Languages                                                Anglais                                                                                                                                            Français                                                                                                                                      Profil professionnel                          {{user.profile}}                                        Experience                                                {{item.time}}                    {{item.company}}                                                    {{item.jobTitle}}                                                                      {{el}}                                                                                                  Competences                                        Centres d’intérêts                            -->'\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutCandidateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiInterface.html":{"url":"interfaces/ApiInterface.html","title":"interface - ApiInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/api/api.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getCurrentValues\n                                    \n                                \n                                \n                                    \n                                        getHourlyAvg\n                                    \n                                \n                                \n                                    \n                                        getLatestTransmissionStatus\n                                    \n                                \n                                \n                                    \n                                        getRange\n                                    \n                                \n                                \n                                    \n                                        getSessionInfo\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentValues\n                        \n                    \n                \n            \n            \n                \ngetCurrentValues(stationName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/api/api.interface.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHourlyAvg\n                        \n                    \n                \n            \n            \n                \ngetHourlyAvg(station: string, start: string, end: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/api/api.interface.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLatestTransmissionStatus\n                        \n                    \n                \n            \n            \n                \ngetLatestTransmissionStatus(stationId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/api/api.interface.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stationId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRange\n                        \n                    \n                \n            \n            \n                \ngetRange(station: string, start: string, end: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/api/api.interface.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSessionInfo\n                        \n                    \n                \n            \n            \n                \ngetSessionInfo(projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/api/api.interface.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\nexport interface CurrentValuesSchema{\n    station_name: string,\n    timestamp: string,\n    values:Array\n\n}\nexport interface SessionInfoSchema{\n  station: string,\n  description: string,\n  sessiond_id: number,\n  integrated_sensors: Array\n}\n\nexport interface RangeDataSchema{\n  raw_data:Array\n  station:string\n}\n\nexport interface LatestTransmissionsResponseScema\n  {\n    last_transmission_utc: string,\n    latitude: string,\n    longitude: number,\n    station_id: number,\n    station_name: string\n  }\n\nexport interface ApiInterface {\n  getCurrentValues(stationName:string):Observable\n  getSessionInfo(projectName:string):Observable>\n  getRange(station:string,start:string,end:string):Observable\n  getHourlyAvg(station:string,start:string,end:string):Observable\n  getLatestTransmissionStatus(stationId:number):Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiProxyModule.html":{"url":"modules/ApiProxyModule.html","title":"module - ApiProxyModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiProxyModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/@core/api-proxy/api-proxy.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {  NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ApiResourceService } from '../api/api.resource.service';\nimport { GetStationCurrentValuesService } from '../../UseCases/get-station-current-values.service';\nimport { GetStationSessionInfoUsecasesService } from '../../UseCases/get-station-session-info-usecases.service';\nimport { GetRangeUsecase } from '../../UseCases/get-range-usecase';\nimport { DiferredModeUsecases } from '..';\nimport { RealTimeUseCases } from 'src/UseCases';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers:[\n    {\n    provide:'station:currentVal',\n    useClass:GetStationCurrentValuesService\n  },\n  {\n    provide:'api',\n    useClass:ApiResourceService\n  },\n  {\n    provide:'station:sessionInfo',\n    useClass:GetStationSessionInfoUsecasesService\n  },\n  {\n    provide:\"station:range\",\n    useClass:GetRangeUsecase\n  },\n  {\n    provide:\"diferred:mode\",\n    useClass:DiferredModeUsecases\n  },\n  {\n    provide:'realTime:mode',\n    useClass:RealTimeUseCases\n  }\n      \n],\nexports:[]\n})\nexport class ApiProxyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiResourceService.html":{"url":"injectables/ApiResourceService.html","title":"injectable - ApiResourceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiResourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/api/api.resource.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentValues\n                            \n                            \n                                getHourlyAvg\n                            \n                            \n                                getLatestTransmissionStatus\n                            \n                            \n                                getRange\n                            \n                            \n                                getSessionInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/@core/api/api.resource.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentValues\n                        \n                    \n                \n            \n            \n                \ngetCurrentValues(stationName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/api/api.resource.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHourlyAvg\n                        \n                    \n                \n            \n            \n                \ngetHourlyAvg(station: string, start: string, end: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/api/api.resource.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLatestTransmissionStatus\n                        \n                    \n                \n            \n            \n                \ngetLatestTransmissionStatus(stationId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/api/api.resource.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stationId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRange\n                        \n                    \n                \n            \n            \n                \ngetRange(station: string, start: string, end: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/api/api.resource.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSessionInfo\n                        \n                    \n                \n            \n            \n                \ngetSessionInfo(projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/api/api.resource.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.baseApi\n                    \n                \n                    \n                        \n                                Defined in src/@core/api/api.resource.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiInterface, CurrentValuesSchema, LatestTransmissionsResponseScema, RangeDataSchema, SessionInfoSchema } from 'src/domain';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiResourceService implements ApiInterface {\n  baseApi:string=environment.baseApi;\n  constructor(private readonly http:HttpClient) { }\n\n   \n  getLatestTransmissionStatus(stationId: number): Observable {\n    return this.http.get(`${this.baseApi}${'getStationStatus'}/${stationId}`)\n  }\n\n  getHourlyAvg(station:string,start:string,end:string): Observable {\n    return this.http.get(`${this.baseApi}getHourlyAvg/${station}/${start}/${end}?pivot=${true}`)\n  }\n\n  getCurrentValues(stationName: string): Observable {\n    return this.http.get(this.baseApi+`getCurrentValues/${stationName}`)\n  }\n\n  getSessionInfo(projectName: string): Observable {\n    return this.http.get(this.baseApi+`getSessionInfo/${projectName}`)\n  }\n\n  getRange(station:string,start:string,end:string): Observable {\n    return this.http.get(this.baseApi+`getRange/${station}/${start}/${end}`)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isLoading\n                            \n                            \n                                settingSpinner\n                            \n                            \n                                spinning\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(isLoading: IsLoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isLoading\n                                                  \n                                                        \n                                                                        IsLoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IsLoadingService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        settingSpinner\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spinning\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { IsLoadingService } from 'src/@core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  spinning=false\n  settingSpinner=false\n  constructor( public isLoading:IsLoadingService){}\n  ngOnInit(): void {\n    setTimeout(()=>{\n      this.isLoading.load.subscribe((res:boolean)=>{\n        this.spinning=res\n      })\n    },1000) \n\n  }\n\n\n}\n\n    \n\n    \n        \n\n \n  \n \n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n\n\n.setting{\n  position: fixed;\n  z-index:0;\n  left:0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  text-align: center;\n  img{\n    position: relative;\n    top: 50%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutCandidateComponent\n\nAboutCandidateComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutCandidateComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApiProxyModule\n\nApiProxyModule\n\nAppModule -->\n\nApiProxyModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAq54HttpInterceptor\n\nAq54HttpInterceptor\n\nAppModule -->\n\nAq54HttpInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutCandidateComponent\n                        \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            Aq54HttpInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiProxyModule\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http'\nimport { ApiProxyModule, Aq54HttpInterceptor } from 'src/@core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from './shared';\nimport { AboutCandidateComponent } from './about-candidate/about-candidate.component';\n\n@NgModule({\n  declarations: [   \n    AppComponent,\n    AboutCandidateComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    ApiProxyModule,\n    RouterModule,\n    SharedModule\n  ],\n  bootstrap: [AppComponent],\n  schemas:[CUSTOM_ELEMENTS_SCHEMA],\n  providers:[\n    {\n      provide:HTTP_INTERCEPTORS,\n      multi:true,\n      useClass:Aq54HttpInterceptor\n    }\n  ] \n})\n\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AboutCandidateComponent } from './about-candidate/about-candidate.component';\n\nconst routes: Routes = [\n   {\n    path:'',\n    redirectTo:'/visualisation/real-time',\n    pathMatch:'full'\n   },  \n\n   {\n    component:AboutCandidateComponent,\n    path:'david'\n   },\n\n  {\n    path:'visualisation',\n    loadChildren:()=>\"import('./features').then(m=>m.FeaturesModule)\"\n  },\n  {\n    path:'**',\n    redirectTo:'/visualisation/real-time',\n    pathMatch:'full'\n   },\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{ scrollPositionRestoration: 'enabled',preloadingStrategy:PreloadAllModules})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/Aq54HttpInterceptor.html":{"url":"interceptors/Aq54HttpInterceptor.html","title":"interceptor - Aq54HttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  Aq54HttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/Interceptor/http-interceptor.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loader: IsLoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/@core/Interceptor/http-interceptor.interceptor.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        IsLoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/Interceptor/http-interceptor.interceptor.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IsLoadingService\n\n                    \n                \n                    \n                        \n                                Defined in src/@core/Interceptor/http-interceptor.interceptor.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable,throwError } from 'rxjs';\nimport { catchError,finalize } from 'rxjs/operators';\n\nimport { IsLoadingService } from '../Preloader/is-loading.service';\n\n@Injectable()\nexport class Aq54HttpInterceptor implements HttpInterceptor {\n\n  constructor(public loader:IsLoadingService) {}\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n   if(request.url.includes('getRange')||request.url.includes('getSessionInfo')){\n      this.loader.setLoading(true)\n      return next.handle(request).pipe(\n        finalize(()=>{\n            this.loader.setLoading(false);\n        }),\n        catchError((error:any)=>{\n          this.loader.setLoading(false);\n          console.log(error)\n          return throwError(error)\n        })\n        )\n   }else{\n    return next.handle(request)\n   }\n\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChartsComponent.html":{"url":"components/ChartsComponent.html","title":"component - ChartsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChartsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/charts/charts.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-charts\n            \n\n\n\n            \n                styleUrls\n                ./charts.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./charts.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                end\n                            \n                            \n                                start\n                            \n                            \n                                today\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRange\n                            \n                            \n                                changeStation\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                scatters\n                            \n                            \n                                selectedStation\n                            \n                            \n                                stations\n                            \n                            \n                                times\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/charts/charts.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activeRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chart\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'real-time-chart'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scatters\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedStation\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SMART188'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stations\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        times\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/charts/charts.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeRange\n                        \n                    \n                \n            \n            \n                \nchangeRange(station: string, message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/charts/charts.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeStation\n                        \n                    \n                \n            \n            \n                \nchangeStation(ev: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/charts/charts.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ev\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/charts/charts.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : moment().format('YYYY-MM-DD')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/charts/charts.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : moment().subtract(1,'days').format('YYYY-MM-DD')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/charts/charts.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Default value : moment().format('YYYY-MM-DD')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/charts/charts.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport * as moment from 'moment';\nimport { SweetAlert } from 'sweetalert/typings/core';\n//import  swal from 'sweetalert';\ndeclare const require:any\ndeclare var swal:SweetAlert\nswal=require('sweetalert')\n\n@Component({\n  selector: 'app-charts',\n  templateUrl: './charts.component.html',\n  styleUrls: ['./charts.component.scss']\n})\nexport class ChartsComponent implements OnInit {\n@Input('times') times:any[]=[];\n@Input('scatters') scatters:any[]=[];\n@Input('stations') stations:any[]=[];\n@Input('chart') chart='real-time-chart'\n@Input('selectedStation') selected='SMART188'\n\nstart:string=moment().subtract(1,'days').format('YYYY-MM-DD')\nend:string=moment().format('YYYY-MM-DD')\ntoday=moment().format('YYYY-MM-DD')\nconstructor(\n  private readonly activeRoute:ActivatedRoute\n\n) { }\n\n\n\n\n  ngOnInit(): void {\n    this.activeRoute.queryParams.subscribe((param:any)=>{\n      const {start,end,station}=param\n      start?this.start=start:null;\n      end?this.end=end:null;\n      station?this.selected=station:null\n    })\n  }\n\n\n\n  changeStation(ev:any){\n  const station =ev?.target.value;\n  if(station){\n    if(moment(this.end).format('YYYY-MM-DD')!=moment().subtract(1,'days').format('YYYY-MM-DD')||moment(this.start).format('YYYY-MM-DD')!=this.today){\n     this.changeRange(station,'vous allez changer la plage de temps et la station des capteurs.')\n    }else{\n\n      swal({\n        text:'vous allez changer de station de capteur',\n        icon:'warning',\n        buttons: {\n         cancel: true,\n         confirm: true,\n       }\n     }).then(res=>{\n     res?location.href=`${'/visualisation/diferred?station'}=${station}`:null\n     })\n    }\n  }\n}\n\nchangeRange(station:string='',message=''){\n  if(moment(this.end).format('YYYY-MM-DD')!=moment().subtract(1,'days').format('YYYY-MM-DD')||moment(this.start).format('YYYY-MM-DD')!=this.today){\n\n    const diff= moment(this.end).diff(moment(this.start),'days')\n\n    diff{this.end=moment(this.end).add(Math.abs(diff),'days').format('YYYY-MM-DD');this.start=moment(this.start).subtract(Math.abs(diff),'days').format('YYYY-MM-DD') })():null\n\n    if(diff{\n      if(resp){\n       station?location.href=`${'/visualisation/diferred?station'}=${station}&&start=${moment(this.start).format('YYYY-MM-DD')}&&end=${moment(this.end).format('YYYY-MM-DD')}`:location.href=`${'/visualisation/diferred?station'}=${this.selected}&&start=${moment(this.start).format('YYYY-MM-DD')}&&end=${moment(this.end).format('YYYY-MM-DD')}`\n      }\n    })\n  }else{\n    swal({\n      icon:'error',\n      text:'le nombre de jours ne doit pas exceder 30 jours.'\n    })\n  }\n\n  }\n}\n\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n      \n        Début\n       \n      \n      \n    \n\n    \n      \n        Fin\n     \n\n      \n      \n    \n\n    \n      \n        Stations\n        \n          {{item.station}}\n        \n      \n      \n    \n\n\n  \n\n\n\n\n\n  \n     \n    \n    \n      \n     \n    \n      \n     \n\n\n\n\n\n    \n\n    \n                \n                    ./charts.component.scss\n                \n                \n\n.content {\n  margin: 82px auto 32px;\n  padding: 0 1px;\n  max-width: 980px;\n  align-items: center;\n}\n\nsvg.material-icons {\n  height: 24px;\n  width: auto;\n}\n\nsvg.material-icons:not(:last-child) {\n  margin-right: 8px;\n}\n\n.card svg.material-icons path {\n  fill: #888;\n}\n\n.card-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: 16px;\n}\n\n\n.card a{\n  color: white;\n}\n\n.card {\n  all: unset;\n  border-radius: 4px;\n  border: 1px solid #eee;\n // background-color: #280df5;\n  color: rgb(75, 9, 207);\n  height: 40px;\n  width: 200px;\n  margin: 0 8px 16px;\n  padding: 16px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  transition: all 0.2s ease-in-out;\n  line-height: 24px;\n}\n\n.card-container .card:not(:last-child) {\n  margin-right: 0;\n}\n\n.card.card-small {\n  height: 16px;\n  width: 168px;\n}\n\n.card-container .card:not(.highlight-card) {\n  cursor: pointer;\n}\n\n.card-container .card:not(.highlight-card):hover {\n  transform: translateY(-3px);\n  box-shadow: 0 4px 17px rgba(0, 0, 0, 0.35);\n}\n\n.card-container .card:not(.highlight-card):hover .material-icons path {\n  fill: rgb(105, 103, 103);\n}\n\n.card.highlight-card {\n  background-color: #1976d2;\n  color: white;\n  font-weight: 600;\n  border: none;\n  width: auto;\n  min-width: 30%;\n  position: relative;\n}\n\n.card.card.highlight-card span {\n  margin-left: 60px;\n}\n\n\n\na,\na:visited,\na:hover {\n  color: #1976d2;\n  text-decoration: none;\n}\n\na:hover {\n  color: #125699;\n}\n\n\n.btn-primary{\nbackground-color: #0b043f;\nborder-radius: none;\n}\n\n.btn{\nborder-radius: none;\n}\n\n\n@media screen and (max-width: 767px) {\n  .card-container > *:not(.circle-link) ,\n\n\n  .card:not(.highlight-card) {\n    height: 16px;\n    margin: 8px 0;\n  }\n\n  .card.highlight-card span {\n    margin-left: 72px;\n  }\n\n\n}\n\nselect{\n  background-color: #0b043f;\n  color: white;\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Début                                         Fin                                       Stations                  {{item.station}}                                                                   '\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChartsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurrentValuesSchema.html":{"url":"interfaces/CurrentValuesSchema.html","title":"interface - CurrentValuesSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CurrentValuesSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/api/api.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            station_name\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                        \n                                            values\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        station_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        values:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\nexport interface CurrentValuesSchema{\n    station_name: string,\n    timestamp: string,\n    values:Array\n\n}\nexport interface SessionInfoSchema{\n  station: string,\n  description: string,\n  sessiond_id: number,\n  integrated_sensors: Array\n}\n\nexport interface RangeDataSchema{\n  raw_data:Array\n  station:string\n}\n\nexport interface LatestTransmissionsResponseScema\n  {\n    last_transmission_utc: string,\n    latitude: string,\n    longitude: number,\n    station_id: number,\n    station_name: string\n  }\n\nexport interface ApiInterface {\n  getCurrentValues(stationName:string):Observable\n  getSessionInfo(projectName:string):Observable>\n  getRange(station:string,start:string,end:string):Observable\n  getHourlyAvg(station:string,start:string,end:string):Observable\n  getLatestTransmissionStatus(stationId:number):Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DiferredDataChartComponent.html":{"url":"components/DiferredDataChartComponent.html","title":"component - DiferredDataChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DiferredDataChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/diferred-data-chart/diferred-data-chart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-diferred-data-chart\n            \n\n\n\n            \n                styleUrls\n                ./diferred-data-chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./diferred-data-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                data\n                            \n                            \n                                ranges\n                            \n                            \n                                scatterChart\n                            \n                            \n                                scatters\n                            \n                            \n                                selectedStation\n                            \n                            \n                                sensors\n                            \n                            \n                                stations\n                            \n                            \n                                stationsInfo\n                            \n                            \n                                timeData\n                            \n                            \n                                times\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                builder\n                            \n                            \n                                chartData\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                timeChart\n                            \n                            \n                                updateScatter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usecases: DiferredModeUsecases, activeRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usecases\n                                                  \n                                                        \n                                                                        DiferredModeUsecases\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activeRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        builder\n                        \n                    \n                \n            \n            \n                \n                        \n                    builder(st: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                st\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartData\n                        \n                    \n                \n            \n            \n                \nchartData(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeChart\n                        \n                    \n                \n            \n            \n                \ntimeChart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:244\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateScatter\n                        \n                    \n                \n            \n            \n                \nupdateScatter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:176\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    labels: [\n      'January',\n      'February',\n      'March',\n      'April'\n    ],\n    type:'line',\n    datasets: [{\n      type: 'bar',\n      label: 'Bar Dataset',\n      data: [13, 20, 30, 40],\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: `${getRandomRgb()}`\n    },\n    {\n      type: 'bar',\n      label: 'Line Dataset',\n      data: [50, 50, 50, 50],\n      fill: false,\n      borderColor: `${getRandomRgb()}`\n    }\n  ],\n  options: {\n    animations: {\n      tension: {\n        duration: 1000,\n        easing: 'linear',\n        from: 1,\n        to: 0,\n        loop: true\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        min: 0,\n       // max: 100\n      }\n    }\n  }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    start:moment().subtract(1,'days').format('YYYY-MM-DD'),\n    end:moment().format('YYYY-MM-DD')\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterChart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatters\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedStation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SMART188'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sensors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stationsInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SessionInfoSchema[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        times\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AQ54'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/diferred-data-chart/diferred-data-chart.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit ,Inject} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport Chart from 'chart.js/auto';\nimport * as moment from 'moment';\nimport { DiferredModeUsecases, chartBardDataSets, getRandomRgb, groupBy, mapDiferedData, mapToLabels, stationDataLabels } from 'src/@core';\nimport {  SessionInfoSchema } from 'src/domain';\n\n@Component({\n  selector: 'app-diferred-data-chart',\n  templateUrl: './diferred-data-chart.component.html',\n  styleUrls: ['./diferred-data-chart.component.scss']\n})\nexport class DiferredDataChartComponent implements OnInit {\n\n  constructor(\n    @Inject('diferred:mode') private readonly usecases:DiferredModeUsecases,\n    private readonly activeRoute:ActivatedRoute,\n  ) { }\n  scatters:string[]=[]\n  times:string[]=[]\n  scatterChart:any=null\n  stationsInfo:SessionInfoSchema[]=[];\n  stations:any[]=[]\n  selectedStation:string='SMART188'\n  sensors:any=[]\n  ranges={\n    start:moment().subtract(1,'days').format('YYYY-MM-DD'),\n    end:moment().format('YYYY-MM-DD')\n  }\n  title = 'AQ54';\n  data:any = {\n    labels: [\n      'January',\n      'February',\n      'March',\n      'April'\n    ],\n    type:'line',\n    datasets: [{\n      type: 'bar',\n      label: 'Bar Dataset',\n      data: [13, 20, 30, 40],\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: `${getRandomRgb()}`\n    },\n    {\n      type: 'bar',\n      label: 'Line Dataset',\n      data: [50, 50, 50, 50],\n      fill: false,\n      borderColor: `${getRandomRgb()}`\n    }\n  ],\n  options: {\n    animations: {\n      tension: {\n        duration: 1000,\n        easing: 'linear',\n        from: 1,\n        to: 0,\n        loop: true\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        min: 0,\n       // max: 100\n      }\n    }\n  }\n  }\n  chart:any;\n  timeData:any=[];\n\n  async ngOnInit(): Promise{\n     this.activeRoute.queryParams.subscribe(async(param:any)=>{\n      const {station,start,end}=param\n      if(station && start && end){\n        this.ranges.end=end\n        this.ranges.start=start\n       this.builder(station)\n      }else{\n      station?this.builder(station):this.builder()\n      }\n     })\n\n\n  }\n\n\nasync builder(st:string=''){\n  try{\n    if(st){\n      const {raw_data,station,sessionInfo:stationInfo} = await this.usecases.parallelExecution(st,this.ranges.start,this.ranges.end,this.title)\n      this.selectedStation=station;\n      this.stationsInfo =stationInfo;\n      this.stations=this.stationsInfo.map((item:SessionInfoSchema)=>({station:item.station,selected:item.station==this.selectedStation?true:false}));\n      const data:any= mapDiferedData(raw_data,this.stationsInfo[1].integrated_sensors);\n      this.chartData(data)\n    }else{\n      const {raw_data,station,sessionInfo}= await this.usecases.execute(this.ranges.start,this.ranges.end,this.title)\n      this.stationsInfo = sessionInfo\n      this.stations=this.stationsInfo.map((item:SessionInfoSchema,index:number)=>({station:item.station,selected:index==0}));\n      this.selectedStation=station;\n      const data:any= mapDiferedData(raw_data,this.stationsInfo[1].integrated_sensors);\n      this.chartData(data)\n    }\n    this.timeChart()\n    setInterval(()=>{\n      this.updateScatter()\n     },50000)\n  }catch(err:any){\n   // console.log(err)\n    throw new Error(err.message)\n  }\n\n\n\n}\n\n\nchartData(data:any=[]){\n\n  const labels= stationDataLabels(this.stationsInfo);\n  this.data.labels=labels;\n  const d= mapToLabels(data,labels);\n  const dt=chartBardDataSets(d);\n  this.data.datasets=dt;\n  this.timeData=dt;\n  this.timeData=this.timeData.map((item:any)=>({...item,group:Object.entries(groupBy(this.timeData,(t:any)=>t.unit)).map((e:any)=>({unit:e[0],values:e[1],label:item.label}))}))\n  const units:any[]=[];\n  this.timeData.forEach((item:any,index:any)=>{\n  const group=item.group.find((f:any)=>f.unit===item.unit&&!units.find(u=>u==f.unit))\n  const gp = item.group.find((g:any)=>g.unit===item.unit);\n  const xdata= gp?gp.values.find((v:any)=>v.label===item.label):null\n  const ydata = gp?gp.values.filter((v:any)=>v.label!=item.label && v.unit===item.unit):[]\n  const grp =groupBy(ydata,(g:any)=>g.label);\n\n// console.log(group,item)\n//   const scatterData:Array=[];\n\nif(ydata.length&&xdata){\n\nlet xgroup:any=groupBy(xdata.dayValues,(d:any)=>d.x)\n//const y:any = groupBy()\nconst obj=Object.entries(grp)\nlet y:any=obj.map((yd:any)=>({label:yd[0],ydata:groupBy(yd[1][0].dayValues,(f:any)=>f.x)}))\n\nlet dts:any=[]\nObject.keys(xgroup).forEach((key:any)=>{\n\n  y.forEach((yd:any)=>{\n    xgroup[key].forEach((xd:any,id:number)=>{\n      dts.push({data:{y:yd.ydata[key][id].y,x:xd.y},label:`${yd.label}=f(${item.label})`})\n    })\n  })\n\n})\n\nitem['dayVal']=groupBy(dts,(d:any)=>d.label)\n\n\n}\n//item['scatterValues']=scatterData\nunits.push(group?.unit)\ngroup?.values.forEach((v:any)=>{\nitem['gunit']=v.unit\nitem['dayData']?item['dayData']=item['dayData'].concat(v.dayValues):item['dayData']=v.dayValues;\nitem['monthData']?item['monthData']=item['monthData'].concat(v.monthDays):item['monthData']=v.monthDays\n})\n})\n\n}\n\nupdateScatter(){\n  const dt = this.timeData.filter((item:any)=>item.dayVal)\n  const d=dt[Math.floor(Math.random()*(dt.length-1))]\n  if(d){\n    const scatterConfig:any= {\n      type: 'scatter',\n      data:{\n        datasets:Object.entries(d.dayVal).map((item:any)=>{\n           //  console.log(item[0],item[1])\n            const data= item[1].map((dt:any)=>({...dt.data}))\n            //console.log(data)\n            return {data,label:item[0]}\n\n        }),//[{data:d?.scatterValues,label:d.label}],\n\n        backgroundColor:getRandomRgb(),\n\n      },\n      options: {\n        responsive:true,\n        plugins:{\n          legend: {\n            position: 'top',\n          },\n          title: {\n            display: true,\n           text: `Correlation entre les donnés d'un capteur pris de façon aleatoire dans ${this.selectedStation} et le reste des capteurs selon l'unité de mesure ${d.unit}. et le temps de transmission des données.`\n          }\n        },\n        scales:{\n          y:{\n            type:'linear',\n            beginAtZero: true,\n            title:{\n              display:true,\n             text:`autres capteurs(${d.unit})`\n            },\n            position:'left',\n             ticks: {\n              color: getRandomRgb()\n            },\n\n          },\n          x:{\n            type:'linear',\n            position:'bottom',\n            beginAtZero: true,\n            title:{\n              display:true,\n             text:`${d.label}(${d.unit})`\n            },\n            ticks: {\n              color: getRandomRgb()\n            },\n          },\n\n        }\n    }\n    }\n     this.scatterChart.options=scatterConfig.options\n     this.scatterChart.data=scatterConfig.data\n     this.scatterChart.update()\n    //console.log(scatterConfig)\n  }\n\n\n  }\n\ntimeChart(){\ntry{\n  const diffRange=moment(this.ranges.end).diff(moment(this.ranges.start),'days')>=30\n  const startTime=moment(this.ranges.start).toLocaleString().split(' ')\n  var x0=`${startTime[1]}/${startTime[3]}`\n  !diffRange?x0=`${startTime[2]}/${startTime[1]}`:null\n\n  const config:any=\n  {\n  type: 'bar',\n  data: {\n      datasets:this.timeData.filter((f:any)=>f.gunit).map((data:any)=>(\n        {\n          data:diffRange?data.monthData:data.dayData,\n          backgroundColor:getRandomRgb(),\n          borderColor:getRandomRgb(),\n          label:`${data.gunit}`,\n          fill:false,\n          tension:0.8\n      }\n      ))\n  },\n  options: {\n    responsive:true,\n    plugins:{\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: `Distribution temporelle des données selon le type de capteur  dans la station ${this.selectedStation}`,\n      }\n    },\n    scales: {\n        x: {\n            min:x0\n        }\n    }\n}\n\n }\n new Chart('chart',config)\n\nconst dt = this.timeData.filter((item:any)=>item.dayVal)\nconst d=dt[Math.floor(Math.random()*(dt.length-1))]\n\nif(d){\n  const scatterConfig:any= {\n    type: 'scatter',\n    data:{\n      datasets:Object.entries(d.dayVal).map((item:any)=>{\n         //  console.log(item[0],item[1])\n          const data= item[1].map((dt:any)=>({...dt.data}))\n          //console.log(data)\n          return {data,label:item[0]}\n\n      }),//[{data:d?.scatterValues,label:d.label}],\n\n      backgroundColor:getRandomRgb(),\n\n    },\n    options: {\n      responsive:true,\n      plugins:{\n        legend: {\n          position: 'top',\n        },\n        title: {\n          display: true,\n         text: `Correlation entre les donnés d'un capteur pris de façon aleatoire dans ${this.selectedStation} et le reste des capteurs selon l'unité de mesure ${d.unit}. et le temps de transmission des données.`\n        }\n      },\n      scales:{\n        y:{\n          type:'linear',\n          beginAtZero: true,\n          title:{\n            display:true,\n           text:`autres capteurs(${d.unit})`\n          },\n          position:'left',\n           ticks: {\n            color: getRandomRgb()\n          },\n\n        },\n        x:{\n          type:'linear',\n          position:'bottom',\n          beginAtZero: true,\n          title:{\n            display:true,\n           text:`${d.label}(${d.unit})`\n          },\n          ticks: {\n            color: getRandomRgb()\n          },\n        },\n\n      }\n  }\n  }\n // console.log(scatterConfig)\n   this.scatters.push('sc')\n   setTimeout(()=>{\n   this.scatterChart= new Chart('sc',scatterConfig)\n   },1000)\n}\n}catch(err:any){\n throw new Error(err.message)\n}\n\n}\n\n\n\n\n\n\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n                \n                    ./diferred-data-chart.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DiferredDataChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiferredModeUsecases.html":{"url":"injectables/DiferredModeUsecases.html","title":"injectable - DiferredModeUsecases","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiferredModeUsecases\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/UseCases/diferred-mode-usecases.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Async\n                                parallelExecution\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiInterface)\n                    \n                \n                        \n                            \n                                Defined in src/UseCases/diferred-mode-usecases.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(start: string, end: string, projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/diferred-mode-usecases.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        parallelExecution\n                        \n                    \n                \n            \n            \n                \n                        \n                    parallelExecution(stationName: string, start: string, end: string, projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/diferred-mode-usecases.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                stationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { ApiInterface } from \"src/domain\";\n\n\n@Injectable({providedIn:'root'})\nexport class DiferredModeUsecases {\n  constructor(@Inject('api') private readonly api:ApiInterface){}\n  /**\n   *\n   * @param stationName\n   * @param start\n   * @param end\n   * @param projectName\n   * @description we know the station so we can make api call in parallel to retrieve needed information for that usecase.\n   * @returns\n   */\n\n async parallelExecution(stationName:string='',start:string,end:string,projectName:string){\n    try{\n      const [{raw_data,station},sessionInfo] = await Promise.all([\n        await this.api.getRange(stationName,start,end).toPromise(),\n        await this.api.getSessionInfo(projectName).toPromise()\n      ])\n    return {raw_data,station,sessionInfo}\n    }catch(err:any){\n     throw new Error(err.message)\n    }\n  }\n\n\n  /**\n   *\n   * @param start\n   * @param end\n   * @param projectName\n   * @description Here we are fetching the sessions information in order to pick randomly a station and request needed data for the  usecase.\n   */\n\n  async execute(start:string,end:string,projectName:string){\n    try{\n    const sessionInfo = await this.api.getSessionInfo(projectName).toPromise()\n    const {raw_data,station} = await this.api.getRange(sessionInfo[Math.floor(Math.random()*(sessionInfo.length-1))].station,start,end).toPromise()\n    return {raw_data,station,sessionInfo}\n\n  }catch(err:any){\n      throw new Error(err.message)\n    }\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeaturesModule.html":{"url":"modules/FeaturesModule.html","title":"module - FeaturesModule","body":"\n                   \n\n\n\n\n    Modules\n    FeaturesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeaturesModule\n\n\n\ncluster_FeaturesModule_imports\n\n\n\ncluster_FeaturesModule_declarations\n\n\n\n\nDiferredDataChartComponent\n\nDiferredDataChartComponent\n\n\n\nFeaturesModule\n\nFeaturesModule\n\nFeaturesModule -->\n\nDiferredDataChartComponent->FeaturesModule\n\n\n\n\n\nRealTimeChartComponent\n\nRealTimeChartComponent\n\nFeaturesModule -->\n\nRealTimeChartComponent->FeaturesModule\n\n\n\n\n\nFeaturesRoutingModule\n\nFeaturesRoutingModule\n\nFeaturesModule -->\n\nFeaturesRoutingModule->FeaturesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nFeaturesModule -->\n\nSharedModule->FeaturesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/features.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DiferredDataChartComponent\n                        \n                        \n                            RealTimeChartComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeaturesRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RealTimeChartComponent } from './real-time-chart/real-time-chart.component';\nimport { DiferredDataChartComponent } from './diferred-data-chart/diferred-data-chart.component';\nimport { FeaturesRoutingModule } from './features-routing.module';\nimport { SharedModule } from '../shared';\n\n@NgModule({\n    declarations: [\n        RealTimeChartComponent,\n        DiferredDataChartComponent\n    ],\n    imports: [\n        CommonModule,\n        FeaturesRoutingModule,\n        SharedModule\n    ],\n    schemas:[CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class FeaturesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeaturesRoutingModule.html":{"url":"modules/FeaturesRoutingModule.html","title":"module - FeaturesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FeaturesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/features-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DiferredDataChartComponent } from './diferred-data-chart/diferred-data-chart.component';\nimport { RealTimeChartComponent } from './real-time-chart/real-time-chart.component';\n\nconst routes: Routes = [\n{\n  component:DiferredDataChartComponent,\n  path:'diferred'\n},\n{\n  component:RealTimeChartComponent,\n  path:'real-time'\n}\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FeaturesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/footer/footer.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/footer/footer.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  email:\"kouame.ndri1998@gmail.com\",\n  linkedIn:\"https://linkedin.com/in/kouamé-david-n-dri-1615a5186\"\n}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/footer/footer.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\nuser={\n  email:\"kouame.ndri1998@gmail.com\",\n  linkedIn:\"https://linkedin.com/in/kouamé-david-n-dri-1615a5186\"\n} \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n      {{user.email|lowercase}}\n  \n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                footer {\n  margin-top: 8px;\n  display: flex;\n  align-items: center;\n  line-height: 20px;\n  bottom: 0%;\n  position: fixed;\n  background: white !important;\n}\n\nfooter a {\n  display: flex;\n  align-items: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{user.email|lowercase}}  '\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetRangeUsecase.html":{"url":"injectables/GetRangeUsecase.html","title":"injectable - GetRangeUsecase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetRangeUsecase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/UseCases/get-range-usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiInterface)\n                    \n                \n                        \n                            \n                                Defined in src/UseCases/get-range-usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(station: string, start: string, end: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/get-range-usecase.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                start\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                end\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { ApiInterface } from \"src/domain\";\n\n@Injectable({providedIn:'root'})\nexport class GetRangeUsecase {\n  constructor(@Inject('api') private readonly api:ApiInterface) { }\n\n  async  execute(station:string,start:string,end:string):Promise{\n   try{\n    return await this.api.getRange(station,start,end).toPromise()\n   }\n   catch(err:any){\n    console.log(err)\n    throw new Error(err.message)\n   }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetStationCurrentValuesService.html":{"url":"injectables/GetStationCurrentValuesService.html","title":"injectable - GetStationCurrentValuesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetStationCurrentValuesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/UseCases/get-station-current-values.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiInterface)\n                    \n                \n                        \n                            \n                                Defined in src/UseCases/get-station-current-values.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(stationName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/get-station-current-values.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable,Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiInterface, CurrentValuesSchema } from 'src/domain';\n\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class GetStationCurrentValuesService {\n  constructor(@Inject('api') private readonly  api: ApiInterface) { }\n  execute(stationName: string): Observable {\n  return this.api.getCurrentValues(stationName)\n\n }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetStationSessionInfoUsecasesService.html":{"url":"injectables/GetStationSessionInfoUsecasesService.html","title":"injectable - GetStationSessionInfoUsecasesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetStationSessionInfoUsecasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/UseCases/get-station-session-info-usecases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiInterface)\n                    \n                \n                        \n                            \n                                Defined in src/UseCases/get-station-session-info-usecases.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/get-station-session-info-usecases.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiInterface, SessionInfoSchema } from 'src/domain';\n\n@Injectable({\n  providedIn:\"root\"\n})\n\nexport class GetStationSessionInfoUsecasesService {\n\n  constructor(@Inject('api') private readonly api:ApiInterface) { }\n\n  execute(projectName:string):Observable>{\n    return this.api.getSessionInfo(projectName)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                docUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/header/header.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"AQ54\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/header/header.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/header/header.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/header/header.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        docUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.docsURL\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/header/header.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment.prod';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n@Input('title') title=\"AQ54\"\nactive=true;\ndocUrl=environment.docsURL\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n  {{title}}\n   \n   \n    Différée\n    Temps Réel\n    Docs\n   \n    \n    Mon CV\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .spacer {\n  flex: 1;\n}\n\n\na{\n  text-decoration: none;\n  margin: 6px;\n}\n\n\n.menu{\n  width: 800px;\n  position: relative;\n  left: 30px;\n}\n.toolbar {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  background: #010f1d !important;\n  color: white;\n  font-weight: 500;\n  padding-right: 15px;\n  margin-right: 15px;\n}\n\n.toolbar img {\n  margin: 0 16px;\n}\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{title}}          Différée    Temps Réel    Docs           Mon CV'\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IsLoadingService.html":{"url":"injectables/IsLoadingService.html","title":"injectable - IsLoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IsLoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/Preloader/is-loading.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                load\n                            \n                            \n                                    Public\n                                setting\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setLoading\n                            \n                            \n                                setSettinging\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/@core/Preloader/is-loading.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setLoading\n                        \n                    \n                \n            \n            \n                \nsetLoading(value)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/Preloader/is-loading.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSettinging\n                        \n                    \n                \n            \n            \n                \nsetSettinging(value)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@core/Preloader/is-loading.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        load\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/@core/Preloader/is-loading.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setting\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/@core/Preloader/is-loading.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsLoadingService {\npublic load : BehaviorSubject= new BehaviorSubject(false)\npublic setting : BehaviorSubject= new BehaviorSubject(false)\n\n  constructor() { }\n\n  setLoading(value=false){\n    this.load.next(value)\n  }\n\n  setSettinging(value=false){\n    this.setting.next(value)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LatestTransmissionsResponseScema.html":{"url":"interfaces/LatestTransmissionsResponseScema.html","title":"interface - LatestTransmissionsResponseScema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LatestTransmissionsResponseScema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/api/api.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            last_transmission_utc\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                                \n                                        \n                                            station_id\n                                        \n                                \n                                \n                                        \n                                            station_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        last_transmission_utc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_transmission_utc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        station_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        station_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\nexport interface CurrentValuesSchema{\n    station_name: string,\n    timestamp: string,\n    values:Array\n\n}\nexport interface SessionInfoSchema{\n  station: string,\n  description: string,\n  sessiond_id: number,\n  integrated_sensors: Array\n}\n\nexport interface RangeDataSchema{\n  raw_data:Array\n  station:string\n}\n\nexport interface LatestTransmissionsResponseScema\n  {\n    last_transmission_utc: string,\n    latitude: string,\n    longitude: number,\n    station_id: number,\n    station_name: string\n  }\n\nexport interface ApiInterface {\n  getCurrentValues(stationName:string):Observable\n  getSessionInfo(projectName:string):Observable>\n  getRange(station:string,start:string,end:string):Observable\n  getHourlyAvg(station:string,start:string,end:string):Observable\n  getLatestTransmissionStatus(stationId:number):Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OninitResponseSchema.html":{"url":"interfaces/OninitResponseSchema.html","title":"interface - OninitResponseSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OninitResponseSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/UseCases/real-time-use-cases.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sessionInfo\n                                        \n                                \n                                \n                                        \n                                            stations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sessionInfo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionInfo:         SessionInfoSchema[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SessionInfoSchema[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stations:         CurrentValuesSchema[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CurrentValuesSchema[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport * as moment from \"moment\";\nimport { ApiInterface, CurrentValuesSchema, SessionInfoSchema } from \"src/domain\";\n\nexport interface OninitResponseSchema{\n  stations:CurrentValuesSchema[],\n  sessionInfo:SessionInfoSchema[]\n}\n\n@Injectable({providedIn:'root'})\nexport class RealTimeUseCases {\n  constructor(@Inject('api') private readonly api:ApiInterface){}\n/**\n *\n * @param projectName\n * @returns\n *  @description we retrieve needed data to start the realtime visualisation by fetching the current values of different sensors from all staions.\n\n */\n async Oninit(projectName:string):Promise{\ntry{\n  const sessionInfo= await this.api.getSessionInfo(projectName).toPromise();\n  const stations = await Promise.all(sessionInfo.map(async(station:SessionInfoSchema)=>await this.api.getCurrentValues(station.station).toPromise()));\n  return {stations,sessionInfo};\n}catch(err:any)\n{\n // console.log(err.message)\n  throw new Error(err.message)\n}\n\n  }\n\n  /**\n   *@description once a change is detected in a station we run api  call to get the latest values of the sensors in that station.\n    Doing that helps us in optimising the api calls.\n   * @param station\n    @returns\n   */\n async OnUpdate(station:string):Promise{\n  try{\n   return await this.api.getCurrentValues(station).toPromise()\n  }catch(err:any){\n   throw new Error(err.message)\n  }\n  }\n\n/**\n *@description we are fetching the latest transmission time in order to retrive the data of the give station.\n * @param sessionId\n * @returns\n */\n\n async canUpdate(sessionId:number):Promise{\n  try{\n    const response=await this.api.getLatestTransmissionStatus(sessionId).toPromise()\n    console.log(response,sessionId)\n    const {last_transmission_utc} = response//await this.api.getLatestTransmissionStatus(sessionId).toPromise();\n    const transTime= moment(last_transmission_utc);\n    const now=moment()\n    const value= now.diff(transTime,'minutes',true)==0&&last_transmission_utc?true:true\n    console.log(value)\n    return value\n  }catch(err:any){\n    throw new Error(err.message)\n  }\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RangeDataSchema.html":{"url":"interfaces/RangeDataSchema.html","title":"interface - RangeDataSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RangeDataSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/api/api.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            raw_data\n                                        \n                                \n                                \n                                        \n                                            station\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        raw_data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        raw_data:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        station\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\nexport interface CurrentValuesSchema{\n    station_name: string,\n    timestamp: string,\n    values:Array\n\n}\nexport interface SessionInfoSchema{\n  station: string,\n  description: string,\n  sessiond_id: number,\n  integrated_sensors: Array\n}\n\nexport interface RangeDataSchema{\n  raw_data:Array\n  station:string\n}\n\nexport interface LatestTransmissionsResponseScema\n  {\n    last_transmission_utc: string,\n    latitude: string,\n    longitude: number,\n    station_id: number,\n    station_name: string\n  }\n\nexport interface ApiInterface {\n  getCurrentValues(stationName:string):Observable\n  getSessionInfo(projectName:string):Observable>\n  getRange(station:string,start:string,end:string):Observable\n  getHourlyAvg(station:string,start:string,end:string):Observable\n  getLatestTransmissionStatus(stationId:number):Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RealTimeChartComponent.html":{"url":"components/RealTimeChartComponent.html","title":"component - RealTimeChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RealTimeChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/real-time-chart/real-time-chart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-real-time-chart\n            \n\n\n\n            \n                styleUrls\n                ./real-time-chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./real-time-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                data\n                            \n                            \n                                scatterChart\n                            \n                            \n                                scatters\n                            \n                            \n                                selectedSensor\n                            \n                            \n                                sensors\n                            \n                            \n                                stations\n                            \n                            \n                                time\n                            \n                            \n                                timeData\n                            \n                            \n                                times\n                            \n                            \n                                timesCahrt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                chartData\n                            \n                            \n                                initChartBar\n                            \n                            \n                                initScatter\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                onChartsInit\n                            \n                            \n                                    Async\n                                OntimeSerieChartInit\n                            \n                            \n                                scatterData\n                            \n                            \n                                    Async\n                                updateData\n                            \n                            \n                                    Async\n                                updateScatter\n                            \n                            \n                                    Async\n                                updateTimeSeries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usecases: RealTimeUseCases)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usecases\n                                                  \n                                                        \n                                                                        RealTimeUseCases\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        chartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    chartData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:253\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initChartBar\n                        \n                    \n                \n            \n            \n                \ninitChartBar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initScatter\n                        \n                    \n                \n            \n            \n                \ninitScatter(d: CurrentValuesSchema[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            CurrentValuesSchema[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onChartsInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onChartsInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:245\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        OntimeSerieChartInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    OntimeSerieChartInit(d: CurrentValuesSchema[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:330\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            CurrentValuesSchema[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterData\n                        \n                    \n                \n            \n            \n                \nscatterData(d: CurrentValuesSchema[], n: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:218\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            CurrentValuesSchema[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                n\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateData\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateData(s: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:269\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                s\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateScatter\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateScatter(v: CurrentValuesSchema[], station: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                v\n                                            \n                                                            CurrentValuesSchema[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTimeSeries\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTimeSeries(d: CurrentValuesSchema, station: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/real-time-chart/real-time-chart.component.ts:285\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                d\n                                            \n                                                            CurrentValuesSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n      labels: [\n        'January',\n        'February',\n        'March',\n        'April'\n      ],\n      datasets: [{\n        type: 'bar',\n        label: 'Bar Dataset',\n        data: [13, 20, 30, 40],\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: `${getRandomRgb()}`\n      },\n      {\n        type: 'bar',\n        label: 'Line Dataset',\n        data: [50, 50, 50, 50],\n        fill: false,\n        borderColor: `${getRandomRgb()}`\n      }\n    ],\n    options: {\n      animations: {\n        tension: {\n          duration: 1000,\n          easing: 'linear',\n          from: 1,\n          to: 0,\n          loop: true\n        }\n      },\n      scales: {\n        y: {\n          beginAtZero: true,\n          min: 0,\n          max: 100\n        }\n      }\n    }\n\n    }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterChart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatters\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedSensor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sensors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SessionInfoSchema[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        times\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timesCahrt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AQ54'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/real-time-chart/real-time-chart.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport Chart from 'chart.js/auto';\nimport { GetStationCurrentValuesService, chartBarDataSets, getRandomRgb, stationDataLabels, updateChartBarData,groupBy, RealTimeUseCases } from '../../../@core';\nimport {  CurrentValuesSchema, SessionInfoSchema } from 'src/domain';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-real-time-chart',\n  templateUrl: './real-time-chart.component.html',\n  styleUrls: ['./real-time-chart.component.scss']\n})\nexport class RealTimeChartComponent implements OnInit,OnDestroy {\n\n  constructor(\n    @Inject('realTime:mode') private readonly usecases:RealTimeUseCases,\n    ){}\n\n  ngOnDestroy(): void {\n    clearInterval(this.time)\n  }\n    selectedSensor:any\n    sensors:Array=[]\n    scatters:string[]=[]\n    scatterChart:any[]=[];\n    times:string[]=[]\n    timeData:any=[]\n    timesCahrt:any=[]\n    title = 'AQ54';\n    time:any=''\n    data:any = {\n      labels: [\n        'January',\n        'February',\n        'March',\n        'April'\n      ],\n      datasets: [{\n        type: 'bar',\n        label: 'Bar Dataset',\n        data: [13, 20, 30, 40],\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: `${getRandomRgb()}`\n      },\n      {\n        type: 'bar',\n        label: 'Line Dataset',\n        data: [50, 50, 50, 50],\n        fill: false,\n        borderColor: `${getRandomRgb()}`\n      }\n    ],\n    options: {\n      animations: {\n        tension: {\n          duration: 1000,\n          easing: 'linear',\n          from: 1,\n          to: 0,\n          loop: true\n        }\n      },\n      scales: {\n        y: {\n          beginAtZero: true,\n          min: 0,\n          max: 100\n        }\n      }\n    }\n\n    }\n    chart:any;\n\n    stations:SessionInfoSchema[]=[]\n    async ngOnInit(): Promise {\n      try{\n        await  this.onChartsInit()\n\n       this.time= setInterval(async()=>{\n        this.stations.forEach(async(s:any)=>{\n          await this.usecases.canUpdate(s.sessiond_id)?this.updateData(s):null\n        })\n        },1000)\n      }catch(err:any){\n        throw new Error(err.message)\n      }\n\n    }\n\n    initChartBar(){\n      return new Chart('real-time-chart',{data:this.data,options:{\n        responsive:true,\n        maintainAspectRatio: true,\n        plugins:{\n          legend: {\n            position: 'top',\n          },\n          title: {\n            display: true,\n            text: 'Distribution des données selon les types de capteurs par station.',\n          }\n        },\n      }})\n    }\n\n    initScatter(d:CurrentValuesSchema[]=[]){\n      var data =this.scatterData(d)\n      !data.length?data=this.scatterData(d,4):null\n     for(let sc=0;scthis.scatterChart.push({config,chart:new Chart((document.getElementById(this.scatters[sc]) as any),config)}),100)\n     }\n    }\n\n    async updateScatter(v:CurrentValuesSchema[]=[],station:string=''){\n     try{\n      let stationVal:CurrentValuesSchema[]=v\n      const data:any =this.scatterData(stationVal)\n    if(data.length){\n      const {chart}= this.scatterChart.find((sc:any)=>sc.config.station===station)\n      //console.log(chart.config.data,data)\n       chart.config.data.datasets.forEach((dt:any)=>{\n        const d=data[0].datasets.find((item:any)=>item.label===dt.label)\n        d?dt.data=dt.data.concat(d.data):null\n       });\n       chart.config.options=  {\n        responsive:true,\n        plugins:{\n          legend: {\n            position: 'top',\n          },\n          title: {\n            display: true,\n            text: `Correlation entre les donnés d'un capteur pris de façon aleatoire dans ${data[0]?.station} et le reste des capteurs selon l'unité de mesure (${data[0]?.unit}).`\n          }\n        },\n        scales:{\n          y:{\n            type:'linear',\n            position:'left',\n            beginAtZero: true,\n            title:{\n              display:true,\n              text:`${data[0].sensors.join(',')}(${data[0].unit})`\n            },\n             ticks: {\n              color: getRandomRgb()\n            },\n\n          },\n          x:{\n            type: 'linear',\n             title:{\n               display:true,\n               text:`${data[0].sensor}(${data[0].unit})`\n             },\n            beginAtZero: true,\n            position:'bottom',\n            ticks: {\n              color: getRandomRgb()\n            },\n          },\n\n        }\n    }\n     chart.update()\n    }\n     }catch(err:any){\n      throw new Error(err.message)\n     }\n\n  }\n\n    scatterData(d:CurrentValuesSchema[],n:any=null){\n    let data:any=[]\n      const selectedSensor=this.selectedSensor?this.selectedSensor:this.sensors[n||Math.floor(Math.random()*(this.sensors.length-1))]\n      if(selectedSensor)\n      d.forEach(item=>{\n        const values=item.values.filter(v=>!v.unit?null:v.unit.toLowerCase()===selectedSensor.unit?.toLowerCase() && v.sensor!=selectedSensor.type)\n        const selected=item.values.find(v=>v.sensor.toLowerCase()===selectedSensor.type.toLowerCase())\n        selected && values.length?data.push({\n          datasets:values.map(s=>({data:[{x:selected.value,y:s.value}],label:`${s.sensor}=f(${selected.sensor})`\n        })),\n        backgroundColor:getRandomRgb(),\n        station:item.station_name,\n        unit:selected?.unit,\n        sensor:selected.sensor,\n        sensors:values.map(s=>s.sensor)\n        }):null\n      })\n      let cnv=[]\n      for(let i=0;iu.label===s.station).forEach((item:any,index:number) => {\n         data.find((d:any)=>d.station==item.label)?item.data=data.find((d:any)=>d.station==item.label)?.data:this.chart.config.data.datasets.splice(index,1)\n        });\n        this.chart.update()\n        this.updateTimeSeries(stationData,s.station)\n        this.updateScatter([stationData],s.station)\n        }\n        catch(err:any){\n        throw new Error(err.message)\n      }\n    }\n\n  async updateTimeSeries(d:CurrentValuesSchema,station:string){\n   const stationData:CurrentValuesSchema[]= [d]\n   let data:any=stationData.map(item=>({time:item.timestamp,station:item.station_name,values:groupBy(item.values,(v:any)=>v.unit)}));\n   const dt:any= data.map((item:any)=>({...item,values:Object.entries(item.values).map(e=>e[1])}))\n   const {chart} = this.timesCahrt.find((c:any)=>c.config.station===station)\n   const config:any=\n          {\n          type: 'bar',\n          time:dt[0].time,\n          data: {\n              datasets: dt[0].values.map((item:any)=>({\n                data:\n                  item.map((item:any)=>({y:item.value,x:dt[0].time})),\n                  label:`(${item[0].unit})`,\n                  backgroundColor:getRandomRgb(),\n\n              })\n              )\n          },\n          options: {\n            responsive:true,\n            plugins:{\n              legend: {\n                position: 'top',\n              },\n              title: {\n                display: true,\n                text: `Distribution temporelle des données selon l'unité de mesure dans la station ${dt[0].station}`,\n\n              }\n            }\n\n        }\n        }\n          chart.config.options.plugins=config.options.plugins\n          //chart.config.options.scales.x.max=dt[0].time,\n         var update=false\n          config.data.datasets.forEach((dd:any)=>{\n           const its= chart.config.data.datasets.find((f:any)=>dd.label===f.label)\n           update= its&&!its.data.find((t:any)=>t.x===dt[0].time)?its.data.push(...dd.data):false\n          })\n       update?chart.update():null;\n  }\n\n\n   async OntimeSerieChartInit(d:CurrentValuesSchema[]){\n   const stationData:CurrentValuesSchema[]=d// await Promise.all(this.stations.map(async(s:SessionInfoSchema)=>await this.stattionCurrentVal.execute(s.station).toPromise()))\n\n   let data:any=stationData.map(item=>({time:item.timestamp,station:item.station_name,values:groupBy(item.values,(v:any)=>v.unit)}));\n\n   data=data.map((item:any)=>({...item,values:Object.entries(item.values).map(e=>e[1])}))\n\n   data.forEach((d:any,index:number)=>{\n   this.times.push(index+\"times\"+Date.now())\n    const config:any=\n      {\n      type: 'line',\n      time:d.time,\n      station:d.station,\n      data: {\n          datasets: d.values.map((item:any)=>({\n            data:\n              item.map((item:any)=>({y:item.value,x:d.time})),\n              label:`(${item[0].unit})`,\n              backgroundColor:getRandomRgb(),\n              borderColor:getRandomRgb(),\n              fill:false,\n              tension:0.8\n          })\n          )\n      },\n      options: {\n        responsive:true,\n        plugins:{\n          legend: {\n            position: 'top',\n          },\n          title: {\n            display: true,\n            text: `Distribution temporelle des données selon l'unité de mesure dans la station ${d.station}`,\n\n          }\n        },\n        scales: {\n            x: {\n                min:d.time,\n            },\n            y:{\n              min:0\n            }\n        }\n    }\n\n    }\n    setTimeout(()=>{\n      let chart = new Chart(this.times[index],config);\n      this.timesCahrt.push({chart,config})\n        },1000)\n   })\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n\n\n    \n\n    \n                \n                    ./real-time-chart.component.scss\n                \n                \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutCandidateComponent', 'selector': 'app-about-candidate'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'DiferredDataChartComponent', 'selector': 'app-diferred-data-chart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'RealTimeChartComponent', 'selector': 'app-real-time-chart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RealTimeChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RealTimeUseCases.html":{"url":"injectables/RealTimeUseCases.html","title":"injectable - RealTimeUseCases","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RealTimeUseCases\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/UseCases/real-time-use-cases.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canUpdate\n                            \n                            \n                                    Async\n                                Oninit\n                            \n                            \n                                    Async\n                                OnUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiInterface)\n                    \n                \n                        \n                            \n                                Defined in src/UseCases/real-time-use-cases.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canUpdate(sessionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/real-time-use-cases.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        Oninit\n                        \n                    \n                \n            \n            \n                \n                        \n                    Oninit(projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/real-time-use-cases.ts:20\n                        \n                    \n\n\n            \n                \n                         @description we retrieve needed data to start the realtime visualisation by fetching the current values of different sensors from all staions.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        OnUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    OnUpdate(station: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/UseCases/real-time-use-cases.ts:39\n                        \n                    \n\n\n            \n                \n                        Doing that helps us in optimising the api calls.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                station\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport * as moment from \"moment\";\nimport { ApiInterface, CurrentValuesSchema, SessionInfoSchema } from \"src/domain\";\n\nexport interface OninitResponseSchema{\n  stations:CurrentValuesSchema[],\n  sessionInfo:SessionInfoSchema[]\n}\n\n@Injectable({providedIn:'root'})\nexport class RealTimeUseCases {\n  constructor(@Inject('api') private readonly api:ApiInterface){}\n/**\n *\n * @param projectName\n * @returns\n *  @description we retrieve needed data to start the realtime visualisation by fetching the current values of different sensors from all staions.\n\n */\n async Oninit(projectName:string):Promise{\ntry{\n  const sessionInfo= await this.api.getSessionInfo(projectName).toPromise();\n  const stations = await Promise.all(sessionInfo.map(async(station:SessionInfoSchema)=>await this.api.getCurrentValues(station.station).toPromise()));\n  return {stations,sessionInfo};\n}catch(err:any)\n{\n // console.log(err.message)\n  throw new Error(err.message)\n}\n\n  }\n\n  /**\n   *@description once a change is detected in a station we run api  call to get the latest values of the sensors in that station.\n    Doing that helps us in optimising the api calls.\n   * @param station\n    @returns\n   */\n async OnUpdate(station:string):Promise{\n  try{\n   return await this.api.getCurrentValues(station).toPromise()\n  }catch(err:any){\n   throw new Error(err.message)\n  }\n  }\n\n/**\n *@description we are fetching the latest transmission time in order to retrive the data of the give station.\n * @param sessionId\n * @returns\n */\n\n async canUpdate(sessionId:number):Promise{\n  try{\n    const response=await this.api.getLatestTransmissionStatus(sessionId).toPromise()\n    console.log(response,sessionId)\n    const {last_transmission_utc} = response//await this.api.getLatestTransmissionStatus(sessionId).toPromise();\n    const transTime= moment(last_transmission_utc);\n    const now=moment()\n    const value= now.diff(transTime,'minutes',true)==0&&last_transmission_utc?true:true\n    console.log(value)\n    return value\n  }catch(err:any){\n    throw new Error(err.message)\n  }\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SessionInfoSchema.html":{"url":"interfaces/SessionInfoSchema.html","title":"interface - SessionInfoSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SessionInfoSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/api/api.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            integrated_sensors\n                                        \n                                \n                                \n                                        \n                                            sessiond_id\n                                        \n                                \n                                \n                                        \n                                            station\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        integrated_sensors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        integrated_sensors:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessiond_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessiond_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        station\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        station:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\nexport interface CurrentValuesSchema{\n    station_name: string,\n    timestamp: string,\n    values:Array\n\n}\nexport interface SessionInfoSchema{\n  station: string,\n  description: string,\n  sessiond_id: number,\n  integrated_sensors: Array\n}\n\nexport interface RangeDataSchema{\n  raw_data:Array\n  station:string\n}\n\nexport interface LatestTransmissionsResponseScema\n  {\n    last_transmission_utc: string,\n    latitude: string,\n    longitude: number,\n    station_id: number,\n    station_name: string\n  }\n\nexport interface ApiInterface {\n  getCurrentValues(stationName:string):Observable\n  getSessionInfo(projectName:string):Observable>\n  getRange(station:string,start:string,end:string):Observable\n  getHourlyAvg(station:string,start:string,end:string):Observable\n  getLatestTransmissionStatus(stationId:number):Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nChartsComponent\n\nChartsComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nChartsComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nChartsComponent \n\nChartsComponent \n\nChartsComponent  -->\n\nSharedModule->ChartsComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChartsComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ChartsComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { ChartsComponent } from './charts/charts.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    ChartsComponent,\n    FooterComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule\n  ],\n  exports:[\n    HeaderComponent,\n    ChartsComponent,\n    FooterComponent\n  ]\n})\n\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/@core/Interceptor/http-interceptor.interceptor.ts\n            \n            interceptor\n            Aq54HttpInterceptor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/@core/Preloader/is-loading.service.ts\n            \n            injectable\n            IsLoadingService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/@core/api/api.resource.service.ts\n            \n            injectable\n            ApiResourceService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/UseCases/diferred-mode-usecases.ts\n            \n            injectable\n            DiferredModeUsecases\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/UseCases/get-range-usecase.ts\n            \n            injectable\n            GetRangeUsecase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/UseCases/get-station-current-values.service.ts\n            \n            injectable\n            GetStationCurrentValuesService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/UseCases/get-station-session-info-usecases.service.ts\n            \n            injectable\n            GetStationSessionInfoUsecasesService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/UseCases/real-time-use-cases.ts\n            \n            injectable\n            RealTimeUseCases\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/UseCases/real-time-use-cases.ts\n            \n            interface\n            OninitResponseSchema\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/about-candidate/about-candidate.component.ts\n            \n            component\n            AboutCandidateComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/features/diferred-data-chart/diferred-data-chart.component.ts\n            \n            component\n            DiferredDataChartComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/features/real-time-chart/real-time-chart.component.ts\n            \n            component\n            RealTimeChartComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/shared/charts/charts.component.ts\n            \n            component\n            ChartsComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/shared/charts/charts.component.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/charts/charts.component.ts\n            \n            variable\n            swal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain/api/api.interface.ts\n            \n            interface\n            ApiInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain/api/api.interface.ts\n            \n            interface\n            CurrentValuesSchema\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/domain/api/api.interface.ts\n            \n            interface\n            LatestTransmissionsResponseScema\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain/api/api.interface.ts\n            \n            interface\n            RangeDataSchema\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain/api/api.interface.ts\n            \n            interface\n            SessionInfoSchema\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            chartBarDataSets\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            chartBardDataSets\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            getRandomRgb\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            mapData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            mapDiferedData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            mapToLabels\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            stationDataLabels\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            updateChartBarData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            variable\n            groupBy\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.0\n        \n            @angular/common : ~12.2.0\n        \n            @angular/compiler : ~12.2.0\n        \n            @angular/core : ~12.2.0\n        \n            @angular/forms : ~12.2.0\n        \n            @angular/platform-browser : ~12.2.0\n        \n            @angular/platform-browser-dynamic : ~12.2.0\n        \n            @angular/router : ~12.2.0\n        \n            @swimlane/ngx-charts : ^20.5.0\n        \n            bootstrap : ^5.3.2\n        \n            chart.js : ^4.4.1\n        \n            cors : ^2.8.5\n        \n            ejs : ^3.1.9\n        \n            express : ^4.18.2\n        \n            jquery : ^3.7.1\n        \n            moment : ^2.30.1\n        \n            morgan : ^1.10.0\n        \n            ng2-pdf-viewer : ^10.0.0\n        \n            ngx-csv-parser : ^1.3.1\n        \n            ngx-extended-pdf-viewer : ^19.0.3\n        \n            rxjs : ~6.6.0\n        \n            sweetalert : ^2.1.2\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            chartBarDataSets   (src/.../utils.ts)\n                        \n                        \n                            chartBardDataSets   (src/.../utils.ts)\n                        \n                        \n                            getRandomRgb   (src/.../utils.ts)\n                        \n                        \n                            mapData   (src/.../utils.ts)\n                        \n                        \n                            mapDiferedData   (src/.../utils.ts)\n                        \n                        \n                            mapToLabels   (src/.../utils.ts)\n                        \n                        \n                            stationDataLabels   (src/.../utils.ts)\n                        \n                        \n                            updateChartBarData   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        chartBarDataSets\n                        \n                    \n                \n            \n            \n                \nchartBarDataSets(stationData, labels)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                stationData\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                labels\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartBardDataSets\n                        \n                    \n                \n            \n            \n                \nchartBardDataSets(stationData)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                stationData\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomRgb\n                        \n                    \n                \n            \n            \n                \ngetRandomRgb()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapData\n                        \n                    \n                \n            \n            \n                \nmapData(data, labels)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                labels\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapDiferedData\n                        \n                    \n                \n            \n            \n                \nmapDiferedData(data, sensors)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sensors\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapToLabels\n                        \n                    \n                \n            \n            \n                \nmapToLabels(data: any, labels: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                labels\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stationDataLabels\n                        \n                    \n                \n            \n            \n                \nstationDataLabels(stations)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stations\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateChartBarData\n                        \n                    \n                \n            \n            \n                \nupdateChartBarData(stationData, labels)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                stationData\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                labels\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAQ54\nThis project was generated with Angular CLI version 12.2.18.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/  directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiProxyModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeaturesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeaturesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_FeaturesModule\n\n\n\ncluster_FeaturesModule_declarations\n\n\n\ncluster_FeaturesModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAboutCandidateComponent\n\nAboutCandidateComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutCandidateComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApiProxyModule\n\nApiProxyModule\n\nAppModule -->\n\nApiProxyModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nFeaturesModule\n\nFeaturesModule\n\nFeaturesModule -->\n\nSharedModule->FeaturesModule\n\n\n\n\n\nChartsComponent \n\nChartsComponent \n\nChartsComponent  -->\n\nSharedModule->ChartsComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nAq54HttpInterceptor\n\nAq54HttpInterceptor\n\nAppModule -->\n\nAq54HttpInterceptor->AppModule\n\n\n\n\n\nDiferredDataChartComponent\n\nDiferredDataChartComponent\n\nFeaturesModule -->\n\nDiferredDataChartComponent->FeaturesModule\n\n\n\n\n\nRealTimeChartComponent\n\nRealTimeChartComponent\n\nFeaturesModule -->\n\nRealTimeChartComponent->FeaturesModule\n\n\n\n\n\nFeaturesRoutingModule\n\nFeaturesRoutingModule\n\nFeaturesModule -->\n\nFeaturesRoutingModule->FeaturesModule\n\n\n\n\n\nChartsComponent\n\nChartsComponent\n\nSharedModule -->\n\nChartsComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            groupBy   (src/.../utils.ts)\n                        \n                        \n                            require   (src/.../charts.component.ts)\n                        \n                        \n                            swal   (src/.../charts.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  baseApi:\"https://airqino-api.magentalab.it/\",\n  docsURL:\"http://localhost:8080/docs\"\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        groupBy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (list: T[], getKey: (item: T) => K) =>\n  list.reduce((previous, currentItem) => {\n    const group = getKey(currentItem);\n    if (!previous[group]) previous[group] = [];\n    previous[group].push(currentItem);\n    return previous;\n  }, {} as Record)\n                    \n                \n\n\n        \n    \n\n    src/app/shared/charts/charts.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SweetAlert\n\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
